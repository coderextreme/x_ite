/* X_ITE v8.8.2 */(()=>{"use strict";var e={n:t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},d:(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window[Symbol.for("X_ITE.X3D-8.8.2")].require("x_ite/Components");var n=e.n(t);const i=window[Symbol.for("X_ITE.X3D-8.8.2")].require("x_ite/Fields");var o=e.n(i);const r=window[Symbol.for("X_ITE.X3D-8.8.2")].require("x_ite/Base/X3DFieldDefinition");var a=e.n(r);const s=window[Symbol.for("X_ITE.X3D-8.8.2")].require("x_ite/Base/FieldDefinitionArray");var l=e.n(s);const u=window[Symbol.for("X_ITE.X3D-8.8.2")].require("x_ite/Components/Grouping/X3DGroupingNode");var d=e.n(u);const p=window[Symbol.for("X_ITE.X3D-8.8.2")].require("x_ite/Components/Core/X3DChildNode");var c=e.n(p);const b=window[Symbol.for("X_ITE.X3D-8.8.2")].require("x_ite/Base/X3DConstants");var w=e.n(b);const m=window[Symbol.for("X_ITE.X3D-8.8.2")].require("x_ite/Namespace");var h=e.n(m);function y(e){c().call(this,e),this.addType(w().X3DProductStructureChildNode)}Object.setPrototypeOf(y.prototype,c().prototype),Object.defineProperties(y,{typeName:{value:"X3DProductStructureChildNode",enumerable:!0},componentName:{value:"CADGeometry",enumerable:!0}});const O=y;h().set("x_ite/Components/CADGeometry/X3DProductStructureChildNode",O);const _=O;function f(e){d().call(this,e),_.call(this,e),this.addType(w().CADAssembly)}Object.assign(Object.setPrototypeOf(f.prototype,d().prototype),{}),Object.defineProperties(f,{typeName:{value:"CADAssembly",enumerable:!0},componentName:{value:"CADGeometry",enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze(["3.1","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(l())([new(a())(w().inputOutput,"metadata",new(o().SFNode)),new(a())(w().inputOutput,"name",new(o().SFString)),new(a())(w().inputOutput,"visible",new(o().SFBool)(!0)),new(a())(w().inputOutput,"bboxDisplay",new(o().SFBool)),new(a())(w().initializeOnly,"bboxSize",new(o().SFVec3f)(-1,-1,-1)),new(a())(w().initializeOnly,"bboxCenter",new(o().SFVec3f)),new(a())(w().inputOnly,"addChildren",new(o().MFNode)),new(a())(w().inputOnly,"removeChildren",new(o().MFNode)),new(a())(w().inputOutput,"children",new(o().MFNode))]),enumerable:!0}});const S=f;h().set("x_ite/Components/CADGeometry/CADAssembly",S);const v=S,N=window[Symbol.for("X_ITE.X3D-8.8.2")].require("x_ite/Components/Grouping/X3DBoundedObject");var F=e.n(N);const D=window[Symbol.for("X_ITE.X3D-8.8.2")].require("x_ite/Rendering/TraverseType");var C=e.n(D);function x(e){_.call(this,e),F().call(this,e),this.addType(w().CADFace),this.childNode=null,this.visibleNode=null,this.boundedObject=null}Object.assign(Object.setPrototypeOf(x.prototype,_.prototype),F().prototype,{initialize(){_.prototype.initialize.call(this),F().prototype.initialize.call(this),this._shape.addInterest("set_shape__",this),this.set_shape__()},getBBox(e,t){return this._bboxSize.getValue().equals(this.getDefaultBBoxSize())?this.visibleNode?.getBBox(e,t)??e.set():e.set(this._bboxSize.getValue(),this._bboxCenter.getValue())},set_shape__(){this.childNode&&(this.childNode._isCameraObject.removeInterest("set_cameraObject__",this),this.childNode._isPickableObject.removeInterest("set_transformSensors__",this),this.childNode._visible.removeInterest("set_visible__",this),this.childNode._bboxDisplay.removeInterest("set_bboxDisplay__",this)),this.childNode=null;try{const e=this._shape.getValue().getInnerNode(),t=e.getType();for(let n=t.length-1;n>=0;--n){switch(t[n]){case w().LOD:case w().Transform:case w().X3DShapeNode:e._isCameraObject.addInterest("set_cameraObject__",this),e._isPickableObject.addInterest("set_transformSensors__",this),e._visible.addInterest("set_visible__",this),e._bboxDisplay.addInterest("set_bboxDisplay__",this),this.childNode=e;break;default:continue}break}}catch{}this.childNode?delete this.traverse:this.traverse=Function.prototype,this.set_visible__(),this.set_bboxDisplay__()},set_cameraObject__(){this.setCameraObject(!!this.visibleNode?.isCameraObject())},set_transformSensors__(){this.setPickableObject(!!this.visibleNode?.isPickableObject())},set_visible__(){this.childNode?this.visibleNode=this.childNode._visible.getValue()?this.childNode:null:this.visibleNode=null,this.set_cameraObject__(),this.set_transformSensors__()},set_bboxDisplay__(){this.childNode?this.boundedObject=this.childNode._bboxDisplay.getValue()?this.childNode:null:this.boundedObject=null},traverse(e,t){switch(e){case C().POINTER:case C().CAMERA:case C().SHADOW:return void this.visibleNode?.traverse(e,t);case C().PICKING:{const n=this.getBrowser().getPickingHierarchy();return n.push(this),this.visibleNode?.traverse(e,t),void n.pop()}case C().COLLISION:return void this.visibleNode?.traverse(e,t);case C().DISPLAY:return this.visibleNode?.traverse(e,t),void this.boundedObject?.displayBBox(e,t)}},dispose(){F().prototype.dispose.call(this),_.prototype.dispose.call(this)}}),Object.defineProperties(x,{typeName:{value:"CADFace",enumerable:!0},componentName:{value:"CADGeometry",enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze(["3.1","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(l())([new(a())(w().inputOutput,"metadata",new(o().SFNode)),new(a())(w().inputOutput,"name",new(o().SFString)),new(a())(w().inputOutput,"visible",new(o().SFBool)(!0)),new(a())(w().inputOutput,"bboxDisplay",new(o().SFBool)),new(a())(w().initializeOnly,"bboxSize",new(o().SFVec3f)(-1,-1,-1)),new(a())(w().initializeOnly,"bboxCenter",new(o().SFVec3f)),new(a())(w().inputOutput,"shape",new(o().SFNode))]),enumerable:!0}});const g=x;h().set("x_ite/Components/CADGeometry/CADFace",g);const j=g;function I(e){d().call(this,e),this.addType(w().CADLayer)}Object.setPrototypeOf(I.prototype,d().prototype),Object.defineProperties(I,{typeName:{value:"CADLayer",enumerable:!0},componentName:{value:"CADGeometry",enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze(["3.1","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(l())([new(a())(w().inputOutput,"metadata",new(o().SFNode)),new(a())(w().inputOutput,"name",new(o().SFString)),new(a())(w().inputOutput,"visible",new(o().SFBool)(!0)),new(a())(w().inputOutput,"bboxDisplay",new(o().SFBool)),new(a())(w().initializeOnly,"bboxSize",new(o().SFVec3f)(-1,-1,-1)),new(a())(w().initializeOnly,"bboxCenter",new(o().SFVec3f)),new(a())(w().inputOnly,"addChildren",new(o().MFNode)),new(a())(w().inputOnly,"removeChildren",new(o().MFNode)),new(a())(w().inputOutput,"children",new(o().MFNode))]),enumerable:!0}});const z=I;h().set("x_ite/Components/CADGeometry/CADLayer",z);const A=z,P=window[Symbol.for("X_ITE.X3D-8.8.2")].require("x_ite/Components/Grouping/X3DTransformNode");var X=e.n(P);function B(e){X().call(this,e),_.call(this,e),this.addType(w().CADPart)}Object.assign(Object.setPrototypeOf(B.prototype,X().prototype),{}),Object.defineProperties(B,{typeName:{value:"CADPart",enumerable:!0},componentName:{value:"CADGeometry",enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze(["3.1","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(l())([new(a())(w().inputOutput,"metadata",new(o().SFNode)),new(a())(w().inputOutput,"name",new(o().SFString)),new(a())(w().inputOutput,"translation",new(o().SFVec3f)),new(a())(w().inputOutput,"rotation",new(o().SFRotation)),new(a())(w().inputOutput,"scale",new(o().SFVec3f)(1,1,1)),new(a())(w().inputOutput,"scaleOrientation",new(o().SFRotation)),new(a())(w().inputOutput,"center",new(o().SFVec3f)),new(a())(w().inputOutput,"visible",new(o().SFBool)(!0)),new(a())(w().inputOutput,"bboxDisplay",new(o().SFBool)),new(a())(w().initializeOnly,"bboxSize",new(o().SFVec3f)(-1,-1,-1)),new(a())(w().initializeOnly,"bboxCenter",new(o().SFVec3f)),new(a())(w().inputOnly,"addChildren",new(o().MFNode)),new(a())(w().inputOnly,"removeChildren",new(o().MFNode)),new(a())(w().inputOutput,"children",new(o().MFNode))]),enumerable:!0}});const T=B;h().set("x_ite/Components/CADGeometry/CADPart",T);const G=T,V=window[Symbol.for("X_ITE.X3D-8.8.2")].require("x_ite/Components/Rendering/X3DComposedGeometryNode");var M=e.n(V);function E(e){M().call(this,e),this.addType(w().IndexedQuadSet)}Object.assign(Object.setPrototypeOf(E.prototype,M().prototype),{initialize(){M().prototype.initialize.call(this),this._set_index.addFieldInterest(this._index)},getTriangleIndex:function(e){const t=e%6;return 4*Math.floor(e/6)+t%3+Math.floor(t/4)},getPolygonIndex(e){return this._index[e]},build(){let e=this._index.length;e-=e%4,M().prototype.build.call(this,4,e,6,e/4*6)}}),Object.defineProperties(E,{typeName:{value:"IndexedQuadSet",enumerable:!0},componentName:{value:"CADGeometry",enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze(["3.1","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(l())([new(a())(w().inputOutput,"metadata",new(o().SFNode)),new(a())(w().inputOnly,"set_index",new(o().MFInt32)),new(a())(w().initializeOnly,"solid",new(o().SFBool)(!0)),new(a())(w().initializeOnly,"ccw",new(o().SFBool)(!0)),new(a())(w().initializeOnly,"colorPerVertex",new(o().SFBool)(!0)),new(a())(w().initializeOnly,"normalPerVertex",new(o().SFBool)(!0)),new(a())(w().initializeOnly,"index",new(o().MFInt32)),new(a())(w().inputOutput,"attrib",new(o().MFNode)),new(a())(w().inputOutput,"fogCoord",new(o().SFNode)),new(a())(w().inputOutput,"color",new(o().SFNode)),new(a())(w().inputOutput,"texCoord",new(o().SFNode)),new(a())(w().inputOutput,"normal",new(o().SFNode)),new(a())(w().inputOutput,"coord",new(o().SFNode))]),enumerable:!0}});const q=E;h().set("x_ite/Components/CADGeometry/IndexedQuadSet",q);const R=q;function k(e){M().call(this,e),this.addType(w().QuadSet)}Object.assign(Object.setPrototypeOf(k.prototype,M().prototype),{getTriangleIndex:function(e){const t=e%6;return 4*Math.floor(e/6)+t%3+Math.floor(t/4)},build(){if(!this.getCoord())return;let e=this.getCoord().getSize();e-=e%4,M().prototype.build.call(this,4,e,6,e/4*6)},createNormals(e,t){return this.createFaceNormals(e,t)}}),Object.defineProperties(k,{typeName:{value:"QuadSet",enumerable:!0},componentName:{value:"CADGeometry",enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze(["3.1","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(l())([new(a())(w().inputOutput,"metadata",new(o().SFNode)),new(a())(w().initializeOnly,"solid",new(o().SFBool)(!0)),new(a())(w().initializeOnly,"ccw",new(o().SFBool)(!0)),new(a())(w().initializeOnly,"colorPerVertex",new(o().SFBool)(!0)),new(a())(w().initializeOnly,"normalPerVertex",new(o().SFBool)(!0)),new(a())(w().inputOutput,"attrib",new(o().MFNode)),new(a())(w().inputOutput,"fogCoord",new(o().SFNode)),new(a())(w().inputOutput,"color",new(o().SFNode)),new(a())(w().inputOutput,"texCoord",new(o().SFNode)),new(a())(w().inputOutput,"normal",new(o().SFNode)),new(a())(w().inputOutput,"coord",new(o().SFNode))]),enumerable:!0}});const L=k;h().set("x_ite/Components/CADGeometry/QuadSet",L);const Q=L;n().add({name:"CADGeometry",concreteNodes:[v,j,A,G,R,Q],abstractNodes:[_]});const H=void 0;h().set("assets/components/CADGeometry",H)})();