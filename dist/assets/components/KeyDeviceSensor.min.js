/* X_ITE v8.7.8 */(()=>{"use strict";var e={n:t=>{var s=t&&t.__esModule?()=>t.default:()=>t;return e.d(s,{a:s}),s},d:(t,s)=>{for(var i in s)e.o(s,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:s[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Components");var s=e.n(t);const i=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Fields");var a=e.n(i);const n=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Namespace");var o=e.n(n);const r=Symbol(),c=Symbol(),l=Symbol();function h(){this[r]=new Set}h.prototype={initialize:function(){const e=this.getElement();e.on("keydown.X3DKeyDeviceSensorContext",this[c].bind(this)),e.on("keyup.X3DKeyDeviceSensorContext",this[l].bind(this))},addKeyDeviceSensorNode:function(e){this[r].add(e)},removeKeyDeviceSensorNode:function(e){this[r].delete(e)},getKeyDeviceSensorNodes:function(){return this[r]},[c]:function(e){for(const t of this[r])t.keydown(e)},[l]:function(e){for(const t of this[r])t.keyup(e)}};const y=h;o().set("x_ite/Browser/KeyDeviceSensor/X3DKeyDeviceSensorContext",y);const _=y,u=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Base/X3DFieldDefinition");var b=e.n(u);const d=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Base/FieldDefinitionArray");var k=e.n(d);const K=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Components/Core/X3DSensorNode");var p=e.n(K);const f=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Base/X3DConstants");var w=e.n(f);function v(e){p().call(this,e),this.addType(w().X3DKeyDeviceSensorNode)}v.prototype=Object.assign(Object.create(p().prototype),{constructor:v,initialize:function(){p().prototype.initialize.call(this),this.getLive().addInterest("set_live__",this),this.set_live__()},set_live__:function(){this.getLive().getValue()?(this._enabled.addInterest("set_enabled__",this),this._enabled.getValue()&&this.enable()):(this._enabled.removeInterest("set_enabled__",this),this.disable())},set_enabled__:function(){this._enabled.getValue()?this.enable():this.disable()},enable:function(){this.getBrowser().addKeyDeviceSensorNode(this)},disable:function(){this.getBrowser().removeKeyDeviceSensorNode(this),this.release()},keydown:function(){},keyup:function(){},release:function(){}}),Object.defineProperties(v,{typeName:{value:"X3DKeyDeviceSensorNode",enumerable:!0},componentName:{value:"KeyDeviceSensor",enumerable:!0}});const S=v;o().set("x_ite/Components/KeyDeviceSensor/X3DKeyDeviceSensorNode",S);const m=S;function g(e){m.call(this,e),this.addType(w().KeySensor)}g.prototype=Object.assign(Object.create(m.prototype),{constructor:g,keydown:function(e){switch(e.preventDefault(),this._isActive.getValue()||(this._isActive=!0),e.which){case 16:this._shiftKey=!0;break;case 17:this._controlKey=!0;break;case 18:this._altKey=!0;break;case 112:this._actionKeyPress=1;break;case 113:this._actionKeyPress=2;break;case 114:this._actionKeyPress=3;break;case 115:this._actionKeyPress=4;break;case 116:this._actionKeyPress=5;break;case 117:this._actionKeyPress=6;break;case 118:this._actionKeyPress=7;break;case 119:this._actionKeyPress=8;break;case 120:this._actionKeyPress=9;break;case 121:this._actionKeyPress=10;break;case 122:this._actionKeyPress=11;break;case 123:this._actionKeyPress=12;break;case 36:this._actionKeyPress=13;break;case 35:this._actionKeyPress=14;break;case 33:this._actionKeyPress=15;break;case 34:this._actionKeyPress=16;break;case 38:this._actionKeyPress=17;break;case 40:this._actionKeyPress=18;break;case 37:this._actionKeyPress=19;break;case 39:this._actionKeyPress=20;break;default:if(e.charCode||e.keyCode)switch(e.key){case"AltGraph":case"CapsLock":case"Insert":break;case"Backspace":this._keyPress=String.fromCharCode(8);break;case"Delete":this._keyPress=String.fromCharCode(127);break;case"Enter":this._keyPress="\n";break;case"Escape":this._keyPress=String.fromCharCode(27);break;case"Tab":this._keyPress="\t";break;default:1===e.key.length&&(this._keyPress=e.key)}}},keyup:function(e){switch(e.preventDefault(),e.which){case 16:this._shiftKey=!1;break;case 17:this._controlKey=!1;break;case 18:this._altKey=!1;break;case 112:this._actionKeyRelease=1;break;case 113:this._actionKeyRelease=2;break;case 114:this._actionKeyRelease=3;break;case 115:this._actionKeyRelease=4;break;case 116:this._actionKeyRelease=5;break;case 117:this._actionKeyRelease=6;break;case 118:this._actionKeyRelease=7;break;case 119:this._actionKeyRelease=8;break;case 120:this._actionKeyRelease=9;break;case 121:this._actionKeyRelease=10;break;case 122:this._actionKeyRelease=11;break;case 123:this._actionKeyRelease=12;break;case 36:this._actionKeyRelease=13;break;case 35:this._actionKeyRelease=14;break;case 33:this._actionKeyRelease=15;break;case 34:this._actionKeyRelease=16;break;case 38:this._actionKeyRelease=17;break;case 40:this._actionKeyRelease=18;break;case 37:this._actionKeyRelease=19;break;case 39:this._actionKeyRelease=20;break;default:if(e.charCode||e.keyCode)switch(e.key){case"AltGraph":case"CapsLock":case"Insert":break;case"Backspace":this._keyRelease=String.fromCharCode(8);break;case"Delete":this._keyRelease=String.fromCharCode(127);break;case"Enter":this._keyRelease="\n";break;case"Escape":this._keyRelease=String.fromCharCode(27);break;case"Tab":this._keyRelease="\t";break;default:1===e.key.length&&(this._keyRelease=e.key)}}this._isActive.getValue()&&(this._isActive=!1)},release:function(){this._shiftKey.getValue()&&(this._shiftKey=!1),this._controlKey.getValue()&&(this._controlKey=!1),this._altKey.getValue()&&(this._altKey=!1)}}),Object.defineProperties(g,{typeName:{value:"KeySensor",enumerable:!0},componentName:{value:"KeyDeviceSensor",enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(k())([new(b())(w().inputOutput,"metadata",new(a().SFNode)),new(b())(w().inputOutput,"enabled",new(a().SFBool)(!0)),new(b())(w().outputOnly,"controlKey",new(a().SFBool)),new(b())(w().outputOnly,"shiftKey",new(a().SFBool)),new(b())(w().outputOnly,"altKey",new(a().SFBool)),new(b())(w().outputOnly,"actionKeyPress",new(a().SFInt32)),new(b())(w().outputOnly,"actionKeyRelease",new(a().SFInt32)),new(b())(w().outputOnly,"keyPress",new(a().SFString)),new(b())(w().outputOnly,"keyRelease",new(a().SFString)),new(b())(w().outputOnly,"isActive",new(a().SFBool))]),enumerable:!0}});const D=g;o().set("x_ite/Components/KeyDeviceSensor/KeySensor",D);const P=D;function C(e){m.call(this,e),this.addType(w().StringSensor)}C.prototype=Object.assign(Object.create(m.prototype),{constructor:C,keydown:function(e){switch(e.preventDefault(),e.key){case"Backspace":this._isActive.getValue()&&this._deletionAllowed.getValue()&&this._enteredText.length&&(this._enteredText=this._enteredText.getValue().substr(0,this._enteredText.length-1));break;case"Enter":this._finalText=this._enteredText,this._enteredText.set(""),this._isActive.getValue()&&(this._isActive=!1);break;case"Escape":this._enteredText.set(""),this._isActive.getValue()&&(this._isActive=!1);break;case"Tab":break;default:(e.charCode||e.keyCode)&&1===e.key.length&&(this._isActive.getValue()||(this._isActive=!0,this._enteredText=""),this._enteredText=this._enteredText.getValue()+e.key)}}}),Object.defineProperties(C,{typeName:{value:"StringSensor",enumerable:!0},componentName:{value:"KeyDeviceSensor",enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(k())([new(b())(w().inputOutput,"metadata",new(a().SFNode)),new(b())(w().inputOutput,"enabled",new(a().SFBool)(!0)),new(b())(w().inputOutput,"deletionAllowed",new(a().SFBool)(!0)),new(b())(w().outputOnly,"enteredText",new(a().SFString)),new(b())(w().outputOnly,"finalText",new(a().SFString)),new(b())(w().outputOnly,"isActive",new(a().SFBool))]),enumerable:!0}});const O=C;o().set("x_ite/Components/KeyDeviceSensor/StringSensor",O);const R=O;s().add({name:"KeyDeviceSensor",concreteNodes:[P,R],abstractNodes:[m],browserContext:_});const x=void 0;o().set("assets/components/KeyDeviceSensor",x)})();