/* X_ITE v8.9.6 */(()=>{"use strict";var e={n:t=>{var i=t&&t.__esModule?()=>t.default:()=>t;return e.d(i,{a:i}),i},d:(t,i)=>{for(var s in i)e.o(i,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:i[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Components");var i=e.n(t);const s=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Base/X3DBaseNode");var n=e.n(s);const o=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Fields");var r=e.n(o);const a=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Namespace");var l=e.n(a);function c(e){n().call(this,e),this.addChildObjects("dimension",new(r().SFInt32)(40))}Object.setPrototypeOf(c.prototype,n().prototype),Object.defineProperties(c,{typeName:{value:"Arc2DOptions",enumerable:!0}});const u=c;l().set("x_ite/Browser/Geometry2D/Arc2DOptions",u);const h=u;function p(e){n().call(this,e),this.addChildObjects("dimension",new(r().SFInt32)(40))}Object.setPrototypeOf(p.prototype,n().prototype),Object.defineProperties(p,{typeName:{value:"ArcClose2DOptions",enumerable:!0}});const g=p;l().set("x_ite/Browser/Geometry2D/ArcClose2DOptions",g);const d=g,m=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Components/Rendering/X3DGeometryNode");var y=e.n(m);const b=window[Symbol.for("X_ITE.X3D-8.9.6")].require("standard/Math/Numbers/Complex");var f=e.n(b);function w(e){n().call(this,e),this.addChildObjects("dimension",new(r().SFInt32)(40)),this.vertices=y().createArray()}Object.assign(Object.setPrototypeOf(w.prototype,n().prototype),{initialize(){this.addInterest("build",this),this.build()},getVertices(){return this.vertices},build(){const e=this._dimension.getValue(),t=2*Math.PI/e,i=this.vertices;i.length=0;for(let s=0;s<e;++s){const e=f().Polar(1,t*s),n=f().Polar(1,t*(s+1));i.push(e.real,e.imag,0,1),i.push(n.real,n.imag,0,1)}i.shrinkToFit()}}),Object.defineProperties(w,{typeName:{value:"Circle2DOptions",enumerable:!0}});const D=w;l().set("x_ite/Browser/Geometry2D/Circle2DOptions",D);const _=D;window[Symbol.for("X_ITE.X3D-8.9.6")].require("standard/Math/Numbers/Vector3");function O(e){n().call(this,e),this.addChildObjects("dimension",new(r().SFInt32)(40)),this.circleVertices=y().createArray(),this.diskTexCoords=y().createArray(),this.diskNormals=y().createArray(),this.diskVertices=y().createArray()}Object.assign(Object.setPrototypeOf(O.prototype,n().prototype),{initialize(){this.addInterest("build",this),this.build()},getCircleVertices(){return this.circleVertices},getDiskTexCoords(){return this.diskTexCoords},getDiskNormals(){return this.diskNormals},getDiskVertices(){return this.diskVertices},build:(()=>{const e=new(f())(.5,.5),t=new(f())(0,0),i=new(f())(0,0),s=new(f())(0,0),n=new(f())(0,0);return function(){const o=this._dimension.getValue(),r=2*Math.PI/o,a=this.circleVertices,l=this.diskTexCoords,c=this.diskNormals,u=this.diskVertices;a.length=0,l.length=0,c.length=0,u.length=0;for(let h=0;h<o;++h){const o=r*h,p=r*(h+1);t.setPolar(.5,o).add(e),i.setPolar(.5,p).add(e),s.setPolar(1,o),n.setPolar(1,p),a.push(s.real,s.imag,0,1),a.push(n.real,n.imag,0,1),l.push(.5,.5,0,1,t.real,t.imag,0,1,i.real,i.imag,0,1),c.push(0,0,1,0,0,1,0,0,1),u.push(0,0,0,1,s.real,s.imag,0,1,n.real,n.imag,0,1)}a.shrinkToFit(),l.shrinkToFit(),c.shrinkToFit(),u.shrinkToFit()}})()}),Object.defineProperties(O,{typeName:{value:"Disk2DOptions",enumerable:!0}});const v=O;l().set("x_ite/Browser/Geometry2D/Disk2DOptions",v);const V=v,S=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Components/Geometry3D/IndexedFaceSet");var x=e.n(S);const C=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Components/Rendering/Coordinate");var P=e.n(C);const M=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Components/Texturing/TextureCoordinate");var F=e.n(M);function T(e){n().call(this,e)}Object.assign(Object.setPrototypeOf(T.prototype,n().prototype),{initialize(){n().prototype.initialize.call(this)},getGeometry(){if(this.geometry)return this.geometry;this.geometry=new(x())(this.getExecutionContext()),this.geometry._texCoord=new(F())(this.getExecutionContext()),this.geometry._coord=new(P())(this.getExecutionContext());const e=this.geometry,t=this.geometry._texCoord.getValue(),i=this.geometry._coord.getValue();return e._texCoordIndex=new(r().MFInt32)(0,1,2,3,-1),e._coordIndex=new(r().MFInt32)(0,1,2,3,-1),t._point=new(r().MFVec2f)(new(r().SFVec2f)(1,1),new(r().SFVec2f)(0,1),new(r().SFVec2f)(0,0),new(r().SFVec2f)(1,0)),i._point=new(r().MFVec3f)(new(r().SFVec3f)(1,1,0),new(r().SFVec3f)(-1,1,0),new(r().SFVec3f)(-1,-1,0),new(r().SFVec3f)(1,-1,0)),t.setup(),i.setup(),e.setup(),this.geometry}}),Object.defineProperties(T,{typeName:{value:"Rectangle2DOptions",enumerable:!0}});const I=T;l().set("x_ite/Browser/Geometry2D/Rectangle2DOptions",I);const N=I,j=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Browser/Core/PrimitiveQuality");var A=e.n(j);function X(){}function G(e,t){const i=new t(this.getPrivateScene());return i.setup(),this[e]=function(){return i},Object.defineProperty(this,e,{enumerable:!1}),i}Object.assign(X.prototype,{initialize(){this.setPrimitiveQuality2D(this.getBrowserOptions().getPrimitiveQuality())},getArc2DOptions(){return G.call(this,"getArc2DOptions",h)},getArcClose2DOptions(){return G.call(this,"getArcClose2DOptions",d)},getCircle2DOptions(){return G.call(this,"getCircle2DOptions",_)},getDisk2DOptions(){return G.call(this,"getDisk2DOptions",V)},getRectangle2DOptions(){return G.call(this,"getRectangle2DOptions",N)},setPrimitiveQuality2D(e){const t=this.getArc2DOptions(),i=this.getArcClose2DOptions(),s=this.getCircle2DOptions(),n=this.getDisk2DOptions();switch(e){case A().LOW:t._dimension=20,i._dimension=20,s._dimension=20,n._dimension=20;break;case A().MEDIUM:t._dimension=40,i._dimension=40,s._dimension=40,n._dimension=40;break;case A().HIGH:t._dimension=80,i._dimension=80,s._dimension=80,n._dimension=80}}});const R=X;l().set("x_ite/Browser/Geometry2D/X3DGeometry2DContext",R);const k=R,B=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Base/X3DFieldDefinition");var z=e.n(B);const q=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Base/FieldDefinitionArray");var E=e.n(q);const U=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Components/Rendering/X3DLineGeometryNode");var L=e.n(U);const Q=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Base/X3DConstants");var H=e.n(Q);const W=window[Symbol.for("X_ITE.X3D-8.9.6")].require("standard/Math/Algorithm");var J=e.n(W);function K(e){L().call(this,e),this.addType(H().Arc2D),this._startAngle.setUnit("angle"),this._endAngle.setUnit("angle"),this._radius.setUnit("length")}Object.assign(Object.setPrototypeOf(K.prototype,L().prototype),{set_live__(){L().prototype.set_live__.call(this),this.getLive().getValue()?this.getBrowser().getArc2DOptions().addInterest("requestRebuild",this):this.getBrowser().getArc2DOptions().removeInterest("requestRebuild",this)},getSweepAngle(){const e=J().interval(this._startAngle.getValue(),0,2*Math.PI),t=J().interval(this._endAngle.getValue(),0,2*Math.PI);if(e===t)return 2*Math.PI;const i=Math.abs(t-e);return e>t?2*Math.PI-i:isNaN(i)?0:i},build(){const e=this.getBrowser().getArc2DOptions()._dimension.getValue(),t=this._startAngle.getValue(),i=Math.abs(this._radius.getValue()),s=this.getSweepAngle(),n=Math.max(3,Math.floor(s*e/(2*Math.PI))),o=this.getVertices();for(let e=0;e<n;++e){const r=t+s*(e/n),a=f().Polar(i,r),l=t+s*((e+1)/n),c=f().Polar(i,l);o.push(a.real,a.imag,0,1),o.push(c.real,c.imag,0,1)}this.getMin().set(-i,-i,0),this.getMax().set(i,i,0)}}),Object.defineProperties(K,{typeName:{value:"Arc2D",enumerable:!0},componentName:{value:"Geometry2D",enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(E())([new(z())(H().inputOutput,"metadata",new(r().SFNode)),new(z())(H().initializeOnly,"startAngle",new(r().SFFloat)),new(z())(H().initializeOnly,"endAngle",new(r().SFFloat)(1.5708)),new(z())(H().initializeOnly,"radius",new(r().SFFloat)(1))]),enumerable:!0}});const Y=K;l().set("x_ite/Components/Geometry2D/Arc2D",Y);const Z=Y;function $(e){y().call(this,e),this.addType(H().ArcClose2D),this.setGeometryType(2),this._startAngle.setUnit("angle"),this._endAngle.setUnit("angle"),this._radius.setUnit("length")}Object.assign(Object.setPrototypeOf($.prototype,y().prototype),{set_live__(){y().prototype.set_live__.call(this),this.getLive().getValue()?this.getBrowser().getArcClose2DOptions().addInterest("requestRebuild",this):this.getBrowser().getArcClose2DOptions().removeInterest("requestRebuild",this)},getSweepAngle(){const e=J().interval(this._startAngle.getValue(),0,2*Math.PI),t=J().interval(this._endAngle.getValue(),0,2*Math.PI);if(e===t)return 2*Math.PI;const i=Math.abs(t-e);return e>t?2*Math.PI-i:isNaN(i)?0:i},build:(()=>{const e=new(f())(.5,.5);return function(){const t=this.getBrowser().getArcClose2DOptions(),i="CHORD"===this._closureType.getValue(),s=t._dimension.getValue(),n=this._startAngle.getValue(),o=Math.abs(this._radius.getValue()),r=this.getSweepAngle(),a=Math.max(4,Math.floor(r*s/(2*Math.PI))),l=this.getTexCoords(),c=this.getNormals(),u=this.getVertices(),h=[],p=[];this.getMultiTexCoords().push(l);const g=a-1;for(let t=0;t<a;++t){const i=n+r*(t/g);h.push(f().Polar(.5,i).add(e)),p.push(f().Polar(o,i))}if(i){const e=h[0],t=p[0];for(let i=1;i<g;++i){const s=h[i],n=h[i+1],o=p[i],r=p[i+1];l.push(e.real,e.imag,0,1,s.real,s.imag,0,1,n.real,n.imag,0,1),c.push(0,0,1,0,0,1,0,0,1),u.push(t.real,t.imag,0,1,o.real,o.imag,0,1,r.real,r.imag,0,1)}}else for(let e=0;e<g;++e){const t=h[e],i=h[e+1],s=p[e],n=p[e+1];l.push(.5,.5,0,1,t.real,t.imag,0,1,i.real,i.imag,0,1),c.push(0,0,1,0,0,1,0,0,1),u.push(0,0,0,1,s.real,s.imag,0,1,n.real,n.imag,0,1)}this.getMin().set(-o,-o,0),this.getMax().set(o,o,0),this.setSolid(this._solid.getValue())}})()}),Object.defineProperties($,{typeName:{value:"ArcClose2D",enumerable:!0},componentName:{value:"Geometry2D",enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(E())([new(z())(H().inputOutput,"metadata",new(r().SFNode)),new(z())(H().initializeOnly,"closureType",new(r().SFString)("PIE")),new(z())(H().initializeOnly,"startAngle",new(r().SFFloat)),new(z())(H().initializeOnly,"endAngle",new(r().SFFloat)(1.5708)),new(z())(H().initializeOnly,"radius",new(r().SFFloat)(1)),new(z())(H().initializeOnly,"solid",new(r().SFBool))]),enumerable:!0}});const ee=$;l().set("x_ite/Components/Geometry2D/ArcClose2D",ee);const te=ee;function ie(e){L().call(this,e),this.addType(H().Circle2D),this._radius.setUnit("length")}Object.assign(Object.setPrototypeOf(ie.prototype,L().prototype),{set_live__(){L().prototype.set_live__.call(this),this.getLive().getValue()?this.getBrowser().getCircle2DOptions().addInterest("requestRebuild",this):this.getBrowser().getCircle2DOptions().removeInterest("requestRebuild",this)},build(){const e=this.getBrowser().getCircle2DOptions(),t=this.getVertices(),i=this._radius.getValue();if(1===i)this.setVertices(e.getVertices());else{const s=e.getVertices().getValue();for(let e=0,n=s.length;e<n;e+=4)t.push(s[e]*i,s[e+1]*i,0,1)}this.getMin().set(-i,-i,0),this.getMax().set(i,i,0)}}),Object.defineProperties(ie,{typeName:{value:"Circle2D",enumerable:!0},componentName:{value:"Geometry2D",enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(E())([new(z())(H().inputOutput,"metadata",new(r().SFNode)),new(z())(H().initializeOnly,"radius",new(r().SFFloat)(1))]),enumerable:!0}});const se=ie;l().set("x_ite/Components/Geometry2D/Circle2D",se);const ne=se,oe=window[Symbol.for("X_ITE.X3D-8.9.6")].require("x_ite/Components/Rendering/X3DPointGeometryNode");var re=e.n(oe);function ae(e){L().call(this,e),this.addType(H().Disk2D),this._innerRadius.setUnit("length"),this._outerRadius.setUnit("length")}Object.assign(Object.setPrototypeOf(ae.prototype,y().prototype),{initialize(){y().prototype.initialize.call(this)},set_live__(){y().prototype.set_live__.call(this),this.getLive().getValue()?this.getBrowser().getDisk2DOptions().addInterest("requestRebuild",this):this.getBrowser().getDisk2DOptions().removeInterest("requestRebuild",this)},build(){const e=this.getBrowser(),t=e.getContext(),i=e.getDisk2DOptions(),s=Math.min(Math.abs(this._innerRadius.getValue()),Math.abs(this._outerRadius.getValue())),n=Math.max(Math.abs(this._innerRadius.getValue()),Math.abs(this._outerRadius.getValue()));if(s===n){const e=this.getVertices();if(0===n)return e.push(0,0,0,1),this.getMin().set(0,0,0),this.getMax().set(0,0,0),this.setGeometryType(0),this.setPrimitiveMode(t.POINTS),this.setTransparent(!0),void this.setBase(re());if(1===n)this.setVertices(i.getCircleVertices());else{const t=i.getCircleVertices().getValue();for(let i=0,s=t.length;i<s;i+=4)e.push(t[i]*n,t[i+1]*n,0,1)}return this.getMin().set(-n,-n,0),this.getMax().set(n,n,0),this.setGeometryType(1),this.setPrimitiveMode(t.LINES),this.setTransparent(!1),void this.setBase(L())}if(0===s){if(this.getMultiTexCoords().push(i.getDiskTexCoords()),this.setNormals(i.getDiskNormals()),1===n)this.setVertices(i.getDiskVertices());else{const e=i.getDiskVertices().getValue(),t=this.getVertices();for(let i=0,s=e.length;i<s;i+=4)t.push(e[i]*n,e[i+1]*n,0,1)}return this.getMin().set(-n,-n,0),this.getMax().set(n,n,0),this.setGeometryType(2),this.setPrimitiveMode(t.TRIANGLES),this.setTransparent(!1),this.setSolid(this._solid.getValue()),void this.setBase(y())}const o=s/n,r=(1-o)/2,a=i.getDiskTexCoords().getValue(),l=i.getDiskVertices().getValue(),c=this.getTexCoords(),u=this.getNormals(),h=this.getVertices();this.getMultiTexCoords().push(c);for(let e=0,t=l.length;e<t;e+=12)c.push(a[e+4]*o+r,a[e+5]*o+r,0,1,a[e+4],a[e+5],0,1,a[e+8],a[e+9],0,1,a[e+4]*o+r,a[e+5]*o+r,0,1,a[e+8],a[e+9],0,1,a[e+8]*o+r,a[e+9]*o+r,0,1),u.push(0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1),h.push(l[e+4]*s,l[e+5]*s,0,1,l[e+4]*n,l[e+5]*n,0,1,l[e+8]*n,l[e+9]*n,0,1,l[e+4]*s,l[e+5]*s,0,1,l[e+8]*n,l[e+9]*n,0,1,l[e+8]*s,l[e+9]*s,0,1);this.getMin().set(-n,-n,0),this.getMax().set(n,n,0),this.setGeometryType(2),this.setPrimitiveMode(t.TRIANGLES),this.setTransparent(!1),this.setSolid(this._solid.getValue()),this.setBase(y())},setBase(e){this.intersectsLine=e.prototype.intersectsLine,this.intersectsBox=e.prototype.intersectsBox,this.displaySimple=e.prototype.displaySimple,this.display=e.prototype.display,this.displaySimpleParticles=e.prototype.displaySimpleParticles,this.displayParticles=e.prototype.displayParticles},updateRenderFunctions(){}}),Object.defineProperties(ae,{typeName:{value:"Disk2D",enumerable:!0},componentName:{value:"Geometry2D",enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(E())([new(z())(H().inputOutput,"metadata",new(r().SFNode)),new(z())(H().initializeOnly,"innerRadius",new(r().SFFloat)),new(z())(H().initializeOnly,"outerRadius",new(r().SFFloat)(1)),new(z())(H().initializeOnly,"solid",new(r().SFBool))]),enumerable:!0}});const le=ae;l().set("x_ite/Components/Geometry2D/Disk2D",le);const ce=le;function ue(e){L().call(this,e),this.addType(H().Polyline2D),this._lineSegments.setUnit("length")}Object.assign(Object.setPrototypeOf(ue.prototype,L().prototype),{build(){const e=this._lineSegments.getValue(),t=this.getVertices();for(let i=0,s=2*(this._lineSegments.length-1);i<s;i+=2)t.push(e[i+0],e[i+1],0,1),t.push(e[i+2],e[i+3],0,1)}}),Object.defineProperties(ue,{typeName:{value:"Polyline2D",enumerable:!0},componentName:{value:"Geometry2D",enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(E())([new(z())(H().inputOutput,"metadata",new(r().SFNode)),new(z())(H().initializeOnly,"lineSegments",new(r().MFVec2f))]),enumerable:!0}});const he=ue;l().set("x_ite/Components/Geometry2D/Polyline2D",he);const pe=he;function ge(e){re().call(this,e),this.addType(H().Polypoint2D),this._point.setUnit("length")}Object.assign(Object.setPrototypeOf(ge.prototype,re().prototype),{build(){const e=this._point.getValue(),t=this.getVertices();for(let i=0,s=2*this._point.length;i<s;i+=2)t.push(e[i],e[i+1],0,1)}}),Object.defineProperties(ge,{typeName:{value:"Polypoint2D",enumerable:!0},componentName:{value:"Geometry2D",enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(E())([new(z())(H().inputOutput,"metadata",new(r().SFNode)),new(z())(H().inputOutput,"point",new(r().MFVec2f))]),enumerable:!0}});const de=ge;l().set("x_ite/Components/Geometry2D/Polypoint2D",de);const me=de,ye=window[Symbol.for("X_ITE.X3D-8.9.6")].require("standard/Math/Numbers/Vector2");var be=e.n(ye);function fe(e){y().call(this,e),this.addType(H().Rectangle2D),this.setGeometryType(2),this._size.setUnit("length")}Object.assign(Object.setPrototypeOf(fe.prototype,y().prototype),{build:(()=>{const e=new(be())(2,2);return function(){const t=this.getBrowser().getRectangle2DOptions().getGeometry(),i=this._size.getValue();if(this.setMultiTexCoords(t.getMultiTexCoords()),this.setNormals(t.getNormals()),i.equals(e))this.setVertices(t.getVertices()),this.getMin().assign(t.getMin()),this.getMax().assign(t.getMax());else{const e=Math.abs(i.x/2),s=Math.abs(i.y/2),n=t.getVertices().getValue(),o=this.getVertices();for(let t=0;t<n.length;t+=4)o.push(e*n[t],s*n[t+1],0,1);this.getMin().set(-e,-s,0),this.getMax().set(e,s,0)}this.setSolid(this._solid.getValue())}})()}),Object.defineProperties(fe,{typeName:{value:"Rectangle2D",enumerable:!0},componentName:{value:"Geometry2D",enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(E())([new(z())(H().inputOutput,"metadata",new(r().SFNode)),new(z())(H().initializeOnly,"size",new(r().SFVec2f)(2,2)),new(z())(H().initializeOnly,"solid",new(r().SFBool))]),enumerable:!0}});const we=fe;l().set("x_ite/Components/Geometry2D/Rectangle2D",we);const De=we;function _e(e){y().call(this,e),this.addType(H().TriangleSet2D),this.setGeometryType(2),this._vertices.setUnit("length")}Object.assign(Object.setPrototypeOf(_e.prototype,y().prototype),{build(){const e=this._vertices.getValue(),t=this.getNormals(),i=this.getVertices();for(let s=0,n=2*this._vertices.length;s<n;s+=2)t.push(0,0,1),i.push(e[s],e[s+1],0,1);this.setSolid(this._solid.getValue())},buildTexCoords(){const e=this.getTexCoords();if(0===e.length){const t=this.getTexCoordParams(),i=t.min,s=t.Ssize,n=this.getVertices().getValue();for(let t=0,o=n.length;t<o;t+=4)e.push((n[t]-i[0])/s,(n[t+1]-i[1])/s,0,1);e.shrinkToFit()}this.getMultiTexCoords().push(e)}}),Object.defineProperties(_e,{typeName:{value:"TriangleSet2D",enumerable:!0},componentName:{value:"Geometry2D",enumerable:!0},containerField:{value:"geometry",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(E())([new(z())(H().inputOutput,"metadata",new(r().SFNode)),new(z())(H().inputOutput,"vertices",new(r().MFVec2f)),new(z())(H().initializeOnly,"solid",new(r().SFBool))]),enumerable:!0}});const Oe=_e;l().set("x_ite/Components/Geometry2D/TriangleSet2D",Oe);const ve=Oe;i().add({name:"Geometry2D",concreteNodes:[Z,te,ne,ce,pe,me,De,ve],abstractNodes:[],browserContext:k});const Ve=void 0;l().set("assets/components/Geometry2D",Ve)})();