!function(){const e=window[Symbol.for("X_ITE.X3D-6.1.0")],t=e.define,s=e.require;t("x_ite/Browser/KeyDeviceSensor/X3DKeyDeviceSensorContext",["x_ite/Fields"],(function(e){"use strict";const t=Symbol(),s=Symbol(),i=Symbol();function n(){this[t]=new Set}return n.prototype={initialize:function(){const e=this.getElement();e.bind("keydown.X3DKeyDeviceSensorContext",this[s].bind(this)),e.bind("keyup.X3DKeyDeviceSensorContext",this[i].bind(this))},addKeyDeviceSensorNode:function(e){this[t].add(e)},removeKeyDeviceSensorNode:function(e){this[t].delete(e)},getKeyDeviceSensorNodes:function(){return this[t]},[s]:function(e){for(const s of this[t])s.keydown(e)},[i]:function(e){for(const s of this[t])s.keyup(e)}},n})),t("x_ite/Components/KeyDeviceSensor/X3DKeyDeviceSensorNode",["x_ite/Components/Core/X3DSensorNode","x_ite/Base/X3DConstants"],(function(e,t){"use strict";function s(s){e.call(this,s),this.addType(t.X3DKeyDeviceSensorNode)}return s.prototype=Object.assign(Object.create(e.prototype),{constructor:s,initialize:function(){e.prototype.initialize.call(this),this.isLive().addInterest("set_live__",this),this.set_live__()},set_live__:function(){this.isLive().getValue()?(this._enabled.addInterest("set_enabled__",this),this._enabled.getValue()&&this.enable()):(this._enabled.removeInterest("set_enabled__",this),this.disable())},set_enabled__:function(){this._enabled.getValue()?this.enable():this.disable()},enable:function(){this.getBrowser().addKeyDeviceSensorNode(this)},disable:function(){this.getBrowser().removeKeyDeviceSensorNode(this),this.release()},keydown:function(){},keyup:function(){},release:function(){}}),s})),t("x_ite/Components/KeyDeviceSensor/KeySensor",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/KeyDeviceSensor/X3DKeyDeviceSensorNode","x_ite/Base/X3DConstants"],(function(e,t,s,i,n){"use strict";function a(e){i.call(this,e),this.addType(n.KeySensor)}return a.prototype=Object.assign(Object.create(i.prototype),{constructor:a,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new s([new t(n.inputOutput,"metadata",new e.SFNode),new t(n.inputOutput,"enabled",new e.SFBool(!0)),new t(n.outputOnly,"controlKey",new e.SFBool),new t(n.outputOnly,"shiftKey",new e.SFBool),new t(n.outputOnly,"altKey",new e.SFBool),new t(n.outputOnly,"actionKeyPress",new e.SFInt32),new t(n.outputOnly,"actionKeyRelease",new e.SFInt32),new t(n.outputOnly,"keyPress",new e.SFString),new t(n.outputOnly,"keyRelease",new e.SFString),new t(n.outputOnly,"isActive",new e.SFBool)]),getTypeName:function(){return"KeySensor"},getComponentName:function(){return"KeyDeviceSensor"},getContainerField:function(){return"children"},keydown:function(e){switch(e.preventDefault(),this._isActive.getValue()||(this._isActive=!0),e.which){case 16:this._shiftKey=!0;break;case 17:this._controlKey=!0;break;case 18:this._altKey=!0;break;case 112:this._actionKeyPress=1;break;case 113:this._actionKeyPress=2;break;case 114:this._actionKeyPress=3;break;case 115:this._actionKeyPress=4;break;case 116:this._actionKeyPress=5;break;case 117:this._actionKeyPress=6;break;case 118:this._actionKeyPress=7;break;case 119:this._actionKeyPress=8;break;case 120:this._actionKeyPress=9;break;case 121:this._actionKeyPress=10;break;case 122:this._actionKeyPress=11;break;case 123:this._actionKeyPress=12;break;case 36:this._actionKeyPress=13;break;case 35:this._actionKeyPress=14;break;case 33:this._actionKeyPress=15;break;case 34:this._actionKeyPress=16;break;case 38:this._actionKeyPress=17;break;case 40:this._actionKeyPress=18;break;case 37:this._actionKeyPress=19;break;case 39:this._actionKeyPress=20;break;default:if(e.charCode||e.keyCode)switch(e.key){case"AltGraph":case"CapsLock":case"Insert":break;case"Backspace":this._keyPress=String.fromCharCode(8);break;case"Delete":this._keyPress=String.fromCharCode(127);break;case"Enter":this._keyPress="\n";break;case"Escape":this._keyPress=String.fromCharCode(27);break;case"Tab":this._keyPress="\t";break;default:1===e.key.length&&(this._keyPress=e.key)}}},keyup:function(e){switch(e.preventDefault(),e.which){case 16:this._shiftKey=!1;break;case 17:this._controlKey=!1;break;case 18:this._altKey=!1;break;case 112:this._actionKeyRelease=1;break;case 113:this._actionKeyRelease=2;break;case 114:this._actionKeyRelease=3;break;case 115:this._actionKeyRelease=4;break;case 116:this._actionKeyRelease=5;break;case 117:this._actionKeyRelease=6;break;case 118:this._actionKeyRelease=7;break;case 119:this._actionKeyRelease=8;break;case 120:this._actionKeyRelease=9;break;case 121:this._actionKeyRelease=10;break;case 122:this._actionKeyRelease=11;break;case 123:this._actionKeyRelease=12;break;case 36:this._actionKeyRelease=13;break;case 35:this._actionKeyRelease=14;break;case 33:this._actionKeyRelease=15;break;case 34:this._actionKeyRelease=16;break;case 38:this._actionKeyRelease=17;break;case 40:this._actionKeyRelease=18;break;case 37:this._actionKeyRelease=19;break;case 39:this._actionKeyRelease=20;break;default:if(e.charCode||e.keyCode)switch(e.key){case"AltGraph":case"CapsLock":case"Insert":break;case"Backspace":this._keyRelease=String.fromCharCode(8);break;case"Delete":this._keyRelease=String.fromCharCode(127);break;case"Enter":this._keyRelease="\n";break;case"Escape":this._keyRelease=String.fromCharCode(27);break;case"Tab":this._keyRelease="\t";break;default:1===e.key.length&&(this._keyRelease=e.key)}}this._isActive.getValue()&&(this._isActive=!1)},release:function(){this._shiftKey.getValue()&&(this._shiftKey=!1),this._controlKey.getValue()&&(this._controlKey=!1),this._altKey.getValue()&&(this._altKey=!1)}}),a})),t("x_ite/Components/KeyDeviceSensor/StringSensor",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/KeyDeviceSensor/X3DKeyDeviceSensorNode","x_ite/Base/X3DConstants"],(function(e,t,s,i,n){"use strict";function a(e){i.call(this,e),this.addType(n.StringSensor)}return a.prototype=Object.assign(Object.create(i.prototype),{constructor:a,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new s([new t(n.inputOutput,"metadata",new e.SFNode),new t(n.inputOutput,"enabled",new e.SFBool(!0)),new t(n.inputOutput,"deletionAllowed",new e.SFBool(!0)),new t(n.outputOnly,"enteredText",new e.SFString),new t(n.outputOnly,"finalText",new e.SFString),new t(n.outputOnly,"isActive",new e.SFBool)]),getTypeName:function(){return"StringSensor"},getComponentName:function(){return"KeyDeviceSensor"},getContainerField:function(){return"children"},keydown:function(e){switch(e.preventDefault(),e.key){case"Backspace":this._isActive.getValue()&&this._deletionAllowed.getValue()&&this._enteredText.length&&(this._enteredText=this._enteredText.getValue().substr(0,this._enteredText.length-1));break;case"Enter":this._finalText=this._enteredText,this._enteredText.set(""),this._isActive.getValue()&&(this._isActive=!1);break;case"Escape":this._enteredText.set(""),this._isActive.getValue()&&(this._isActive=!1);break;case"Tab":break;default:(e.charCode||e.keyCode)&&1===e.key.length&&(this._isActive.getValue()||(this._isActive=!0,this._enteredText=""),this._enteredText=this._enteredText.getValue()+e.key)}}}),a})),t(s.getComponentUrl("key-device-sensor"),["x_ite/Components","x_ite/Browser/KeyDeviceSensor/X3DKeyDeviceSensorContext","x_ite/Components/KeyDeviceSensor/KeySensor","x_ite/Components/KeyDeviceSensor/StringSensor","x_ite/Components/KeyDeviceSensor/X3DKeyDeviceSensorNode"],(function(e,t,s,i,n){"use strict";e.addComponent({name:"KeyDeviceSensor",types:{KeySensor:s,StringSensor:i},abstractTypes:{X3DKeyDeviceSensorNode:n},context:t})}))}();
