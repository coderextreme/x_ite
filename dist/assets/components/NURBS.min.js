(()=>{"use strict";var t={n:e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},d:(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const e=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components");var n=t.n(e);const i=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Fields");var o=t.n(i);const s=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Base/X3DFieldDefinition");var r=t.n(s);const u=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Base/FieldDefinitionArray");var l=t.n(u);const h=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Core/X3DNode");var a=t.n(h);const d=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Base/X3DConstants");var c=t.n(d);const g=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Base/X3DCast");var f=t.n(g);function p(t){a().call(this,t),this.addType(c().Contour2D),this.childNodes=[]}function _(t,e,n,i,o,s){const r=new Set;for(let t=o;t<s;++t)r.add(i[t]);return t.remove(e,n,(function(t){return r.has(t)}))}p.prototype=Object.assign(Object.create(a().prototype),{constructor:p,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().inputOnly,"addChildren",new(o().MFNode)),new(r())(c().inputOnly,"removeChildren",new(o().MFNode)),new(r())(c().inputOutput,"children",new(o().MFNode))]),getTypeName:function(){return"Contour2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"trimmingContour"},initialize:function(){a().prototype.initialize.call(this),this._addChildren.addInterest("set_addChildren__",this),this._removeChildren.addInterest("set_removeChildren__",this),this._children.addInterest("set_children__",this),this.set_children__()},set_addChildren__:function(){this._addChildren.setTainted(!0),this._addChildren.erase(_(this._addChildren,0,this._addChildren.length,this._children,0,this._children.length),this._addChildren.length);for(const t of this._addChildren)this._children.push(t);this._addChildren.length=0,this._addChildren.setTainted(!1)},set_removeChildren__:function(){this._removeChildren.setTainted(!0),this._children.erase(_(this._children,0,this._children.length,this._removeChildren,0,this._removeChildren.length),this._children.length),this._removeChildren.length=0,this._removeChildren.setTainted(!1)},set_children__:function(){const t=this.childNodes;t.length=0;for(const e of this._children){const n=f()(c().NurbsCurve2D,e);if(n)t.push(n);else{const n=f()(c().ContourPolyline2D,e);if(n){t.push(n);continue}}}},addTrimmingContour:function(t){for(const e of this.childNodes)t.push(e.tessellate(2))}});const m=p;function w(t){a().call(this,t),this.addType(c().X3DNurbsControlCurveNode)}w.prototype=Object.assign(Object.create(a().prototype),{constructor:w});const y=w,v=window[Symbol.for("X_ITE.X3D-8.0.0")].require("standard/Math/Numbers/Vector3");var b=t.n(v);function C(t){y.call(this,t),this.addType(c().ContourPolyline2D),this.controlPoints=[]}C.prototype=Object.assign(Object.create(y.prototype),{constructor:C,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().inputOutput,"controlPoint",new(o().MFVec2d))]),getTypeName:function(){return"ContourPolyline2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},tessellate:function(t){switch(t){case 0:{const t=this._controlPoint.getValue(),e=this.controlPoints,n=this._controlPoint.length;for(let i=0;i<n;++i){const n=2*i;e[n+0]=t[n+0],e[n+1]=t[n+1]}return e.length=2*n,e}case 1:{const t=this._controlPoint.getValue(),e=this.controlPoints,n=this._controlPoint.length;for(let i=0;i<n;++i){const n=2*i,o=3*i;e[o+0]=t[n+0],e[o+1]=0,e[o+2]=t[n+1]}return e.length=3*n,e}case 3:{const t=this._controlPoint.getValue(),e=this.controlPoints,n=this._controlPoint.length;for(let i=0;i<n;++i){const n=2*i;e[i]=new(b())(t[n+0],t[n+1],0)}return e.length=n,e}}}});const N=C,O=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Rendering/X3DCoordinateNode");var S=t.n(O);function D(t){S().call(this,t),this.addType(c().CoordinateDouble)}D.prototype=Object.assign(Object.create(S().prototype),{constructor:D,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().inputOutput,"point",new(o().MFVec3d))]),getTypeName:function(){return"CoordinateDouble"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"coord"}});const P=D,T=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Rendering/X3DGeometryNode");var F=t.n(T);const V=window[Symbol.for("X_ITE.X3D-8.0.0")].require("standard/Math/Numbers/Vector2");var I=t.n(V);const x=window[Symbol.for("X_ITE.X3D-8.0.0")].require("standard/Math/Numbers/Vector4");var R=t.n(x);const z={getTessellation:function(t,e){return t>0?t+1:t<0?-t*e+1:2*e+1},getClosed2D:function(t,e,n,i){const o=i.length;return(!(n.length===o)||n[0]===n[o-1])&&(!!i[0].equals(i[o-1])&&!!this.isPeriodic(t,o,e))},getClosed:function(){const t=new(b())(0,0,0),e=new(b())(0,0,0);return function(n,i,o,s){const r=s.getSize();return(!(o.length===r)||o[0]===o[r-1])&&(!!s.get1Point(0,t).equals(s.get1Point(r-1,e))&&!!this.isPeriodic(n,r,i))}}(),getUClosed:function(){const t=new(b())(0,0,0),e=new(b())(0,0,0);return function(n,i,o,s,r,u){const l=r.length===u.getSize();for(let n=0,s=o;n<s;++n){const o=n*i,s=n*i+i-1;if(l&&r[o]!==r[s])return!1;if(!u.get1Point(o,t).equals(u.get1Point(s,e)))return!1}return!!this.isPeriodic(n,i,s)}}(),getVClosed:function(){const t=new(b())(0,0,0),e=new(b())(0,0,0);return function(n,i,o,s,r,u){const l=r.length===u.getSize();for(let n=0,s=i;n<s;++n){const s=n,h=(o-1)*i+n;if(l&&r[s]!==r[h])return!1;if(!u.get1Point(s,t).equals(u.get1Point(h,e)))return!1}return!!this.isPeriodic(n,o,s)}}(),isPeriodic:function(t,e,n){if(n.length===e+t){{let e=1;for(let i=1,o=t;i<o;++i)e+=n[i]===n[0];if(e===t)return!1}{let e=1;for(let i=n.length-t,o=n.length-1;i<o;++i)e+=n[i]===n[o];if(e===t)return!1}}return!0},getKnots:function(t,e,n,i,o){const s=t||[];for(let t=0,e=o.length;t<e;++t)s[t]=o[t];s.length=o.length;let r=!0;if(s.length===i+n){r=!1;let t=0;for(let e=1,i=s.length;e<i;++e)s[e]==s[e-1]?++t:t=0,t>n-1&&(r=!0),s[e-1]>s[e]&&(r=!0)}if(r)for(let t=0,e=i+n;t<e;++t)s[t]=t/(e-1);if(e)for(let t=1,e=n-1;t<e;++t)s.push(s.at(-1)+(s[t]-s[t-1]));return s},getWeights:function(t,e,n){if(n.length!==e)return;const i=t||[];for(let t=0;t<e;++t)i[t]=n[t];return i.length=e,i},getUVWeights:function(t,e,n,i){const o=e*n;if(i.length!==o)return;const s=t||[];for(let t=0,o=0;t<e;++t)for(let t=0;t<n;++t,++o)s[o]=i[o];return s.length=o,s},getControlPoints2D:function(t,e,n,i,o){const s=t||[],r=o.getValue(),u=o.length,l=Boolean(i),h=l?b():I();s.haveWeights!==l&&(s.haveWeights=l,s.length=0);for(let t=0;t<u;++t){const e=2*t,n=s[t]||new h(0,0,0);s[t]=n.set(r[e+0],r[e+1],l?i[t]:0)}if(s.length=u,e)for(let t=1,e=n-1;t<e;++t)s.push(s[t]);return s},getControlPoints:function(t,e,n,i,o){const s=t||[],r=o.getSize(),u=Boolean(i),l=u?R():b();s.haveWeights!==u&&(s.haveWeights=u,s.length=0);for(let t=0;t<r;++t){const e=s[t]=o.get1Point(t,s[t]||new l(0,0,0,0));u&&(e.w=i[t])}if(s.length=r,e)for(let t=1,e=n-1;t<e;++t)s.push(s[t]);return s},getUVControlPoints:function(t,e,n,i,o,s,r,u,l){const h=t||[],a=Boolean(u),d=a?R():b();h.haveWeights!==a&&(h.haveWeights=a,h.length=0);for(let t=0;t<s;++t){let e=h[t];e||(e=h[t]=[]);for(let n=0;n<r;++n){const i=n*s+t;e[n]=l.get1Point(i,e[n]||new d(0,0,0,0)),a&&(e[n].w=u[i])}if(e.length=r,n)for(let t=1,n=o-1;t<n;++t)e.push(e[t])}if(h.length=s,e)for(let t=1,e=i-1;t<e;++t)h.push(h[t]);return h},getTexControlPoints:function(t,e,n,i,o,s,r,u){const l=t||[];for(let t=0;t<s;++t){let e=l[t];e||(e=l[t]=[]);for(let n=0;n<r;++n){const i=n*s+t;e[n]=u.get1Point(i,e[n]||new(R())(0,0,0,0))}if(e.length=r,n)for(let t=1,n=o-1;t<n;++t)e.push(e[t])}if(l.length=s,e)for(let t=1,e=i-1;t<e;++t)l.push(l[t]);return l}};function j(t){F().call(this,t),this.addType(c().X3DParametricGeometryNode)}j.prototype=Object.assign(Object.create(F().prototype),{constructor:j,getKnots:function(t,e,n,i,o){return z.getKnots(t,e,n,i,o)}});const k=j,A=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Rendering/X3DLineGeometryNode");var X=t.n(A);function B(t){return!!t&&(!!t.dtype&&new RegExp("function View[0-9]+d(:?"+t.dtype+")+").test(String(t.constructor)))}function E(t){return!!t&&(void 0!==t.data&&Array.isArray(t.shape)&&void 0!==t.offset&&void 0!==t.stride)}function q(t){return Array.isArray(t)||ArrayBuffer.isView(t)||void 0!==t.length}function K(t){if(t){if(B(t)||E(t))return"generic"===t.dtype?K.GENERIC_NDARRAY:K.NDARRAY;if(q(t)){for(var e=t;q(e[0]);e=e[0]);return"x"in e?K.ARRAY_OF_OBJECTS:K.ARRAY_OF_ARRAYS}throw new Error("Unhandled data type. Got type: "+typeof t)}}K.ARRAY_OF_OBJECTS="Obj",K.ARRAY_OF_ARRAYS="Arr",K.NDARRAY="Nd",K.GENERIC_NDARRAY="GenNd",K.PACKED="PackArr";const M=K;var G=function t(e,n){return function(n,i){void 0===n||Array.isArray(n)||(n=[n]);for(var o=[],s=0;s<n.length;s++)o.push(t.sum(n[s]));if(i)for(n=0;n<o.length;n++)void 0!==i[n]&&(o[n]="("+o[n]+" + "+i[n]+") % "+i[n]);return e+o.join("_")}};G.sum=function(t){return 0===(t=(t=Array.isArray(t)?t:[t]).filter((function(t){return void 0!==t&&0!==t}))).length&&t.push(0),t.join(" + ")};const W=G;var U=[".x",".y",".z",".w"];function Y(t){return function(e,n){void 0===e||Array.isArray(e)||(e=[e]);for(var i=[],o=0;o<e.length;o++)i.push(W.sum(e[o]));if(n)for(e=0;e<i.length;e++)void 0!==n[e]&&(i[e]="("+i[e]+" + "+n[e]+") % "+n[e]);return t(i)}}function J(t,e){if(e)switch(M(e)){case M.ARRAY_OF_OBJECTS:return Y((function(e){var n=e.pop();return t+"["+e.join("][")+"]"+U[n]}));case M.ARRAY_OF_ARRAYS:return Y((function(e){return t+"["+e.join("][")+"]"}));case M.GENERIC_NDARRAY:return Y((function(e){return t+".get("+e.join(",")+")"}));case M.NDARRAY:return Y((function(e){for(var n=[t+"Offset"],i=0;i<e.length;i++)n.push(t+"Stride"+i+" * ("+e[i]+")");return t+"["+n.join(" + ")+"]"}));case M.PACKED:default:return}}var L=[],Z=[];function H(t,e,n){if(1!==e)throw new Error("Numerical derivative not implemented for order n = "+e+".");var i,o=void 0===arguments[this.splineDimension+3]?1e-4:arguments[this.splineDimension+3];for(L.length=this.splineDimension,i=0;i<this.splineDimension;i++)L[i+1]=arguments[i+3];var s,r,u,l=this.domain,h=l[n][0],a=l[n][1],d=L[n+1],c=(a-h)*o;for("closed"===this.boundary[n]?(s=h+(d-h-c+(u=a-h))%u,r=h+(d-h+c+u)%u,c*=2):(s=Math.min(a,Math.max(h,d-c)),c=(r=Math.min(a,Math.max(h,d+c)))-s),L[n+1]=s,L[0]=Z,this.evaluate.apply(null,L),L[n+1]=r,L[0]=t,this.evaluate.apply(null,L),i=0;i<this.dimension;i++)t[i]=(t[i]-Z[i])/c;return t}function Q(t,e){for(var n=1,i=0,o=[];i<t.length;i++)n*=Array.isArray(t[i])?t[i][1]-t[i][0]:t[i],o[i]=Array.isArray(t[i])?t[i][0]:0;for(var s=0;s<n;s++)for(e(o.slice()),i=t.length-1;i>=0;i--){if(o[i]!==(Array.isArray(t[i])?t[i][1]:t[i])-1){o[i]++;break}o[i]=Array.isArray(t[i])?t[i][0]:0}}function $(t,e,n,i){var o=[];switch(M(i)){case M.NDARRAY:o.push("  var "+e+" = "+n+".data;"),o.push("  var "+e+"Offset = "+n+".offset;");for(var s=0;s<i.dimension;s++)o.push("  var "+e+"Stride"+s+" = "+n+".stride["+s+"];");break;case M.ARRAY_OF_OBJECTS:case M.ARRAY_OF_ARRAYS:o.push("  var "+e+" = "+n+";")}return o.join("\n")}function tt(t,e,n){if(t){if(E(t))return e+".shape["+n+"]";for(var i=e,o=0;o<n;o++)i+="[0]";return i+".length"}return"this.size["+n+"]"}var et={},nt={};function it(t,e,n,i,o,s,r){var u,l,h,a,d,c,g=e.splineDimension,f=e.points,p=e.degree,_=e.weights,m=void 0!==_,w=e.knots,y=e.dimension,v=e.boundary;if(null!=r){Array.isArray(r)||(r=[r]);var b=0;for(u=0;u<g;u++)void 0===r[u]&&(r[u]=0),b+=r[u];if(m&&b>1)throw new Error("Analytical derivative not implemented for rational b-splines with order n = "+b+".")}s&&(t="Basis"+t),r&&(t="Der"+r.join("_")+"_"+t);var C=et[t];if(i)var N="function"==typeof i?i:console.log;if(C)return i&&N(nt[t]),C.bind(e);var O=[],S="evaluate"+t,D=n.point;s&&(D=function(t,e){for(var n=[],i=0;i<t.length;i++){for(var o=t[i],s=[],r=0;r<o.length;r++)0!==o[r]&&s.push(o[r]);o=s.join(" + "),e[i]&&(o="("+o+" + "+e[i]+") % "+e[i]),n.push(o+" === "+x(i))}return"(("+n.join(" && ")+") ? 1 : 0)"});var P=n.weight,T=n.knot,F=W("k"),V=W("x"),I=W("w"),x=W("i"),R=W("t"),z=i?"domain":"d",j=W(i?"size":"s"),k=W(i?"knotIndex":"j"),A=!0;for(d=0;d<g;d++)q(w)&&q(w[d])&&(A=!1);function X(t){O.push("  "+(t||""))}function B(t){i&&X(t)}if(s)var E=[];var K=[];for(u=0;u<g;u++)s&&E.push(x([u])),K.push(R([u]));for(O.push("function "+S+" ("+(s?"":"out, ")+K.join(", ")+(s?", "+E.join(", "):"")+") {"),X("var h, m, a, b;"),o&&(X("var "+z+" = this.domain;"),X("for (var i = 0; i < this.splineDimension; i++) {"),X("  a = arguments[i + 1];"),X("  if (a < "+z+"[i][0] || a > "+z+"[i][1] || a === undefined || isNaN(a)) {"),X('    throw new Error("Invalid Spline parameter in dimension "+i+". Valid domain is ["+'+z+'[i][0]+", "+'+z+'[i][1]+"]. but got t"+i+" = "+arguments[i + 1]+".");'),X("  }"),X("}")),d=0;d<g;d++)X("var "+j(d)+" = "+tt(f,"this.points",d)+";");function G(t,e,n){return"("+t+") ? ("+e+") : ("+n+")"}O.push($(0,"x","this.points",f)),m&&O.push($(0,"w","this.weights",_)),A||O.push($(0,"k","this.knots",w));var U=[];for(d=0;d<g;d++)switch(M(w)){case M.NDARRAY:U[d]=!0;break;case M.ARRAY_OF_ARRAYS:U[d]=q(w[d])}for(d=0;d<g;d++)if(U[d])for(B("\n  // Bisect to locate the knot interval in dimension "+d+"\n"),X("var "+k(d)+" = 0;"),X("h = "+j(d)+";"),X("while(h > "+k(d)+" + 1) {"),X("  m = 0.5 * (h + "+k(d)+") | 0;"),X("  if ("+T([d,"m"])+" > "+R(d)+") h = m;"),X("  else "+k(d)+" = m;"),X("}"),B("\n  // Fetch knots for dimension "+d+"\n"),u=1-p[d];u<=p[d];u++)"closed"===v[d]?X(u<0?"var "+F([d,u+p[d]-1])+" = "+G(k(d)+" < "+-u,T([d,0])+" + "+T([d,[j(d),k(d),u]])+" - "+T([d,[j(d)]]),T([d,[k(d),u]]))+";":u>0?"var "+F([d,u+p[d]-1])+" = "+G(k(d)+" + "+u+" > "+j(d),T([d,j(d)])+" + "+T([d,u+" + "+k(d)+" - "+j(d)])+" - "+T([d,0]),T([d,[k(d),u]]))+";":"var "+F([d,u+p[d]-1])+" = "+T([d,[k(d),u]])+";"):X("var "+F([d,u+p[d]-1])+" = "+T([d,[k(d),u]])+";");else{for(B("\n  // Directly compute knot interval for dimension "+d+"\n"),"closed"===v[d]?X(k(d)+" = ("+R(d)+" | 0) % "+j(d)+";"):(X(k(d)+" = ("+R(d)+" | 0);"),X("if ("+k(d)+" < "+p[d]+") "+k(d)+" = "+p[d]+";"),X("if ("+k(d)+" > "+j(d)+" - 1) "+k(d)+" = "+j(d)+" - 1;")),B("\n  // Compute and clamp knots for dimension "+d+"\n"),u=1-p[d];u<=p[d];u++)X("var "+(c=F([d,u+p[d]-1]))+" = "+k(d)+" + "+u+";");if("clamped"===v[d])for(u=1-p[d];u<=p[d];u++)c=F([d,u+p[d]-1]),u<0&&X("if ("+c+" < "+p[d]+") "+c+" = "+p[d]+";"),u>0&&X("if ("+c+" > "+j(d)+") "+c+" = "+j(d)+";");"closed"===v[d]&&(B("\n  // Wrap the B-Spline parameter for closed boundary"),X(R(d)+" %= "+j(d)+";"))}for(d=0,h=[];d<g;d++)h[d]=p[d]+1;for(m&&(B("\n  // Fetch weights\n"),Q(h,(function(t){for(var e=[],n=[],i=0;i<g;i++)e[i]=[k(i),t[i]-p[i]],"closed"===v[i]&&t[i]-p[i]<0&&(n[i]=j(i));X("var "+I(t)+" = "+P(e,n)+";")}))),i&&X(m?"\n  // Fetch points and project into homogeneous (weighted) coordinates\n":"\n  // Fetch points\n"),Q(h,(function(t){for(var e=[],n=[],i=0;i<g;i++)e[i]=[k(i),t[i]-p[i]],"closed"===v[i]&&t[i]-p[i]<0&&(n[i]=j(i));if(s)X(m?"var "+V(t)+" = "+D(e,n)+" * "+I(t)+";":"var "+V(t)+" = "+D(e,n)+";");else for(i=0;i<y;i++){var o=t.concat(i);e[g]=i,X(m?"var "+V(o)+" = "+D(e,n)+" * "+I(t)+";":"var "+V(o)+" = "+D(e,n)+";")}})),B("\n"),B('// Perform De Boor"s algorithm'),d=h.length-1;d>=0;d--)for(h[d]=[p[d],p[d]+1],u=0;u<p[d];u++)for(B("\n  // Degree "+p[d]+" evaluation in dimension "+d+", step "+(u+1)+"\n"),l=p[d];l>u;l--){var Y=r&&p[d]-u-r[d]<=0;Y?(X("m = 1 / ("+F([d,l-u+p[d]-1])+" - "+F([d,l-1])+");"),m&&(X("a = ("+R(d)+" - "+F([d,l-1])+") * m;"),X("b = 1 - a;"))):(X("a = ("+R(d)+" - "+F([d,l-1])+") / ("+F([d,l-u+p[d]-1])+" - "+F([d,l-1])+");"),X("b = 1 - a;")),m&&Q(h,(function(t){var e=t.slice(),n=t.slice();e[d]=l,n[d]=l-1,Y&&m&&X("h = "+I(e)+";"),X(I(e)+" = b * "+I(n)+" + a * "+I(e)+";")})),Q(h,(function(t){var e,n,i,o=t.slice(),r=t.slice();if(o[d]=l,r[d]=l-1,Y){var h=u+1;if(s)e=m?"h * "+I(r)+" / "+I(o)+" * ":"",n=V(o)+(m?" / h":""),i=V(r)+(m?" / "+I(r):""),X(V(o)+" = "+h+" * "+e+"("+n+" - "+i+") * m;");else{var c=o.slice(),f=r.slice();for(a=0;a<y;a++)c[g]=f[g]=a,e=m?"h * "+I(r)+" / "+I(o)+" * ":"",n=V(c)+(m?" / h":""),i=V(f)+(m?" / "+I(r):""),X(V(c)+" = "+h+" * "+e+"("+n+" - "+i+") * m;")}}else if(s)X(V(o)+" = b * "+V(r)+" + a * "+V(o)+";");else for(a=0;a<y;a++)o[g]=r[g]=a,X(V(o)+" = b * "+V(r)+" + a * "+V(o)+";")})),B("\n")}if(i&&X(m?"\n  // Project back from homogeneous coordinates and return final output\n":"\n  // Return final output\n"),s)X(m?"return "+V(p)+" / "+I(p)+";":"return "+V(p)+";");else for(d=0;d<y;d++)X(m?"out["+d+"] = "+V(p.concat([d]))+" / "+I(p)+";":"out["+d+"] = "+V(p.concat([d]))+";");if(s||X("return out;"),O.push("}"),i){var J=O.join("\n");N(J),nt[t]=J}var L=new Function([O.join("\n"),"; return ",S].join(""))();return et[t]=L,L.bind(e)}var ot={};var st={};const rt=window[Symbol.for("X_ITE.X3D-8.0.0")].require("standard/Math/Geometry/Triangle3");var ut=t.n(rt),lt=[];var ht={open:"open",closed:"closed",clamped:"clamped"};function at(t){return null==t}function dt(t,e,n,i,o,s){var r,u;!t||q(t)||B(t)?(s=s||{},this.weights=i,this.knots=n,this.degree=e,this.points=t,this.boundary=o,this.debug=s.debug,this.checkBounds=!!s.checkBounds,Object.defineProperty(this,"size",{value:s.size,writable:!0,configurable:!0})):(s=t,this.debug=t.debug,this.checkBounds=!!t.checkBounds,this.weights=t.weights,this.knots=t.knots,this.degree=t.degree,this.boundary=t.boundary,this.points=t.points,Object.defineProperty(this,"size",{value:s.size,writable:!0,configurable:!0}));var l=M(this.points),h=M(this.weights),a=M(this.knots);if(this.points)switch(l){case M.GENERIC_NDARRAY:case M.NDARRAY:Object.defineProperties(this,{splineDimension:{value:this.points.shape.length-1,writable:!1,configurable:!0},dimension:{value:this.points.shape[this.points.shape.length-1],writable:!1,configurable:!0},size:{get:function(){return this.points.shape.slice(0,this.points.shape.length-1)},set:function(){throw new Error("Cannot assign to read only property 'size'")},configurable:!0}});break;case M.ARRAY_OF_OBJECTS:case M.ARRAY_OF_ARRAYS:var d=0,c=this.size||[];c.length=0;for(var g=this.points;q(g[0]);g=g[0])d++,c.push(g.length);if(0===d)throw new Error("Expected an array of points");Object.defineProperties(this,{splineDimension:{value:d,writable:!1,configurable:!0},dimension:{value:g.length,writable:!1,configurable:!0},size:{get:function(){var t=[];t.length=0;for(var e=0,n=this.points;e<this.splineDimension;e++,n=n[0])t[e]=n.length;return t},set:function(){throw new Error('Cannot assign to read only property "size"')},configurable:!0}});break;case M.PACKED:default:throw new Error("Expected either a packed array, array of arrays, or ndarray of points")}else{if(void 0===this.size||null===this.size)throw new Error("Either points or a control hull size must be provided.");if(q(this.size)||Object.defineProperty(this,"size",{value:[this.size],writable:!0,configurable:!0}),0===this.size.length)throw new Error("`size` must be a number or an array of length at least one.");Object.defineProperties(this,{splineDimension:{value:this.size.length,writable:!1,configurable:!0},dimension:{value:0,writable:!1,configurable:!0}})}if(q(this.degree)){for(r=0;r<this.splineDimension;r++)if(at(this.degree[r]))throw new Error("Missing degree in dimension "+(r+1))}else{var f=!at(this.degree),p=at(this.degree)?2:this.degree;for(this.degree=[],r=0;r<this.splineDimension;r++)if(this.size[r]<=p){if(f)throw new Error("Expected at least "+(p+1)+" points for degree "+p+" spline in dimension "+(r+1)+" but got only "+this.size[r]);this.degree[r]=this.size[r]-1}else this.degree[r]=p}if(u="string"!=typeof this.boundary?"open":this.boundary,!ht[u])throw new Error("Boundary type must be one of "+Object.keys(ht)+". Got "+u);for(this.boundary=q(this.boundary)?this.boundary:[],this.boundary.length=this.splineDimension,r=0;r<this.splineDimension;r++)if(this.boundary[r]=at(this.boundary[r])?u:this.boundary[r],!ht[u])throw new Error("Boundary type must be one of "+Object.keys(ht)+". Got "+u+" for dimension "+(r+1));switch(a){case M.ARRAY_OF_ARRAYS:for(q(this.knots)&&this.knots.length>0&&!q(this.knots[0])&&(this.knots=[this.knots]),r=0;r<this.splineDimension;r++){if(this.size[r]<=this.degree[r])throw new Error("Expected at least "+(this.degree[r]+1)+" points in dimension "+(r+1)+" but got "+this.size[r]+".");if(q(this.knots[r])){if("closed"!==this.boundary[r]&&this.knots[r].length!==this.degree[r]+this.size[r]+1)throw new Error("Expected "+(this.degree[r]+this.size[r]+1)+" knots in dimension "+(r+1)+" but got "+this.knots[r].length+".");if("closed"===this.boundary[r]&&this.knots[r].length!==this.size[r]+1&&!(this.knots[r].length===this.size[r]+this.degree[r]+1))throw new Error("Expected "+(this.size[r]+1)+" knots for closed spline in dimension "+(r+1)+" but got "+this.knots[r].length+".")}}case M.NDARRAY:}var _=function(t,e,n,i,o,s){var r,u,l=[],h=!1;for(r=0;r<t.splineDimension;r++){var a=q(t.knots)&&q(t.knots[r]);a&&(h=!0),l.push("Deg"+t.degree[r]+(a?"":"Uniform")+((u=t.boundary[r])[0].toUpperCase()+u.slice(1)))}var d=[[h?"NU":"",t.weights?"RBS":"BS"].join("")+t.dimension+"D",l.join("_")];return i&&d.push(i+"Pts"),o&&d.push(o+"Wts"),s&&d.push(s+"Kts"),e&&d.push("debug"),n&&d.push("chk"),d.join("_")}(this,this.debug,this.checkBounds,l,h,a);if(_!==this.__cacheKey){this.__cacheKey=_;var m=function(t){var e,n={};return(e=J("x",t.points))&&(n.point=e),(e=J("w",t.weights))&&(n.weight=e),(e=J("k",t.knots))&&(n.knot=e),n}(this);this.evaluate=it(this.__cacheKey,this,m,this.debug,this.checkBounds,!1),this.transform=function(t,e,n,i){var o,s,r,u,l,h,a,d,c=ot[t];if(c)return c.bind(e);var g=[],f="transform"+t;g.push("function "+f+"(m) {"),g.push("var i, w;"),g.push($(0,"x","this.points",e.points));var p=W(i?"size":"s");for(o=0;o<e.splineDimension;o++)g.push("var "+p(o)+" = "+tt(e.points,"this.points",o)+";");for(u=[],o=0;o<e.splineDimension;o++)r="i"+o,u.push(r),g.push("for ("+r+" = "+p(o)+"- 1; "+r+" >= 0; "+r+"--) {");for(o=0;o<e.dimension;o++)g.push("x"+o+" = "+n.point(u.concat([o])));for(l=[],o=0;o<e.dimension;o++)l.push("m["+((e.dimension+1)*(o+1)-1)+"] * x"+o);for(l.push("m["+((e.dimension+1)*(e.dimension+1)-1)+"]"),g.push("var w = ("+l.join(" + ")+") || 1.0;"),o=0;o<e.dimension;o++){for(l=[],h=e.dimension,s=0;s<h;s++)l.push("m["+(s*(h+1)+o)+"] * x"+s);l.push("m["+(s*(h+1)+o)+"]"),d=n.point(u.concat([o])),a="("+l.join(" + ")+") / w",g.push(d+" = "+a+";")}for(o=e.splineDimension-1;o>=0;o--)g.push("}");g.push("return this;"),g.push("}");var _=new Function([g.join("\n"),"; return ",f].join(""))();return i&&console.log(g.join("\n")),ot[t]=_,_.bind(e)}(this.__cacheKey,this,m,this.debug),this.support=function(t,e,n,i,o){var s=st[t];if(s)return s.bind(e);var r,u,l,h=e.degree,a=e.knots,d=e.splineDimension,c=e.boundary,g=[],f="support"+t,p=n.knot,_=W("t"),m=i?"domain":"d",w=W(i?"size":"s"),y=W(i?"knotIndex":"i"),v=!0;for(l=0;l<d;l++)q(a)&&q(a[l])&&(v=!1);function b(t){g.push("  "+(t||""))}var C=[];for(r=0;r<d;r++)C.push(_([r]));g.push("function "+f+" (out, "+C.join(", ")+") {");var N=0;function O(t,e){b(void 0===e?"out["+N+++"] = "+t.join(" + ")+";":"out["+N+++"] = ("+t.join(" + ")+" + "+e+") % "+e+";")}for(b("var h, m;"),b("var c = 0;"),o&&(b("var "+m+" = this.domain;"),b("for (var i = 0; i < this.splineDimension; i++) {"),b("  a = arguments[i + 1];"),b("  if (a < "+m+"[i][0] || a > "+m+"[i][1] || a === undefined || isNaN(a)) {"),b('    throw new Error("Invalid Spline parameter in dimension "+i+". Valid domain is ["+'+m+'[i][0]+", "+'+m+'[i][1]+"]. but got t"+i+" = "+arguments[i + 1]+".");'),b("  }"),b("}")),l=0;l<d;l++)b("var "+w(l)+" = "+tt(e.points,"this.points",l)+";");v||g.push($(0,"k","this.knots",a));var S=[];for(l=0;l<d;l++)switch(M(a)){case M.NDARRAY:S[l]=!0;break;case M.ARRAY_OF_ARRAYS:S[l]=q(a[l])}for(l=0;l<d;l++)S[l]?(b("var "+y(l)+" = 0;"),b("h = "+w(l)+";"),b("while(h > "+y(l)+" + 1) {"),b("  m = 0.5 * (h + "+y(l)+") | 0;"),b("  if ("+p([l,"m"])+" > "+_(l)+") h = m;"),b("  else "+y(l)+" = m;"),b("}")):"closed"===c[l]?b(y(l)+" = ("+_(l)+" | 0) % "+w(l)+";"):(b(y(l)+" = ("+_(l)+" | 0);"),b("if ("+y(l)+" < "+h[l]+") "+y(l)+" = "+h[l]+";"),b("if ("+y(l)+" > "+w(l)+" - 1) "+y(l)+" = "+w(l)+" - 1;"));for(l=0,u=[];l<d;l++)u[l]=h[l]+1;Q(u,(function(t){for(var e=[],n=[],i=0;i<d;i++)e[i]=[y(i),t[i]-h[i]],"closed"===c[i]&&t[i]-h[i]<0&&(n[i]=w(i));for(i=0;i<d;i++)O(e[i],n[i])})),b("out.length = "+N+";"),b("return out;"),g.push("}"),i&&console.log(g.join("\n"));var D=new Function([g.join("\n"),"; return ",f].join(""))();return st[t]=D,D.bind(e)}(this.__cacheKey,this,m,this.debug,this.checkBounds),this.evaluator=function(t,e){return it(this.__cacheKey,this,m,this.debug,this.checkBounds,e,t)}}return this.numericalDerivative=H.bind(this),this}function ct(){var t,e=[],n=this.points;n?E(n)&&(t=n.shape):t=this.size;for(var i=0;i<this.splineDimension;i++){var o=t?t[i]:n.length,s=this.degree[i],r="closed"===this.boundary[i];if(this.knots&&this.knots[i]){var u=this.knots[i];e[i]=[u[r?0:s],u[o]]}else e[i]=[r?0:s,o];n&&(n=n[0])}return e}function gt(t,e,n,i,o,s){var r=function(t,e,n,i,o,s){return u(t,e,n,i,o,s),r},u=dt.bind(r);return Object.defineProperty(r,"domain",{get:ct}),u(t,e,n,i,o,s),r}gt.sample=function(t,e,n){n=n||{};var i=(t=t||{}).points=t.points||[],o=t.faces=t.faces||[],s=n.haveWeights,r=e.dimension-s;if(Array.isArray(n.resolution))var u=n.resolution;else{var l=void 0===n.resolution?31:n.resolution;u=new Array(e.splineDimension).fill(l)}switch(e.splineDimension){case 1:for(var h=(_=(w=u[0])+!(v="closed"===e.boundary[0]))*r,a=(C=(m=n.domain||e.domain)[0])[1]-C[0],d=0;d<_;++d){var c=C[0]+a*d/w,g=d*r;if(e.evaluate(lt,c),s)for(var f=lt[r],p=0;p<r;++p)i[g+p]=lt[p]/f;else for(p=0;p<r;++p)i[g+p]=lt[p]}i.length=h;break;case 2:var _,m,w=u[0],y=u[1],v="closed"===e.boundary[0],b=y+!(P="closed"===e.boundary[1]),C=(h=(_=w+!v)*b*r,(m=n.domain||e.domain)[0]),N=m[1],O=(a=C[1]-C[0],N[1]-N[0]);for(d=0;d<_;++d){c=C[0]+a*d/w;for(var S=0;S<b;++S){var D=N[0]+O*S/y;g=(d+_*S)*r;if(e.evaluate(lt,c,D),s)for(f=lt[r],p=0;p<r;++p)i[g+p]=lt[p]/f;else for(p=0;p<r;++p)i[g+p]=lt[p]}}i.length=h;v=n.closed[0];var P=n.closed[1],T=0;for(d=0;d<w;++d){var F=d,V=d+1;v&&(V%=w);for(S=0;S<y;++S){var I=S,x=S+1;P&&(x%=y),o[T++]=F+_*I,o[T++]=V+_*I,o[T++]=V+_*x,o[T++]=F+_*I,o[T++]=V+_*x,o[T++]=F+_*x}}o.length=T;break;default:throw new Error("Can only sample curves and surfaces")}return t};const ft=gt;function pt(t){k.call(this,t),X().call(this,t),this.addType(c().NurbsCurve),this.knots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[]}}pt.prototype=Object.assign(Object.create(k.prototype),X().prototype,{constructor:pt,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().inputOutput,"tessellation",new(o().SFInt32)),new(r())(c().initializeOnly,"closed",new(o().SFBool)),new(r())(c().initializeOnly,"order",new(o().SFInt32)(3)),new(r())(c().initializeOnly,"knot",new(o().MFDouble)),new(r())(c().inputOutput,"weight",new(o().MFDouble)),new(r())(c().inputOutput,"controlPoint",new(o().SFNode))]),getTypeName:function(){return"NurbsCurve"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){k.prototype.initialize.call(this),this._controlPoint.addInterest("set_controlPoint__",this),this.set_controlPoint__()},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=f()(c().X3DCoordinateNode,this._controlPoint),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this)},getTessellation:function(t){return z.getTessellation(this._tessellation.getValue(),t-this._order.getValue())},getClosed:function(t,e,n,i){return!!this._closed.getValue()&&z.getClosed(t,e,n,i)},getWeights:function(t,e,n){return z.getWeights(t,e,n)},getControlPoints:function(t,e,n,i,o){return z.getControlPoints(t,e,n,i,o)},tessellate:function(){if(this._order.getValue()<2)return[];if(!this.controlPointNode)return[];if(this.controlPointNode.getSize()<this._order.getValue())return[];const t=this.getVertices(),e=[];if(t.length){const n=t.length;for(let i=0;i<n;i+=8)e.push(t[i],t[i+1],t[i+2]);e.push(t[n-4],t[n-3],t[n-2])}return e},build:function(){if(this._order.getValue()<2)return;if(!this.controlPointNode)return;if(this.controlPointNode.getSize()<this._order.getValue())return;const t=this.getClosed(this._order.getValue(),this._knot,this._weight,this.controlPointNode),e=this.getWeights(this.weights,this.controlPointNode.getSize(),this._weight),n=this.getControlPoints(this.controlPoints,t,this._order.getValue(),e,this.controlPointNode),i=this.getKnots(this.knots,t,this._order.getValue(),this.controlPointNode.getSize(),this._knot),o=(i.at(-1),i[0],this._order.getValue()-1),s=this.surface=(this.surface||ft)({boundary:["open"],degree:[o],knots:[i],points:n,debug:!1});this.sampleOptions.resolution[0]=this.getTessellation(i.length),this.sampleOptions.haveWeights=Boolean(e);const r=ft.sample(this.mesh,s,this.sampleOptions).points,u=this.getVertices();for(let t=3,e=r.length;t<e;t+=3){const e=t-3;u.push(r[e],r[e+1],r[e+2],1),u.push(r[t],r[t+1],r[t+2],1)}}});const _t=pt;function mt(t){y.call(this,t),this.addType(c().NurbsCurve2D),this.knots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[]},this.array=[]}mt.prototype=Object.assign(Object.create(y.prototype),{constructor:mt,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().inputOutput,"tessellation",new(o().SFInt32)),new(r())(c().initializeOnly,"closed",new(o().SFBool)),new(r())(c().initializeOnly,"order",new(o().SFInt32)(3)),new(r())(c().initializeOnly,"knot",new(o().MFDouble)),new(r())(c().inputOutput,"weight",new(o().MFDouble)),new(r())(c().inputOutput,"controlPoint",new(o().MFVec2d))]),getTypeName:function(){return"NurbsCurve2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},getTessellation:function(t){return z.getTessellation(this._tessellation.getValue(),t-this._order.getValue())},getClosed:function(t,e,n,i){return!!this._closed.getValue()&&z.getClosed2D(t,e,n,i)},getKnots:function(t,e,n,i,o){return z.getKnots(t,e,n,i,o)},getWeights:function(t,e,n){return z.getWeights(t,e,n)},getControlPoints:function(t,e,n,i,o){return z.getControlPoints2D(t,e,n,i,o)},tessellate:function(t){const e=this.array;if(e.length=0,this._order.getValue()<2)return e;if(this._controlPoint.length<this._order.getValue())return e;const n=this.getClosed(this._order.getValue(),this._knot,this._weight,this._controlPoint),i=this.getWeights(this.weights,this._controlPoint.length,this._weight),o=this.getControlPoints(this.controlPoints,n,this._order.getValue(),i,this._controlPoint),s=this.getKnots(this.knots,n,this._order.getValue(),this._controlPoint.length,this._knot),r=(s.at(-1),s[0],this._order.getValue()-1),u=this.surface=(this.surface||ft)({boundary:["open"],degree:[r],knots:[s],points:o,debug:!1});this.sampleOptions.resolution[0]=this.getTessellation(s.length),this.sampleOptions.haveWeights=Boolean(i);const l=ft.sample(this.mesh,u,this.sampleOptions).points;switch(t){case 0:for(let t=0,n=l.length;t<n;t+=2)e.push(l[t],l[t+1]);break;case 1:for(let t=0,n=l.length;t<n;t+=2)e.push(l[t],0,l[t+1]);break;case 2:for(let t=0,n=l.length;t<n;t+=2)e.push(new(b())(l[t],l[t+1],0))}return e}});const wt=mt,yt=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Core/X3DChildNode");var vt=t.n(yt);const bt=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Interpolation/OrientationInterpolator");var Ct=t.n(bt);const Nt=window[Symbol.for("X_ITE.X3D-8.0.0")].require("standard/Math/Numbers/Rotation4");var Ot=t.n(Nt);function St(t){vt().call(this,t),this.addType(c().NurbsOrientationInterpolator),this.addChildObjects("rebuild",new(o().SFTime)),this.interpolator=new(Ct())(t),this.knots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[128]}}St.prototype=Object.assign(Object.create(vt().prototype),{constructor:St,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().inputOnly,"set_fraction",new(o().SFFloat)),new(r())(c().inputOutput,"order",new(o().SFInt32)(3)),new(r())(c().inputOutput,"knot",new(o().MFDouble)),new(r())(c().inputOutput,"weight",new(o().MFDouble)),new(r())(c().inputOutput,"controlPoint",new(o().SFNode)),new(r())(c().outputOnly,"value_changed",new(o().SFRotation))]),getTypeName:function(){return"NurbsOrientationInterpolator"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){vt().prototype.initialize.call(this),this._order.addInterest("requestRebuild",this),this._knot.addInterest("requestRebuild",this),this._weight.addInterest("requestRebuild",this),this._controlPoint.addInterest("set_controlPoint__",this),this._rebuild.addInterest("build",this),this._set_fraction.addFieldInterest(this.interpolator._set_fraction),this.interpolator._value_changed.addFieldInterest(this._value_changed),this.interpolator.setup(),this.set_controlPoint__()},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=f()(c().X3DCoordinateNode,this._controlPoint),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this),this.requestRebuild()},getClosed:function(t,e,n,i){return!1},getKnots:function(t,e,n,i,o){return z.getKnots(t,e,n,i,o)},getWeights:function(t,e,n){return z.getWeights(t,e,n)},getControlPoints:function(t,e,n,i,o){return z.getControlPoints(t,e,n,i,o)},requestRebuild:function(){this._rebuild.addEvent()},build:function(){if(this._order.getValue()<2)return;if(!this.controlPointNode)return;if(this.controlPointNode.getSize()<this._order.getValue())return;const t=this.getClosed(this._order.getValue(),this._knot,this._weight,this.controlPointNode),e=this.getWeights(this.weights,this.controlPointNode.getSize(),this._weight),n=this.getControlPoints(this.controlPoints,t,this._order.getValue(),e,this.controlPointNode),i=this.getKnots(this.knots,t,this._order.getValue(),this.controlPointNode.getSize(),this._knot),o=i.at(-1)-i[0],s=this._order.getValue()-1,r=this.surface=(this.surface||ft)({boundary:["open"],degree:[s],knots:[i],points:n,debug:!1});this.sampleOptions.haveWeights=Boolean(e);const u=ft.sample(this.mesh,r,this.sampleOptions).points,l=this.interpolator;l._key.length=0,l._keyValue.length=0;for(let e=0,n=u.length-3;e<n;e+=3){const s=new(b())(u[e+3]-u[e+0],u[e+4]-u[e+1],u[e+5]-u[e+2]);l._key.push(i[0]+e/(n-3+3*t)*o),l._keyValue.push(new(Ot())(b().zAxis,s))}t&&(l._key.push(i[0]+o),l._keyValue.push(l._keyValue[0]))}});const Dt=St,Pt=window[Symbol.for("X_ITE.X3D-8.0.0")].require("standard/Math/Algorithm");var Tt=t.n(Pt);function Ft(t){k.call(this,t),this.addType(c().X3DNurbsSurfaceGeometryNode),this.tessellationScale=1,this.uKnots=[],this.vKnots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[],closed:[]},this.textUKnots=[],this.textVKnots=[],this.textWeights=[],this.texControlPoints=[],this.texMesh={}}Ft.prototype=Object.assign(Object.create(k.prototype),{constructor:Ft,initialize:function(){k.prototype.initialize.call(this),this._texCoord.addInterest("set_texCoord__",this),this._controlPoint.addInterest("set_controlPoint__",this),this.set_texCoord__(),this.set_controlPoint__()},set_texCoord__:function(){this.texCoordNode&&this.texCoordNode.removeInterest("requestRebuild",this),this.nurbsTexCoordNode&&this.nurbsTexCoordNode.removeInterest("requestRebuild",this),this.texCoordNode=f()(c().X3DTextureCoordinateNode,this._texCoord),this.nurbsTexCoordNode=f()(c().NurbsTextureCoordinate,this._texCoord),this.texCoordNode&&this.texCoordNode.addInterest("requestRebuild",this),this.nurbsTexCoordNode&&this.nurbsTexCoordNode.addInterest("requestRebuild",this)},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=f()(c().X3DCoordinateNode,this._controlPoint),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this)},setTessellationScale:function(t){this.tessellationScale=t,this.requestRebuild()},getUTessellation:function(t){return Math.floor(z.getTessellation(this._uTessellation.getValue(),t-this._uOrder.getValue())*this.tessellationScale)},getVTessellation:function(t){return Math.floor(z.getTessellation(this._vTessellation.getValue(),t-this._vOrder.getValue())*this.tessellationScale)},getUClosed:function(t,e,n,i,o,s){return!!this._uClosed.getValue()&&z.getUClosed(t,e,n,i,o,s)},getVClosed:function(t,e,n,i,o,s){return!!this._vClosed.getValue()&&z.getVClosed(t,e,n,i,o,s)},getUVWeights:function(t,e,n,i){return z.getUVWeights(t,e,n,i)},getTexControlPoints:function(t,e,n,i,o,s,r,u){return z.getTexControlPoints(t,e,n,i,o,s,r,u)},getUVControlPoints:function(t,e,n,i,o,s,r,u,l){return z.getUVControlPoints(t,e,n,i,o,s,r,u,l)},getTrimmingContours:function(){},build:function(){if(this._uOrder.getValue()<2)return;if(this._vOrder.getValue()<2)return;if(this._uDimension.getValue()<this._uOrder.getValue())return;if(this._vDimension.getValue()<this._vOrder.getValue())return;if(!this.controlPointNode)return;if(this.controlPointNode.getSize()!==this._uDimension.getValue()*this._vDimension.getValue())return;const t=this.getUClosed(this._uOrder.getValue(),this._uDimension.getValue(),this._vDimension.getValue(),this._uKnot,this._weight,this.controlPointNode),e=this.getVClosed(this._vOrder.getValue(),this._uDimension.getValue(),this._vDimension.getValue(),this._vKnot,this._weight,this.controlPointNode),n=this.getUVWeights(this.weights,this._uDimension.getValue(),this._vDimension.getValue(),this._weight),i=this.getUVControlPoints(this.controlPoints,t,e,this._uOrder.getValue(),this._vOrder.getValue(),this._uDimension.getValue(),this._vDimension.getValue(),n,this.controlPointNode),o=this.getKnots(this.uKnots,t,this._uOrder.getValue(),this._uDimension.getValue(),this._uKnot),s=this.getKnots(this.vKnots,e,this._vOrder.getValue(),this._vDimension.getValue(),this._vKnot),r=(o.at(-1),o[0],s.at(-1),s[0],this._uOrder.getValue()-1),u=this._vOrder.getValue()-1,l=this.surface=(this.surface||ft)({boundary:["open","open"],degree:[r,u],knots:[o,s],points:i,debug:!1}),h=this.sampleOptions;h.resolution[0]=this.getUTessellation(o.length),h.resolution[1]=this.getVTessellation(s.length),h.closed[0]=t,h.closed[1]=e,h.domain=void 0,h.haveWeights=Boolean(n),h.trimmingContours=this.getTrimmingContours();const a=ft.sample(this.mesh,l,h),d=a.faces,c=a.points,g=this.getVertices();for(let t=0,e=d.length;t<e;++t){const e=3*d[t];g.push(c[e],c[e+1],c[e+2],1)}this.buildNurbsTexCoords(t,e,this._uOrder.getValue(),this._vOrder.getValue(),o,s,this._uDimension.getValue(),this._vDimension.getValue(),l.domain),this.buildNormals(d,c),this.setSolid(this._solid.getValue()),this.setCCW(!0)},buildNurbsTexCoords:function(){const t=[],e=[],n=[[[0,0,0,1],[0,1,0,1]],[[1,0,0,1],[1,1,0,1]]];function i(t,e){return t[0]=t[1]=e[0],t[2]=t[3]=e.at(-1),t}return function(o,s,r,u,l,h,a,d,c){const g=this.sampleOptions;if(this.texCoordNode&&this.texCoordNode.getSize()===a*d)var f=r-1,p=u-1,_=l,m=h,w=this.getTexControlPoints(this.texControlPoints,o,s,r,u,a,d,this.texCoordNode);else if(this.nurbsTexCoordNode&&this.nurbsTexCoordNode.isValid()){var y=this.nurbsTexCoordNode,v=(f=y._uOrder.getValue()-1,p=y._vOrder.getValue()-1,_=this.getKnots(this.texUKnots,!1,y._uOrder.getValue(),y._uDimension.getValue(),y._uKnot),m=this.getKnots(this.texVKnots,!1,y._vOrder.getValue(),y._vDimension.getValue(),y._vKnot),this.getUVWeights(this.texWeights,y._uDimension.getValue(),y._vDimension.getValue(),y._weight));w=y.getControlPoints(v)}else{f=1,p=1,_=i(t,l),m=i(e,h),w=n;g.domain=c}const b=this.texSurface=(this.texSurface||ft)({boundary:["open","open"],degree:[f,p],knots:[_,m],points:w});g.closed[0]=!1,g.closed[1]=!1,g.haveWeights=!1;const C=ft.sample(this.texMesh,b,g),N=C.faces,O=C.points,S=this.getTexCoords();for(let t=0,e=N.length;t<e;++t){const e=4*N[t];S.push(O[e],O[e+1],O[e+2],O[e+3])}this.getMultiTexCoords().push(this.getTexCoords())}}(),buildNormals:function(t,e){const n=this.createNormals(t,e),i=this.getNormals();for(const t of n)i.push(t.x,t.y,t.z)},createNormals:function(t,e){const n=this.createFaceNormals(t,e),i=[];for(let e=0,n=t.length;e<n;++e){const n=t[e];let o=i[n];o||(o=i[n]=[]),o.push(e)}return this.refineNormals(i,n,Tt().radians(85))},createFaceNormals:function(){const t=new(b())(0,0,0),e=new(b())(0,0,0),n=new(b())(0,0,0);return function(i,o){const s=this.faceNormals||[],r=i.length;for(let u=0;u<r;u+=3){const r=3*i[u],l=3*i[u+1],h=3*i[u+2];t.set(o[r],o[r+1],o[r+2]),e.set(o[l],o[l+1],o[l+2]),n.set(o[h],o[h+1],o[h+2]);const a=ut().normal(t,e,n,s[u]||new(b())(0,0,0));s[u]=a,s[u+1]=a,s[u+2]=a}return s.length=r,s}}()});const Vt=Ft;function It(t){Vt.call(this,t),this.addType(c().NurbsPatchSurface)}It.prototype=Object.assign(Object.create(Vt.prototype),{constructor:It,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().initializeOnly,"solid",new(o().SFBool)(!0)),new(r())(c().inputOutput,"uTessellation",new(o().SFInt32)),new(r())(c().inputOutput,"vTessellation",new(o().SFInt32)),new(r())(c().initializeOnly,"uClosed",new(o().SFBool)),new(r())(c().initializeOnly,"vClosed",new(o().SFBool)),new(r())(c().initializeOnly,"uOrder",new(o().SFInt32)(3)),new(r())(c().initializeOnly,"vOrder",new(o().SFInt32)(3)),new(r())(c().initializeOnly,"uDimension",new(o().SFInt32)),new(r())(c().initializeOnly,"vDimension",new(o().SFInt32)),new(r())(c().initializeOnly,"uKnot",new(o().MFDouble)),new(r())(c().initializeOnly,"vKnot",new(o().MFDouble)),new(r())(c().inputOutput,"weight",new(o().MFDouble)),new(r())(c().inputOutput,"texCoord",new(o().SFNode)),new(r())(c().inputOutput,"controlPoint",new(o().SFNode))]),getTypeName:function(){return"NurbsPatchSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"}});const xt=It,Rt=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Interpolation/PositionInterpolator");var zt=t.n(Rt);function jt(t){vt().call(this,t),this.addType(c().NurbsPositionInterpolator),this.addChildObjects("rebuild",new(o().SFTime)),this.interpolator=new(zt())(t),this.knots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[128]}}jt.prototype=Object.assign(Object.create(vt().prototype),{constructor:jt,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().inputOnly,"set_fraction",new(o().SFFloat)),new(r())(c().inputOutput,"order",new(o().SFInt32)(3)),new(r())(c().inputOutput,"knot",new(o().MFDouble)),new(r())(c().inputOutput,"weight",new(o().MFDouble)),new(r())(c().inputOutput,"controlPoint",new(o().SFNode)),new(r())(c().outputOnly,"value_changed",new(o().SFVec3f))]),getTypeName:function(){return"NurbsPositionInterpolator"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){vt().prototype.initialize.call(this),this._order.addInterest("requestRebuild",this),this._knot.addInterest("requestRebuild",this),this._weight.addInterest("requestRebuild",this),this._controlPoint.addInterest("set_controlPoint__",this),this._rebuild.addInterest("build",this),this._set_fraction.addFieldInterest(this.interpolator._set_fraction),this.interpolator._value_changed.addFieldInterest(this._value_changed),this.interpolator.setup(),this.set_controlPoint__()},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=f()(c().X3DCoordinateNode,this._controlPoint),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this),this.requestRebuild()},getClosed:function(t,e,n,i){return!1},getKnots:function(t,e,n,i,o){return z.getKnots(t,e,n,i,o)},getWeights:function(t,e,n){return z.getWeights(t,e,n)},getControlPoints:function(t,e,n,i,o){return z.getControlPoints(t,e,n,i,o)},requestRebuild:function(){this._rebuild.addEvent()},build:function(){if(this._order.getValue()<2)return;if(!this.controlPointNode)return;if(this.controlPointNode.getSize()<this._order.getValue())return;const t=this.getClosed(this._order.getValue(),this._knot,this._weight,this.controlPointNode),e=this.getWeights(this.weights,this.controlPointNode.getSize(),this._weight),n=this.getControlPoints(this.controlPoints,t,this._order.getValue(),e,this.controlPointNode),i=this.getKnots(this.knots,t,this._order.getValue(),this.controlPointNode.getSize(),this._knot),s=i.at(-1)-i[0],r=this._order.getValue()-1,u=this.surface=(this.surface||ft)({boundary:["open"],degree:[r],knots:[i],points:n,debug:!1});this.sampleOptions.haveWeights=Boolean(e);const l=ft.sample(this.mesh,u,this.sampleOptions).points,h=this.interpolator;h._key.length=0,h._keyValue.length=0;for(let t=0,e=l.length;t<e;t+=3)h._key.push(i[0]+t/(e-3)*s),h._keyValue.push(new(o().SFVec3f)(l[t],l[t+1],l[t+2]))}});const kt=jt,At=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Grouping/X3DBoundedObject");var Xt=t.n(At);function Bt(t){vt().call(this,t),Xt().call(this,t),this.addType(c().NurbsSet),this.geometryNodes=[]}function Et(t,e,n,i,o,s){const r=new Set;for(let t=o;t<s;++t)r.add(i[t]);return t.remove(e,n,(function(t){return r.has(t)}))}Bt.prototype=Object.assign(Object.create(vt().prototype),Xt().prototype,{constructor:Bt,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().inputOutput,"tessellationScale",new(o().SFFloat)(1)),new(r())(c().inputOutput,"visible",new(o().SFBool)(!0)),new(r())(c().inputOutput,"bboxDisplay",new(o().SFBool)),new(r())(c().initializeOnly,"bboxSize",new(o().SFVec3f)(-1,-1,-1)),new(r())(c().initializeOnly,"bboxCenter",new(o().SFVec3f)),new(r())(c().inputOnly,"addGeometry",new(o().MFNode)),new(r())(c().inputOnly,"removeGeometry",new(o().MFNode)),new(r())(c().inputOutput,"geometry",new(o().MFNode))]),getTypeName:function(){return"NurbsSet"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){vt().prototype.initialize.call(this),Xt().prototype.initialize.call(this),this._tessellationScale.addInterest("set_tessellationScale__",this),this._addGeometry.addInterest("set_addGeometry__",this),this._removeGeometry.addInterest("set_removeGeometry__",this),this._geometry.addInterest("set_geometry__",this),this.set_geometry__()},getBBox:function(t,e){for(const e of this.geometryNodes)t.add(e.getBBox());return t},set_tessellationScale__:function(){const t=Math.max(0,this._tessellationScale.getValue());for(const e of this.geometryNodes)e.setTessellationScale(t)},set_addGeometry__:function(){this._addGeometry.setTainted(!0),this._addGeometry.erase(Et(this._addGeometry,0,this._addGeometry.length,this._geometry,0,this._geometry.length),this._addGeometry.length);for(const t of this._addGeometry)this._geometry.push(t);this._addGeometry.length=0,this._addGeometry.setTainted(!1)},set_removeGeometry__:function(){this._removeGeometry.setTainted(!0),this._geometry.erase(Et(this._geometry,0,this._geometry.length,this._removeGeometry,0,this._removeGeometry.length),this._geometry.length),this._removeGeometry.length=0,this._removeGeometry.setTainted(!1)},set_geometry__:function(){for(const t of this.geometryNodes)t.setTessellationScale(1);this.geometryNodes.length=0;for(const t of this._geometry){const e=f()(c().X3DNurbsSurfaceGeometryNode,t);e&&this.geometryNodes.push(e)}this.set_tessellationScale__()}});const qt=Bt,Kt=window[Symbol.for("X_ITE.X3D-8.0.0")].require("standard/Math/Geometry/Line3");var Mt=t.n(Kt);const Gt=function(t,e,n,i){const o=(e.y-n.y)*(t.x-n.x)+(n.x-e.x)*(t.y-n.y);if(0==o)return!1;const s=((e.y-n.y)*(i.x-n.x)+(n.x-e.x)*(i.y-n.y))/o;if(s<0||s>1)return!1;const r=((n.y-t.y)*(i.x-n.x)+(t.x-n.x)*(i.y-n.y))/o;if(r<0||r>1)return!1;const u=1-s-r;return!(u<0||u>1)};function Wt(t){vt().call(this,t),this.addType(c().NurbsSurfaceInterpolator),this.geometry=new xt(t)}Wt.prototype=Object.assign(Object.create(vt().prototype),{constructor:Wt,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().inputOnly,"set_fraction",new(o().SFVec2f)),new(r())(c().initializeOnly,"uOrder",new(o().SFInt32)(3)),new(r())(c().initializeOnly,"vOrder",new(o().SFInt32)(3)),new(r())(c().initializeOnly,"uDimension",new(o().SFInt32)),new(r())(c().initializeOnly,"vDimension",new(o().SFInt32)),new(r())(c().initializeOnly,"uKnot",new(o().MFDouble)),new(r())(c().initializeOnly,"vKnot",new(o().MFDouble)),new(r())(c().inputOutput,"weight",new(o().MFDouble)),new(r())(c().inputOutput,"controlPoint",new(o().SFNode)),new(r())(c().outputOnly,"normal_changed",new(o().SFVec3f)),new(r())(c().outputOnly,"position_changed",new(o().SFVec3f))]),getTypeName:function(){return"NurbsSurfaceInterpolator"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){this._set_fraction.addInterest("set_fraction__",this),this._uOrder.addFieldInterest(this.geometry._uOrder),this._vOrder.addFieldInterest(this.geometry._vOrder),this._uDimension.addFieldInterest(this.geometry._uDimension),this._vDimension.addFieldInterest(this.geometry._vDimension),this._uKnot.addFieldInterest(this.geometry._uKnot),this._vKnot.addFieldInterest(this.geometry._vKnot),this._weight.addFieldInterest(this.geometry._weight),this._controlPoint.addFieldInterest(this.geometry._controlPoint),this.geometry._uTessellation=128,this.geometry._vTessellation=128,this.geometry._uOrder=this._uOrder,this.geometry._vOrder=this._vOrder,this.geometry._uDimension=this._uDimension,this.geometry._vDimension=this._vDimension,this.geometry._uKnot=this._uKnot,this.geometry._vKnot=this._vKnot,this.geometry._weight=this._weight,this.geometry._controlPoint=this._controlPoint,this.geometry.setup()},set_fraction__:function(){const t=new(b())(0,0,0),e=new(b())(0,0,0),n=new(b())(0,0,0),i=new(b())(0,0,0),o=new(Mt())(b().Zero,b().zAxis),s={};return function(){const r=this._set_fraction.getValue(),u=this.geometry.getTexCoords(),l=this.geometry.getNormals(),h=this.geometry.getVertices();for(let a=0,d=0,c=u.length;a<c;a+=12,d+=9)if(t.set(u[a+0],u[a+1],0),e.set(u[a+4],u[a+5],0),n.set(u[a+7],u[a+9],0),Gt(t,e,n,r)&&(o.set(i.set(r.x,r.y,0),b().zAxis),o.intersectsTriangle(t,e,n,s))){const t=s.u,e=s.v,n=s.t,i=new(b())(n*l[d+0]+t*l[d+3]+e*l[d+6],n*l[d+1]+t*l[d+4]+e*l[d+7],n*l[d+2]+t*l[d+5]+e*l[d+8]),o=new(b())(n*h[a+0]+t*h[a+4]+e*h[a+8],n*h[a+1]+t*h[a+5]+e*h[a+9],n*h[a+2]+t*h[a+6]+e*h[a+10]);this._normal_changed=i,this._position_changed=o}}}()});const Ut=Wt,Yt=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Geometry3D/Extrusion");var Jt=t.n(Yt);function Lt(t){k.call(this,t),this.addType(c().NurbsSweptSurface),this.extrusion=new(Jt())(t)}Lt.prototype=Object.assign(Object.create(k.prototype),{constructor:Lt,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().initializeOnly,"solid",new(o().SFBool)(!0)),new(r())(c().initializeOnly,"ccw",new(o().SFBool)(!0)),new(r())(c().inputOutput,"crossSectionCurve",new(o().SFNode)),new(r())(c().inputOutput,"trajectoryCurve",new(o().SFNode))]),getTypeName:function(){return"NurbsSweptSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){k.prototype.initialize.call(this),this._crossSectionCurve.addInterest("set_crossSectionCurve__",this),this._trajectoryCurve.addInterest("set_trajectoryCurve__",this);const t=this.extrusion;t._beginCap=!1,t._endCap=!1,t._solid=!0,t._ccw=!0,t._convex=!0,t._creaseAngle=Math.PI,t.setup(),t._crossSection.setTainted(!0),t._spine.setTainted(!0),this.set_crossSectionCurve__(),this.set_trajectoryCurve__()},set_crossSectionCurve__:function(){this.crossSectionCurveNode&&this.crossSectionCurveNode.removeInterest("requestRebuild",this),this.crossSectionCurveNode=f()(c().X3DNurbsControlCurveNode,this._crossSectionCurve),this.crossSectionCurveNode&&this.crossSectionCurveNode.addInterest("requestRebuild",this)},set_trajectoryCurve__:function(){this.trajectoryCurveNode&&this.trajectoryCurveNode._rebuild.removeInterest("requestRebuild",this),this.trajectoryCurveNode=f()(c().NurbsCurve,this._trajectoryCurve),this.trajectoryCurveNode&&this.trajectoryCurveNode._rebuild.addInterest("requestRebuild",this)},build:function(){if(!this.crossSectionCurveNode)return;if(!this.trajectoryCurveNode)return;const t=this.extrusion;if(t._crossSection=this.crossSectionCurveNode.tessellate(0),t._spine=this.trajectoryCurveNode.tessellate(0),t.rebuild(),this.getColors().assign(t.getColors()),this.getTexCoords().assign(t.getTexCoords()),this.getNormals().assign(t.getNormals()),this.getVertices().assign(t.getVertices()),this.getMultiTexCoords().push(this.getTexCoords()),!this._ccw.getValue()){const t=this.getNormals();for(let e=0,n=t.length;e<n;++e)t[e]=-t[e]}this.setSolid(this._solid.getValue()),this.setCCW(this._ccw.getValue())}});const Zt=Lt;function Ht(t){k.call(this,t),this.addType(c().NurbsSwungSurface),this.extrusion=new(Jt())(t)}Ht.prototype=Object.assign(Object.create(k.prototype),{constructor:Ht,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().initializeOnly,"solid",new(o().SFBool)(!0)),new(r())(c().initializeOnly,"ccw",new(o().SFBool)(!0)),new(r())(c().inputOutput,"profileCurve",new(o().SFNode)),new(r())(c().inputOutput,"trajectoryCurve",new(o().SFNode))]),getTypeName:function(){return"NurbsSwungSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){k.prototype.initialize.call(this),this._profileCurve.addInterest("set_profileCurve__",this),this._trajectoryCurve.addInterest("set_trajectoryCurve__",this);const t=this.extrusion;t._beginCap=!1,t._endCap=!1,t._solid=!0,t._ccw=!0,t._convex=!0,t._creaseAngle=Math.PI,t.setup(),t._crossSection.setTainted(!0),t._spine.setTainted(!0),this.set_profileCurve__(),this.set_trajectoryCurve__()},set_profileCurve__:function(){this.profileCurveNode&&this.profileCurveNode.removeInterest("requestRebuild",this),this.profileCurveNode=f()(c().X3DNurbsControlCurveNode,this._profileCurve),this.profileCurveNode&&this.profileCurveNode.addInterest("requestRebuild",this)},set_trajectoryCurve__:function(){this.trajectoryCurveNode&&this.trajectoryCurveNode.removeInterest("requestRebuild",this),this.trajectoryCurveNode=f()(c().X3DNurbsControlCurveNode,this._trajectoryCurve),this.trajectoryCurveNode&&this.trajectoryCurveNode.addInterest("requestRebuild",this)},build:function(){if(!this.profileCurveNode)return;if(!this.trajectoryCurveNode)return;const t=this.extrusion;if(t._crossSection=this.profileCurveNode.tessellate(0),t._spine=this.trajectoryCurveNode.tessellate(1),t.rebuild(),this.getColors().assign(t.getColors()),this.getTexCoords().assign(t.getTexCoords()),this.getNormals().assign(t.getNormals()),this.getVertices().assign(t.getVertices()),this.getMultiTexCoords().push(this.getTexCoords()),!this._ccw.getValue()){const t=this.getNormals();for(let e=0,n=t.length;e<n;++e)t[e]=-t[e]}this.setSolid(this._solid.getValue()),this.setCCW(this._ccw.getValue())}});const Qt=Ht;function $t(t){a().call(this,t),this.addType(c().NurbsTextureCoordinate),this.controlPoints=[]}$t.prototype=Object.assign(Object.create(a().prototype),{constructor:$t,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().initializeOnly,"uOrder",new(o().SFInt32)(3)),new(r())(c().initializeOnly,"vOrder",new(o().SFInt32)(3)),new(r())(c().initializeOnly,"uDimension",new(o().SFInt32)),new(r())(c().initializeOnly,"vDimension",new(o().SFInt32)),new(r())(c().initializeOnly,"uKnot",new(o().MFDouble)),new(r())(c().initializeOnly,"vKnot",new(o().MFDouble)),new(r())(c().inputOutput,"weight",new(o().MFDouble)),new(r())(c().inputOutput,"controlPoint",new(o().MFVec2f))]),getTypeName:function(){return"NurbsTextureCoordinate"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"texCoord"},initialize:function(){a().prototype.initialize.call(this)},getControlPoints:function(t){const e=this._controlPoint.getValue(),n=this.controlPoints;for(let i=0,o=this._uDimension.getValue();i<o;++i){let s=n[i];s||(s=n[i]=[]);for(let n=0,r=this._vDimension.getValue();n<r;++n){const r=n*o+i,u=s[n]||new(R()),l=2*r;s[n]=u.set(e[l],e[l+1],0,t?t[r]:1)}}return n},isValid:function(){return!(this._uOrder.getValue()<2)&&(!(this._vOrder.getValue()<2)&&(!(this._uDimension.getValue()<this._uOrder.getValue())&&(!(this._vDimension.getValue()<this._vOrder.getValue())&&this._controlPoint.length===this._uDimension.getValue()*this._vDimension.getValue())))}});const te=$t;function ee(t){Vt.call(this,t),this.addType(c().NurbsTrimmedSurface),this.trimmingContourNodes=[]}function ne(t,e,n,i,o,s){const r=new Set;for(let t=o;t<s;++t)r.add(i[t]);return t.remove(e,n,(function(t){return r.has(t)}))}ee.prototype=Object.assign(Object.create(Vt.prototype),{constructor:ee,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(l())([new(r())(c().inputOutput,"metadata",new(o().SFNode)),new(r())(c().initializeOnly,"solid",new(o().SFBool)(!0)),new(r())(c().inputOutput,"uTessellation",new(o().SFInt32)),new(r())(c().inputOutput,"vTessellation",new(o().SFInt32)),new(r())(c().initializeOnly,"uClosed",new(o().SFBool)),new(r())(c().initializeOnly,"vClosed",new(o().SFBool)),new(r())(c().initializeOnly,"uOrder",new(o().SFInt32)(3)),new(r())(c().initializeOnly,"vOrder",new(o().SFInt32)(3)),new(r())(c().initializeOnly,"uDimension",new(o().SFInt32)),new(r())(c().initializeOnly,"vDimension",new(o().SFInt32)),new(r())(c().initializeOnly,"uKnot",new(o().MFDouble)),new(r())(c().initializeOnly,"vKnot",new(o().MFDouble)),new(r())(c().inputOutput,"weight",new(o().MFDouble)),new(r())(c().inputOutput,"texCoord",new(o().SFNode)),new(r())(c().inputOutput,"controlPoint",new(o().SFNode)),new(r())(c().inputOnly,"addTrimmingContour",new(o().MFNode)),new(r())(c().inputOnly,"removeTrimmingContour",new(o().MFNode)),new(r())(c().inputOutput,"trimmingContour",new(o().MFNode))]),getTypeName:function(){return"NurbsTrimmedSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){Vt.prototype.initialize.call(this),this._addTrimmingContour.addInterest("set_addTrimmingContour__",this),this._removeTrimmingContour.addInterest("set_removeTrimmingContour__",this),this._trimmingContour.addInterest("set_trimmingContour__",this),this.set_trimmingContour__()},set_addTrimmingContour__:function(){this._addTrimmingContour.setTainted(!0),this._addTrimmingContour.erase(ne(this._addTrimmingContour,0,this._addTrimmingContour.length,this._trimmingContour,0,this._trimmingContour.length),this._addTrimmingContour.length);for(const t of this._addTrimmingContour)this._trimmingContour.push(t);this._addTrimmingContour.length=0,this._addTrimmingContour.setTainted(!1)},set_removeTrimmingContour__:function(){this._removeTrimmingContour.setTainted(!0),this._trimmingContour.erase(ne(this._trimmingContour,0,this._trimmingContour.length,this._removeTrimmingContour,0,this._removeTrimmingContour.length),this._trimmingContour.length),this._removeTrimmingContour.length=0,this._removeTrimmingContour.setTainted(!1)},set_trimmingContour__:function(){const t=this.trimmingContourNodes;t.length=0;for(const e of this._trimmingContour){const n=f()(c().Contour2D,e);n&&t.push(n)}},getTrimmingContours:function(){const t=this.trimmingContourNodes,e=[];for(const n of t)n.addTrimmingContour(e);return e}});const ie=ee;n().addComponent({name:"NURBS",types:{Contour2D:m,ContourPolyline2D:N,CoordinateDouble:P,NurbsCurve:_t,NurbsCurve2D:wt,NurbsOrientationInterpolator:Dt,NurbsPatchSurface:xt,NurbsPositionInterpolator:kt,NurbsSet:qt,NurbsSurfaceInterpolator:Ut,NurbsSweptSurface:Zt,NurbsSwungSurface:Qt,NurbsTextureCoordinate:te,NurbsTrimmedSurface:ie},abstractTypes:{X3DNurbsControlCurveNode:y,X3DNurbsSurfaceGeometryNode:Vt,X3DParametricGeometryNode:k}})})();