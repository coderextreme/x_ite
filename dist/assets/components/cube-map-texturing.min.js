!function(){const e=X3D.define,t=X3D.require;e("x_ite/Components/CubeMapTexturing/X3DEnvironmentTextureNode",["x_ite/Components/Texturing/X3DSingleTextureNode","x_ite/Bits/X3DConstants"],function(e,t){"use strict";function i(i){e.call(this,i),this.addType(t.X3DEnvironmentTextureNode);const r=this.getBrowser().getContext();this.target=r.TEXTURE_CUBE_MAP,this.targets=[r.TEXTURE_CUBE_MAP_POSITIVE_Z,r.TEXTURE_CUBE_MAP_NEGATIVE_Z,r.TEXTURE_CUBE_MAP_NEGATIVE_X,r.TEXTURE_CUBE_MAP_POSITIVE_X,r.TEXTURE_CUBE_MAP_POSITIVE_Y,r.TEXTURE_CUBE_MAP_NEGATIVE_Y]}return i.prototype=Object.assign(Object.create(e.prototype),{constructor:i,getTarget:function(){return this.target},getTargets:function(){return this.targets},clearTexture:function(){var e=new Uint8Array([255,255,255,255]);return function(){var t=this.getBrowser().getContext(),i=this.getTargets();t.bindTexture(this.getTarget(),this.getTexture());for(var r=0,n=i.length;r<n;++r)t.texImage2D(i[r],0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,e)}}(),updateTextureProperties:function(){e.prototype.updateTextureProperties.call(this,this.target,this.textureProperties_.getValue(),this.texturePropertiesNode,128,128,!1,!1,!1)},setShaderUniformsToChannel:function(e,t,i,r){e.activeTexture(e.TEXTURE0+t.getBrowser().getCubeMapTextureUnits()[r]),e.bindTexture(e.TEXTURE_CUBE_MAP,this.getTexture()),e.uniform1i(t.x3d_TextureType[r],4)}}),i}),e("x_ite/Components/CubeMapTexturing/ComposedCubeMapTexture",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/CubeMapTexturing/X3DEnvironmentTextureNode","x_ite/Bits/X3DCast","x_ite/Bits/X3DConstants"],function(e,t,i,r,n,a){"use strict";function s(e){r.call(this,e),this.addType(a.ComposedCubeMapTexture),this.addAlias("front",this.frontTexture_),this.addAlias("back",this.backTexture_),this.addAlias("left",this.leftTexture_),this.addAlias("right",this.rightTexture_),this.addAlias("bottom",this.bottomTexture_),this.addAlias("top",this.topTexture_),this.textures=[null,null,null,null,null,null],this.loadStates=0}return s.prototype=Object.assign(Object.create(r.prototype),{constructor:s,[Symbol.for("X3DBaseNode.fieldDefinitions")]:new i([new t(a.inputOutput,"metadata",new e.SFNode),new t(a.inputOutput,"description",new e.SFString),new t(a.inputOutput,"frontTexture",new e.SFNode),new t(a.inputOutput,"backTexture",new e.SFNode),new t(a.inputOutput,"leftTexture",new e.SFNode),new t(a.inputOutput,"rightTexture",new e.SFNode),new t(a.inputOutput,"bottomTexture",new e.SFNode),new t(a.inputOutput,"topTexture",new e.SFNode),new t(a.initializeOnly,"textureProperties",new e.SFNode)]),getTypeName:function(){return"ComposedCubeMapTexture"},getComponentName:function(){return"CubeMapTexturing"},getContainerField:function(){return"texture"},initialize:function(){r.prototype.initialize.call(this),this.clearTexture(),this.frontTexture_.addInterest("set_texture__",this,0),this.backTexture_.addInterest("set_texture__",this,1),this.leftTexture_.addInterest("set_texture__",this,2),this.rightTexture_.addInterest("set_texture__",this,3),this.topTexture_.addInterest("set_texture__",this,5),this.bottomTexture_.addInterest("set_texture__",this,4),this.set_texture__(this.frontTexture_,0),this.set_texture__(this.backTexture_,1),this.set_texture__(this.leftTexture_,2),this.set_texture__(this.rightTexture_,3),this.set_texture__(this.topTexture_,4),this.set_texture__(this.bottomTexture_,5)},set_texture__:function(e,t){var i=this.textures[t];if(i){var r="set_loadState__"+i.getId()+"_"+t;i.removeInterest("set_loadState__",this),i.loadState_.removeFieldCallback(r)}var i=this.textures[t]=n(a.X3DTexture2DNode,e);if(i){var r="set_loadState__"+i.getId()+"_"+t;i.addInterest("set_loadState__",this,i,t),i.loadState_.addFieldCallback(r,this.set_loadState__.bind(this,null,i,t))}this.set_loadState__(null,i,t)},set_loadState__:function(e,t,i){t?this.setLoadStateBit(t.checkLoadState(),t.getData(),i):this.setLoadStateBit(a.NOT_STARTED,null,i),this.setTextures()},setLoadStateBit:function(e,t,i){e===a.COMPLETE_STATE||t?this.loadStates|=1<<i:this.loadStates&=~(1<<i)},isComplete:function(){if(63!==this.loadStates)return!1;for(var e=this.textures,t=e[0].getWidth(),i=0;i<6;++i){var r=e[i];if(r.getWidth()!==t)return!1;if(r.getHeight()!==t)return!1}return!0},setTextures:function(){var e=this.getBrowser().getContext();if(e.bindTexture(this.getTarget(),this.getTexture()),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!1),this.isComplete()){for(var t=this.textures,i=0;i<6;++i){var e=this.getBrowser().getContext(),r=t[i],n=r.getWidth(),a=r.getHeight(),s=r.getData();e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!r.getFlipY()),e.pixelStorei(e.UNPACK_ALIGNMENT,1),s instanceof Uint8Array?e.texImage2D(this.getTargets()[i],0,e.RGBA,n,a,!1,e.RGBA,e.UNSIGNED_BYTE,s):e.texImage2D(this.getTargets()[i],0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,s)}this.updateTextureProperties()}else this.clearTexture();this.set_transparent__()},set_transparent__:function(){var e=this.textures,t=!1;if(this.isComplete())for(var i=0;i<6;++i)if(e[i].transparent_.getValue()){t=!0;break}this.setTransparent(t)}}),s}),e("x_ite/Rendering/DependentRenderer",["x_ite/Basic/X3DBaseNode","x_ite/Rendering/X3DRenderObject","x_ite/Bits/TraverseType"],function(e,t,i){"use strict";function r(i){e.call(this,i),t.call(this,i),this.renderObject=null}return r.prototype=Object.assign(Object.create(e.prototype),t.prototype,{constructor:r,initialize:function(){e.prototype.initialize.call(this),t.prototype.initialize.call(this)},isIndependent:function(){return!1},setRenderer:function(e){this.renderObject=e},getBrowser:function(){return this.renderObject.getBrowser()},getLayer:function(){return this.renderObject.getLayer()},getBackground:function(){return this.renderObject.getBackground()},getFog:function(){return this.renderObject.getFog()},getNavigationInfo:function(){return this.renderObject.getNavigationInfo()},getViewpoint:function(){return this.renderObject.getViewpoint()},getLightContainer:function(){return this.renderObject.getLights()[this.lightIndex++]},render:function(e,r,n){switch(e){case i.COLLISION:t.prototype.render.call(this,e,r,n);break;case i.SHADOW:t.prototype.render.call(this,e,r,n);break;case i.DISPLAY:this.lightIndex=0,t.prototype.render.call(this,e,r,n);for(const e of this.renderObject.getLights())e.getModelViewMatrix().pop()}}}),r}),e("x_ite/Components/CubeMapTexturing/GeneratedCubeMapTexture",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/CubeMapTexturing/X3DEnvironmentTextureNode","x_ite/Rendering/DependentRenderer","x_ite/Rendering/TextureBuffer","x_ite/Bits/X3DConstants","x_ite/Bits/TraverseType","standard/Math/Geometry/Camera","standard/Math/Geometry/ViewVolume","standard/Math/Numbers/Rotation4","standard/Math/Numbers/Vector3","standard/Math/Numbers/Vector4","standard/Math/Numbers/Matrix4","standard/Math/Algorithm"],function(e,t,i,r,n,a,s,o,u,h,d,g,p,x,l){"use strict";function c(e){r.call(this,e),this.addType(s.GeneratedCubeMapTexture),this.renderer=new n(e),this.projectionMatrix=new x,this.modelMatrix=new x,this.viewVolume=new h}var _=[new d(g.zAxis,new g(0,0,-1)),new d(g.zAxis,new g(0,0,1)),new d(g.zAxis,new g(1,0,0)),new d(g.zAxis,new g(-1,0,0)),new d(g.zAxis,new g(0,-1,0)),new d(g.zAxis,new g(0,1,0))],T=[new g(-1,-1,1),new g(-1,-1,1),new g(-1,-1,1),new g(-1,-1,1),new g(1,1,1),new g(1,1,1)],f=new x;return c.prototype=Object.assign(Object.create(r.prototype),{constructor:c,[Symbol.for("X3DBaseNode.fieldDefinitions")]:new i([new t(s.inputOutput,"metadata",new e.SFNode),new t(s.inputOutput,"description",new e.SFString),new t(s.inputOutput,"update",new e.SFString("NONE")),new t(s.initializeOnly,"size",new e.SFInt32(128)),new t(s.initializeOnly,"textureProperties",new e.SFNode)]),getTypeName:function(){return"GeneratedCubeMapTexture"},getComponentName:function(){return"CubeMapTexturing"},getContainerField:function(){return"texture"},initialize:function(){r.prototype.initialize.call(this),this.renderer.setup();var e=l.nextPowerOfTwo(this.size_.getValue());if(e>0){e=l.nextPowerOfTwo(e);var t=this.getBrowser().getContext(),i=new Uint8Array(e*e*4);t.bindTexture(this.getTarget(),this.getTexture());for(var n=0;n<6;++n)t.texImage2D(this.getTargets()[n],0,t.RGBA,e,e,0,t.RGBA,t.UNSIGNED_BYTE,i);this.viewport=new p(0,0,e,e),this.frameBuffer=new a(this.getBrowser(),e,e)}},traverse:function(e,t){e===o.DISPLAY&&"NONE"!==this.update_.getValue()&&this.frameBuffer&&t.isIndependent()&&(t.getGeneratedCubeMapTextures().push(this),this.modelMatrix.assign(t.getModelViewMatrix().get()).multRight(t.getCameraSpaceMatrix().get()))},renderTexture:function(e){this.renderer.setRenderer(e);var t=this.renderer,i=e.getBrowser(),r=e.getLayer(),n=i.getContext(),a=t.getBackground(),s=t.getNavigationInfo(),h=t.getViewpoint(),d=i.getHeadlight(),g=s.headlight_.getValue(),p=s.getNearValue(),c=s.getFarValue(h),w=u.perspective(l.radians(90),p,c,1,1,this.projectionMatrix);this.setTransparent(a.getTransparent()),this.frameBuffer.bind(),t.getViewVolumes().push(this.viewVolume.set(w,this.viewport,this.viewport)),t.getProjectionMatrix().pushMatrix(w),n.bindTexture(this.getTarget(),this.getTexture()),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!1);for(var m=0;m<6;++m){n.clear(n.COLOR_BUFFER_BIT),t.getCameraSpaceMatrix().pushMatrix(this.modelMatrix),t.getCameraSpaceMatrix().rotate(_[m]),t.getCameraSpaceMatrix().scale(T[m]);try{t.getViewMatrix().pushMatrix(f.assign(t.getCameraSpaceMatrix().get()).inverse())}catch(e){console.log(e),t.getViewMatrix().pushMatrix(x.Identity)}t.getModelViewMatrix().pushMatrix(f),g&&(d.getModelViewMatrix().pushMatrix(f),d.getModelViewMatrix().multLeft(h.getCameraSpaceMatrix())),r.traverse(o.DISPLAY,t),g&&d.getModelViewMatrix().pop(),t.getModelViewMatrix().pop(),t.getCameraSpaceMatrix().pop(),t.getViewMatrix().pop();var C=this.frameBuffer.readPixels(),M=this.frameBuffer.getWidth(),b=this.frameBuffer.getHeight();n.texImage2D(this.getTargets()[m],0,n.RGBA,M,b,!1,n.RGBA,n.UNSIGNED_BYTE,C)}this.updateTextureProperties(),t.getProjectionMatrix().pop(),t.getViewVolumes().pop(),this.frameBuffer.unbind(),"NEXT_FRAME_ONLY"===this.update_.getValue()&&(this.update_="NONE")},setShaderUniformsToChannel:function(){const e=new Float32Array(16);return function(t,i,n,a){r.prototype.setShaderUniformsToChannel.call(this,t,i,n,a),n.isIndependent()||t.uniformMatrix4fv(i.x3d_ModelViewMatrix,!1,e)}}()}),c}),e("x_ite/Components/CubeMapTexturing/ImageCubeMapTexture",["jquery","x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/CubeMapTexturing/X3DEnvironmentTextureNode","x_ite/Components/Networking/X3DUrlObject","x_ite/Bits/X3DConstants","standard/Math/Numbers/Vector2","standard/Math/Algorithm","x_ite/DEBUG"],function(e,t,i,r,n,a,s,o,u,h){"use strict";function d(e){n.call(this,e),a.call(this,e),this.addType(s.ImageCubeMapTexture),this.urlStack=new t.MFString}const g=new Uint8Array([255,255,255,255]),p=[new o(1,1),new o(3,1),new o(0,1),new o(2,1),new o(1,0),new o(1,2)];return d.prototype=Object.assign(Object.create(n.prototype),a.prototype,{constructor:d,[Symbol.for("X3DBaseNode.fieldDefinitions")]:new r([new i(s.inputOutput,"metadata",new t.SFNode),new i(s.inputOutput,"description",new t.SFString),new i(s.inputOutput,"load",new t.SFBool(!0)),new i(s.inputOutput,"url",new t.MFString),new i(s.inputOutput,"autoRefresh",new t.SFTime),new i(s.inputOutput,"autoRefreshTimeLimit",new t.SFTime(3600)),new i(s.initializeOnly,"textureProperties",new t.SFNode)]),getTypeName:function(){return"ImageCubeMapTexture"},getComponentName:function(){return"CubeMapTexturing"},getContainerField:function(){return"texture"},initialize:function(){n.prototype.initialize.call(this),a.prototype.initialize.call(this);const t=this.getBrowser().getContext();t.bindTexture(this.getTarget(),this.getTexture());for(let e=0;e<6;++e)t.texImage2D(this.getTargets()[e],0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,g);this.canvas=e("<canvas></canvas>"),this.image=e("<img></img>"),this.image.on("load",this.setImage.bind(this)),this.image.on("error",this.setError.bind(this)),this.image.bind("abort",this.setError.bind(this)),this.image[0].crossOrigin="Anonymous",this.requestImmediateLoad()},unloadNow:function(){this.clearTexture()},loadNow:function(){this.urlStack.setValue(this.urlBuffer_),this.loadNext()},loadNext:function(){if(0===this.urlStack.length)return this.clearTexture(),void this.setLoadState(s.FAILED_STATE);this.URL=new URL(this.urlStack.shift(),this.getExecutionContext().getWorldURL()),this.getBrowser().getBrowserOptions().getCache()&&this.getCache()||this.URL.searchParams.set("_",Date.now()),this.image.attr("src",this.URL.href)},setError:function(){"data:"!==this.URL.protocol&&console.warn("Error loading image:",this.URL.href),this.loadNext()},setImage:function(){h&&"data:"!==this.URL.protocol&&console.info("Done loading image cube map texture:",this.URL.href);try{const e=this.image[0],t=this.canvas[0],i=t.getContext("2d");let r=e.width,n=e.height,a=Math.floor(r/4),o=Math.floor(n/3);u.isPowerOfTwo(a)&&u.isPowerOfTwo(o)&&4*a===r&&3*o===n?(t.width=r,t.height=n,i.drawImage(e,0,0)):(a=u.nextPowerOfTwo(a),o=u.nextPowerOfTwo(o),r=4*a,n=3*o,t.width=r,t.height=n,i.drawImage(e,0,0,e.width,e.height,0,0,r,n));const h=this.getBrowser().getContext();let d=!0;h.bindTexture(this.getTarget(),this.getTexture()),h.pixelStorei(h.UNPACK_FLIP_Y_WEBGL,!1);for(let e=0;e<6;++e){const t=i.getImageData(p[e].x*a,p[e].y*o,a,o).data;if(d)for(let e=3;e<t.length;e+=4)if(255!==t[e]){d=!1;break}h.texImage2D(this.getTargets()[e],0,h.RGBA,a,o,!1,h.RGBA,h.UNSIGNED_BYTE,new Uint8Array(t))}this.updateTextureProperties(),this.setTransparent(!d),this.setLoadState(s.COMPLETE_STATE)}catch(e){console.log(e.message),this.setError()}}}),d}),e(t.getComponentUrl("cube-map-texturing"),["x_ite/Components","x_ite/Components/CubeMapTexturing/ComposedCubeMapTexture","x_ite/Components/CubeMapTexturing/GeneratedCubeMapTexture","x_ite/Components/CubeMapTexturing/ImageCubeMapTexture","x_ite/Components/CubeMapTexturing/X3DEnvironmentTextureNode"],function(e,t,i,r,n){"use strict";e.addComponent({name:"CubeMapTexturing",types:{ComposedCubeMapTexture:t,GeneratedCubeMapTexture:i,ImageCubeMapTexture:r},abstractTypes:{X3DEnvironmentTextureNode:n}})})}();
