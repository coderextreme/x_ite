!function(){const e=window[Symbol.for("X_ITE.X3D-6.1.0")],t=e.define,i=e.require;t("x_ite/Components/CubeMapTexturing/X3DEnvironmentTextureNode",["x_ite/Components/Texturing/X3DSingleTextureNode","x_ite/Base/X3DConstants"],(function(e,t){"use strict";function i(i){e.call(this,i),this.addType(t.X3DEnvironmentTextureNode);const r=this.getBrowser().getContext();this.target=r.TEXTURE_CUBE_MAP,this.targets=[r.TEXTURE_CUBE_MAP_POSITIVE_Z,r.TEXTURE_CUBE_MAP_NEGATIVE_Z,r.TEXTURE_CUBE_MAP_NEGATIVE_X,r.TEXTURE_CUBE_MAP_POSITIVE_X,r.TEXTURE_CUBE_MAP_POSITIVE_Y,r.TEXTURE_CUBE_MAP_NEGATIVE_Y]}return i.prototype=Object.assign(Object.create(e.prototype),{constructor:i,getTarget:function(){return this.target},getTextureType:function(){return 4},getTextureTypeString:function(){return"CUBE"},getTargets:function(){return this.targets},clearTexture:function(){const e=new Uint8Array([255,255,255,255]);return function(){const t=this.getBrowser().getContext();t.bindTexture(this.getTarget(),this.getTexture());for(const i of this.getTargets())t.texImage2D(i,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,e)}}(),updateTextureParameters:function(){e.prototype.updateTextureParameters.call(this,this.target,this._textureProperties.getValue(),this.texturePropertiesNode,128,128,!1,!1,!1)},setShaderUniforms:function(e,t,i,r=t.x3d_Texture[0]){const n=this.getBrowser().getTextureCubeUnit();e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_CUBE_MAP,this.getTexture()),e.uniform1i(r.textureCube,n)}}),i})),t("x_ite/Components/CubeMapTexturing/ComposedCubeMapTexture",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/CubeMapTexturing/X3DEnvironmentTextureNode","x_ite/Base/X3DCast","x_ite/Base/X3DConstants","standard/Utility/BitSet"],(function(e,t,i,r,n,s,a){"use strict";function o(e){r.call(this,e),this.addType(s.ComposedCubeMapTexture),this.addAlias("front",this._frontTexture),this.addAlias("back",this._backTexture),this.addAlias("left",this._leftTexture),this.addAlias("right",this._rightTexture),this.addAlias("bottom",this._bottomTexture),this.addAlias("top",this._topTexture),this.textures=[null,null,null,null,null,null],this.symbols=[Symbol(),Symbol(),Symbol(),Symbol(),Symbol(),Symbol()],this.loadStateBits=new a}return o.prototype=Object.assign(Object.create(r.prototype),{constructor:o,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new i([new t(s.inputOutput,"metadata",new e.SFNode),new t(s.inputOutput,"description",new e.SFString),new t(s.inputOutput,"frontTexture",new e.SFNode),new t(s.inputOutput,"backTexture",new e.SFNode),new t(s.inputOutput,"leftTexture",new e.SFNode),new t(s.inputOutput,"rightTexture",new e.SFNode),new t(s.inputOutput,"bottomTexture",new e.SFNode),new t(s.inputOutput,"topTexture",new e.SFNode),new t(s.initializeOnly,"textureProperties",new e.SFNode)]),getTypeName:function(){return"ComposedCubeMapTexture"},getComponentName:function(){return"CubeMapTexturing"},getContainerField:function(){return"texture"},initialize:function(){r.prototype.initialize.call(this),this.clearTexture(),this._frontTexture.addInterest("set_texture__",this,0),this._backTexture.addInterest("set_texture__",this,1),this._leftTexture.addInterest("set_texture__",this,2),this._rightTexture.addInterest("set_texture__",this,3),this._topTexture.addInterest("set_texture__",this,5),this._bottomTexture.addInterest("set_texture__",this,4),this.set_texture__(this._frontTexture,0),this.set_texture__(this._backTexture,1),this.set_texture__(this._leftTexture,2),this.set_texture__(this._rightTexture,3),this.set_texture__(this._topTexture,4),this.set_texture__(this._bottomTexture,5)},set_texture__:function(e,t){let i=this.textures[t];i&&(i.removeInterest("set_loadState__",this),i._loadState.removeFieldCallback(this.symbols[t])),i=this.textures[t]=n(s.X3DTexture2DNode,e),i&&(i.addInterest("set_loadState__",this,i,t),i._loadState.addFieldCallback(this.symbols[t],this.set_loadState__.bind(this,i,t))),this.set_loadState__(i,t)},set_loadState__:function(e,t){e?this.setLoadStateBit(t,e.checkLoadState(),e.getData()):this.setLoadStateBit(t,s.NOT_STARTED,null),this.updateTextures()},setLoadStateBit:function(e,t,i){this.loadStateBits.set(e,t===s.COMPLETE_STATE||i)},isComplete:function(){if(63!=+this.loadStateBits)return!1;const e=this.textures,t=e[0].getWidth();for(const i of e){if(i.getWidth()!==t)return!1;if(i.getHeight()!==t)return!1}return!0},updateTextures:function(){const e=this.getBrowser().getContext();if(e.bindTexture(this.getTarget(),this.getTexture()),this.isComplete()){const t=this.textures;for(let i=0;i<6;++i){const r=t[i],n=r.getWidth(),s=r.getHeight(),a=r.getData();e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!r.getFlipY()),a instanceof Uint8Array?e.texImage2D(this.getTargets()[i],0,e.RGBA,n,s,!1,e.RGBA,e.UNSIGNED_BYTE,a):e.texImage2D(this.getTargets()[i],0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,a)}e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!1),this.updateTextureParameters()}else this.clearTexture();this.set_transparent__()},set_transparent__:function(){const e=!1;if(this.isComplete())for(const t of this.textures)if(t._transparent.getValue()){e=!0;break}this.setTransparent(e)}}),o})),t("x_ite/Rendering/DependentRenderer",["x_ite/Base/X3DBaseNode","x_ite/Rendering/X3DRenderObject","x_ite/Rendering/TraverseType"],(function(e,t,i){"use strict";function r(i){e.call(this,i),t.call(this,i),this.renderObject=null}r.prototype=Object.assign(Object.create(e.prototype),t.prototype,{constructor:r,initialize:function(){e.prototype.initialize.call(this),t.prototype.initialize.call(this)},isIndependent:function(){return!1},setRenderer:function(e){this.renderObject=e},getLayer:function(){return this.renderObject.getLayer()},getBackground:function(){return this.renderObject.getBackground()},getFog:function(){return this.renderObject.getFog()},getNavigationInfo:function(){return this.renderObject.getNavigationInfo()},getViewpoint:function(){return this.renderObject.getViewpoint()},getLightContainer:function(){return this.renderObject.getLights()[this.lightIndex++]},render:function(e,r,n){switch(e){case i.COLLISION:case i.SHADOW:t.prototype.render.call(this,e,r,n);break;case i.DISPLAY:this.lightIndex=0,t.prototype.render.call(this,e,r,n);for(const e of this.renderObject.getLights())e.getModelViewMatrix().pop()}}});for(const e of Reflect.ownKeys(r.prototype))Object.defineProperty(r.prototype,e,{enumerable:!1});return r})),t("x_ite/Components/CubeMapTexturing/GeneratedCubeMapTexture",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/CubeMapTexturing/X3DEnvironmentTextureNode","x_ite/Rendering/DependentRenderer","x_ite/Rendering/TextureBuffer","x_ite/Base/X3DConstants","x_ite/Rendering/TraverseType","standard/Math/Geometry/Camera","standard/Math/Geometry/ViewVolume","standard/Math/Numbers/Rotation4","standard/Math/Numbers/Vector3","standard/Math/Numbers/Vector4","standard/Math/Numbers/Matrix4","standard/Math/Algorithm"],(function(e,t,i,r,n,s,a,o,u,h,d,g,p,x,l){"use strict";function c(e){r.call(this,e),this.addType(a.GeneratedCubeMapTexture),this.dependentRenderer=new n(e),this.projectionMatrix=new x,this.modelMatrix=new x,this.viewVolume=new h}return c.prototype=Object.assign(Object.create(r.prototype),{constructor:c,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new i([new t(a.inputOutput,"metadata",new e.SFNode),new t(a.inputOutput,"description",new e.SFString),new t(a.inputOutput,"update",new e.SFString("NONE")),new t(a.initializeOnly,"size",new e.SFInt32(128)),new t(a.initializeOnly,"textureProperties",new e.SFNode)]),getTypeName:function(){return"GeneratedCubeMapTexture"},getComponentName:function(){return"CubeMapTexturing"},getContainerField:function(){return"texture"},initialize:function(){r.prototype.initialize.call(this),this._size.addInterest("set_size__",this),this.dependentRenderer.setup(),this.set_size__()},set_size__:function(){const e=this.getBrowser().getContext(),t=e.getVersion()>=2?this._size.getValue():l.nextPowerOfTwo(this._size.getValue());if(t>0){const i=new Uint8Array(t*t*4);e.bindTexture(this.getTarget(),this.getTexture());for(const r of this.getTargets())e.texImage2D(r,0,e.RGBA,t,t,0,e.RGBA,e.UNSIGNED_BYTE,i);this.viewport=new p(0,0,t,t),this.frameBuffer=new s(this.getBrowser(),t,t)}else this.frameBuffer=null},traverse:function(e,t){"NONE"!==this._update.getValue()&&t.isIndependent()&&this.frameBuffer&&(t.getGeneratedCubeMapTextures().push(this),this.modelMatrix.assign(t.getModelViewMatrix().get()).multRight(t.getCameraSpaceMatrix().get()))},renderTexture:function(){const e=[new d(g.zAxis,new g(0,0,-1)),new d(g.zAxis,new g(0,0,1)),new d(g.zAxis,new g(1,0,0)),new d(g.zAxis,new g(-1,0,0)),new d(g.zAxis,new g(0,-1,0)),new d(g.zAxis,new g(0,1,0))],t=[new g(-1,-1,1),new g(-1,-1,1),new g(-1,-1,1),new g(-1,-1,1),new g(1,1,1),new g(1,1,1)],i=new x;return function(r){this.dependentRenderer.setRenderer(r);const n=this.dependentRenderer,s=this.getBrowser(),a=r.getLayer(),h=s.getContext(),d=n.getBackground(),g=n.getNavigationInfo(),p=n.getViewpoint(),x=s.getHeadlight(),c=g._headlight.getValue(),_=g.getNearValue(),T=g.getFarValue(p),f=u.perspective(l.radians(90),_,T,1,1,this.projectionMatrix);this.setTransparent(d.getTransparent()),this.frameBuffer.bind(),n.getViewVolumes().push(this.viewVolume.set(f,this.viewport,this.viewport)),n.getProjectionMatrix().pushMatrix(f),h.bindTexture(this.getTarget(),this.getTexture());for(let r=0;r<6;++r){h.clear(h.COLOR_BUFFER_BIT),n.getCameraSpaceMatrix().pushMatrix(this.modelMatrix),n.getCameraSpaceMatrix().rotate(e[r]),n.getCameraSpaceMatrix().scale(t[r]),n.getViewMatrix().pushMatrix(i.assign(n.getCameraSpaceMatrix().get()).inverse()),n.getModelViewMatrix().pushMatrix(i),c&&(x.getModelViewMatrix().pushMatrix(i),x.getModelViewMatrix().multLeft(p.getCameraSpaceMatrix())),a.traverse(o.DISPLAY,n),c&&x.getModelViewMatrix().pop(),n.getModelViewMatrix().pop(),n.getCameraSpaceMatrix().pop(),n.getViewMatrix().pop();const s=this.frameBuffer.readPixels(),u=this.frameBuffer.getWidth(),d=this.frameBuffer.getHeight();h.bindTexture(this.getTarget(),this.getTexture()),h.texImage2D(this.getTargets()[r],0,h.RGBA,u,d,!1,h.RGBA,h.UNSIGNED_BYTE,s)}this.updateTextureParameters(),n.getProjectionMatrix().pop(),n.getViewVolumes().pop(),this.frameBuffer.unbind(),"NEXT_FRAME_ONLY"===this._update.getValue()&&(this._update="NONE")}}(),setShaderUniforms:function(){const e=new Float32Array(16);return function(t,i,n,s){r.prototype.setShaderUniforms.call(this,t,i,n,s),n===this.dependentRenderer&&t.uniformMatrix4fv(i.x3d_ModelViewMatrix,!1,e)}}()}),c})),t("x_ite/Components/CubeMapTexturing/ImageCubeMapTexture",["jquery","x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/CubeMapTexturing/X3DEnvironmentTextureNode","x_ite/Components/Networking/X3DUrlObject","x_ite/Base/X3DConstants","standard/Math/Numbers/Vector2","standard/Math/Algorithm","x_ite/DEBUG"],(function(e,t,i,r,n,s,a,o,u,h){"use strict";const d=new Uint8Array([255,255,255,255]),g=[new o(1,1),new o(3,1),new o(0,1),new o(2,1),new o(1,0),new o(1,2)];function p(i){n.call(this,i),s.call(this,i),this.addType(a.ImageCubeMapTexture),this.image=e("<img></img>"),this.canvas=e("<canvas></canvas>"),this.urlStack=new t.MFString}return p.prototype=Object.assign(Object.create(n.prototype),s.prototype,{constructor:p,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new r([new i(a.inputOutput,"metadata",new t.SFNode),new i(a.inputOutput,"description",new t.SFString),new i(a.inputOutput,"load",new t.SFBool(!0)),new i(a.inputOutput,"url",new t.MFString),new i(a.inputOutput,"autoRefresh",new t.SFTime),new i(a.inputOutput,"autoRefreshTimeLimit",new t.SFTime(3600)),new i(a.initializeOnly,"textureProperties",new t.SFNode)]),getTypeName:function(){return"ImageCubeMapTexture"},getComponentName:function(){return"CubeMapTexturing"},getContainerField:function(){return"texture"},initialize:function(){n.prototype.initialize.call(this),s.prototype.initialize.call(this);const e=this.getBrowser().getContext();e.bindTexture(this.getTarget(),this.getTexture());for(let t=0;t<6;++t)e.texImage2D(this.getTargets()[t],0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,d);this.image.on("load",this.setImage.bind(this)),this.image.on("abort error",this.setError.bind(this)),this.image[0].crossOrigin="Anonymous",this.requestImmediateLoad()},unloadNow:function(){this.clearTexture()},loadNow:function(){this.urlStack.setValue(this._url),this.loadNext()},loadNext:function(){if(0===this.urlStack.length)return this.clearTexture(),void this.setLoadState(a.FAILED_STATE);this.URL=new URL(this.urlStack.shift(),this.getExecutionContext().getWorldURL()),"data:"!==this.URL.protocol&&(this.getBrowser().getBrowserOptions().getCache()&&this.getCache()||this.URL.searchParams.set("_",Date.now())),this.image.attr("src",this.URL.href)},setError:function(){"data:"!==this.URL.protocol&&console.warn("Error loading image:",decodeURI(this.URL.href)),this.loadNext()},setImage:function(){h&&"data:"!==this.URL.protocol&&console.info("Done loading image cube map texture:",decodeURI(this.URL.href));try{const e=this.image[0],t=this.canvas[0],i=t.getContext("2d",{willReadFrequently:!0});let r=e.width,n=e.height,s=Math.floor(r/4),o=Math.floor(n/3);u.isPowerOfTwo(s)&&u.isPowerOfTwo(o)&&4*s===r&&3*o===n?(t.width=r,t.height=n,i.drawImage(e,0,0)):(s=u.nextPowerOfTwo(s),o=u.nextPowerOfTwo(o),r=4*s,n=3*o,t.width=r,t.height=n,i.drawImage(e,0,0,e.width,e.height,0,0,r,n));const h=this.getBrowser().getContext();let d=!0;h.bindTexture(this.getTarget(),this.getTexture());for(let e=0;e<6;++e){const t=i.getImageData(g[e].x*s,g[e].y*o,s,o).data;if(d)for(let e=3;e<t.length;e+=4)if(255!==t[e]){d=!1;break}h.texImage2D(this.getTargets()[e],0,h.RGBA,s,o,!1,h.RGBA,h.UNSIGNED_BYTE,new Uint8Array(t.buffer))}this.updateTextureParameters(),this.setTransparent(!d),this.setLoadState(a.COMPLETE_STATE)}catch(e){console.log(e.message),this.setError()}}}),p})),t(i.getComponentUrl("cube-map-texturing"),["x_ite/Components","x_ite/Components/CubeMapTexturing/ComposedCubeMapTexture","x_ite/Components/CubeMapTexturing/GeneratedCubeMapTexture","x_ite/Components/CubeMapTexturing/ImageCubeMapTexture","x_ite/Components/CubeMapTexturing/X3DEnvironmentTextureNode"],(function(e,t,i,r,n){"use strict";e.addComponent({name:"CubeMapTexturing",types:{ComposedCubeMapTexture:t,GeneratedCubeMapTexture:i,ImageCubeMapTexture:r},abstractTypes:{X3DEnvironmentTextureNode:n}})}))}();
