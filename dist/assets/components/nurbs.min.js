!function(){const t=window[Symbol.for("X_ITE.X3D-6.1.0")],e=t.define,n=t.require;e("x_ite/Components/NURBS/Contour2D",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/Core/X3DNode","x_ite/Base/X3DConstants","x_ite/Base/X3DCast"],(function(t,e,n,i,o,s){"use strict";function r(t){i.call(this,t),this.addType(o.Contour2D),this.childNodes=[]}function u(t,e,n,i,o,s){const r=new Set;for(let t=o;t<s;++t)r.add(i[t]);return t.remove(e,n,(function(t){return r.has(t)}))}return r.prototype=Object.assign(Object.create(i.prototype),{constructor:r,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new n([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.inputOnly,"addChildren",new t.MFNode),new e(o.inputOnly,"removeChildren",new t.MFNode),new e(o.inputOutput,"children",new t.MFNode)]),getTypeName:function(){return"Contour2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"trimmingContour"},initialize:function(){i.prototype.initialize.call(this),this._addChildren.addInterest("set_addChildren__",this),this._removeChildren.addInterest("set_removeChildren__",this),this._children.addInterest("set_children__",this),this.set_children__()},set_addChildren__:function(){this._addChildren.setTainted(!0),this._addChildren.erase(u(this._addChildren,0,this._addChildren.length,this._children,0,this._children.length),this._addChildren.length);for(const t of this._addChildren)this._children.push(t);this._addChildren.length=0,this._addChildren.setTainted(!1)},set_removeChildren__:function(){this._removeChildren.setTainted(!0),this._children.erase(u(this._children,0,this._children.length,this._removeChildren,0,this._removeChildren.length),this._children.length),this._removeChildren.length=0,this._removeChildren.setTainted(!1)},set_children__:function(){const t=this.childNodes;t.length=0;for(const e of this._children){const n=s(o.NurbsCurve2D,e);if(n)t.push(n);else{const n=s(o.ContourPolyline2D,e);if(n){t.push(n);continue}}}},addTrimmingContour:function(t){for(const e of this.childNodes)t.push(e.tessellate(2))}}),r})),e("x_ite/Components/NURBS/X3DNurbsControlCurveNode",["x_ite/Components/Core/X3DNode","x_ite/Base/X3DConstants"],(function(t,e){"use strict";function n(n){t.call(this,n),this.addType(e.X3DNurbsControlCurveNode)}return n.prototype=Object.assign(Object.create(t.prototype),{constructor:n}),n})),e("x_ite/Components/NURBS/ContourPolyline2D",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsControlCurveNode","x_ite/Base/X3DConstants","standard/Math/Numbers/Vector3"],(function(t,e,n,i,o,s){"use strict";function r(t){i.call(this,t),this.addType(o.ContourPolyline2D),this.controlPoints=[]}return r.prototype=Object.assign(Object.create(i.prototype),{constructor:r,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new n([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.inputOutput,"controlPoint",new t.MFVec2d)]),getTypeName:function(){return"ContourPolyline2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},tessellate:function(t){switch(t){case 0:{const t=this._controlPoint.getValue(),e=this.controlPoints,n=this._controlPoint.length;for(let i=0;i<n;++i){const n=2*i;e[n+0]=t[n+0],e[n+1]=t[n+1]}return e.length=2*n,e}case 1:{const t=this._controlPoint.getValue(),e=this.controlPoints,n=this._controlPoint.length;for(let i=0;i<n;++i){const n=2*i,o=3*i;e[o+0]=t[n+0],e[o+1]=0,e[o+2]=t[n+1]}return e.length=3*n,e}case 3:{const t=this._controlPoint.getValue(),e=this.controlPoints,n=this._controlPoint.length;for(let i=0;i<n;++i){const n=2*i;e[i]=new s(t[n+0],t[n+1],0)}return e.length=n,e}}}}),r})),e("x_ite/Components/NURBS/CoordinateDouble",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/Rendering/X3DCoordinateNode","x_ite/Base/X3DConstants"],(function(t,e,n,i,o){"use strict";function s(t){i.call(this,t),this.addType(o.CoordinateDouble)}return s.prototype=Object.assign(Object.create(i.prototype),{constructor:s,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new n([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.inputOutput,"point",new t.MFVec3d)]),getTypeName:function(){return"CoordinateDouble"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"coord"}}),s})),e("x_ite/Browser/NURBS/NURBS",["standard/Math/Numbers/Vector2","standard/Math/Numbers/Vector3","standard/Math/Numbers/Vector4"],(function(t,e,n){"use strict";return{getTessellation:function(t,e){return t>0?t+1:t<0?-t*e+1:2*e+1},getClosed2D:function(t,e,n,i){const o=i.length;return(!(n.length===o)||n[0]===n[o-1])&&(!!i[0].equals(i[o-1])&&!!this.isPeriodic(t,o,e))},getClosed:function(){const t=new e(0,0,0),n=new e(0,0,0);return function(e,i,o,s){const r=s.getSize();return(!(o.length===r)||o[0]===o[r-1])&&(!!s.get1Point(0,t).equals(s.get1Point(r-1,n))&&!!this.isPeriodic(e,r,i))}}(),getUClosed:function(){const t=new e(0,0,0),n=new e(0,0,0);return function(e,i,o,s,r,u){const a=r.length===u.getSize();for(let e=0,s=o;e<s;++e){const o=e*i,s=e*i+i-1;if(a&&r[o]!==r[s])return!1;if(!u.get1Point(o,t).equals(u.get1Point(s,n)))return!1}return!!this.isPeriodic(e,i,s)}}(),getVClosed:function(){const t=new e(0,0,0),n=new e(0,0,0);return function(e,i,o,s,r,u){const a=r.length===u.getSize();for(let e=0,s=i;e<s;++e){const s=e,l=(o-1)*i+e;if(a&&r[s]!==r[l])return!1;if(!u.get1Point(s,t).equals(u.get1Point(l,n)))return!1}return!!this.isPeriodic(e,o,s)}}(),isPeriodic:function(t,e,n){if(n.length===e+t){{let e=1;for(let i=1,o=t;i<o;++i)e+=n[i]===n[0];if(e===t)return!1}{let e=1;for(let i=n.length-t,o=n.length-1;i<o;++i)e+=n[i]===n[o];if(e===t)return!1}}return!0},getKnots:function(t,e,n,i,o){const s=t||[];for(let t=0,e=o.length;t<e;++t)s[t]=o[t];s.length=o.length;let r=!0;if(s.length===i+n){r=!1;let t=0;for(let e=1,i=s.length;e<i;++e)s[e]==s[e-1]?++t:t=0,t>n-1&&(r=!0),s[e-1]>s[e]&&(r=!0)}if(r)for(let t=0,e=i+n;t<e;++t)s[t]=t/(e-1);if(e)for(let t=1,e=n-1;t<e;++t)s.push(s.at(-1)+(s[t]-s[t-1]));return s},getWeights:function(t,e,n){if(n.length!==e)return;const i=t||[];for(let t=0;t<e;++t)i[t]=n[t];return i.length=e,i},getUVWeights:function(t,e,n,i){const o=e*n;if(i.length!==o)return;const s=t||[];for(let t=0,o=0;t<e;++t)for(let t=0;t<n;++t,++o)s[o]=i[o];return s.length=o,s},getControlPoints2D:function(n,i,o,s,r){const u=n||[],a=r.getValue(),l=r.length,h=Boolean(s),d=h?e:t;u.haveWeights!==h&&(u.haveWeights=h,u.length=0);for(let t=0;t<l;++t){const e=2*t,n=u[t]||new d(0,0,0);u[t]=n.set(a[e+0],a[e+1],h?s[t]:0)}if(u.length=l,i)for(let t=1,e=o-1;t<e;++t)u.push(u[t]);return u},getControlPoints:function(t,i,o,s,r){const u=t||[],a=r.getSize(),l=Boolean(s),h=l?n:e;u.haveWeights!==l&&(u.haveWeights=l,u.length=0);for(let t=0;t<a;++t){const e=u[t]=r.get1Point(t,u[t]||new h(0,0,0,0));l&&(e.w=s[t])}if(u.length=a,i)for(let t=1,e=o-1;t<e;++t)u.push(u[t]);return u},getUVControlPoints:function(t,i,o,s,r,u,a,l,h){const d=t||[],c=Boolean(l),g=c?n:e;d.haveWeights!==c&&(d.haveWeights=c,d.length=0);for(let t=0;t<u;++t){let e=d[t];e||(e=d[t]=[]);for(let n=0;n<a;++n){const i=n*u+t;e[n]=h.get1Point(i,e[n]||new g(0,0,0,0)),c&&(e[n].w=l[i])}if(e.length=a,o)for(let t=1,n=r-1;t<n;++t)e.push(e[t])}if(d.length=u,i)for(let t=1,e=s-1;t<e;++t)d.push(d[t]);return d},getTexControlPoints:function(t,e,i,o,s,r,u,a){const l=t||[];for(let t=0;t<r;++t){let e=l[t];e||(e=l[t]=[]);for(let i=0;i<u;++i){const o=i*r+t;e[i]=a.get1Point(o,e[i]||new n(0,0,0,0))}if(e.length=u,i)for(let t=1,n=s-1;t<n;++t)e.push(e[t])}if(l.length=r,e)for(let t=1,e=o-1;t<e;++t)l.push(l[t]);return l}}})),e("x_ite/Components/NURBS/X3DParametricGeometryNode",["x_ite/Components/Rendering/X3DGeometryNode","x_ite/Base/X3DConstants","x_ite/Browser/NURBS/NURBS"],(function(t,e,n){"use strict";function i(n){t.call(this,n),this.addType(e.X3DParametricGeometryNode)}return i.prototype=Object.assign(Object.create(t.prototype),{constructor:i,getKnots:function(t,e,i,o,s){return n.getKnots(t,e,i,o,s)}}),i})),e("nurbs/src/utils/is-ndarray",[],(function(){"use strict";return function(t){return!!t&&(!!t.dtype&&new RegExp("function View[0-9]+d(:?"+t.dtype+")+").test(String(t.constructor)))}})),e("nurbs/src/utils/is-ndarray-like",[],(function(){"use strict";return function(t){return!!t&&(void 0!==t.data&&Array.isArray(t.shape)&&void 0!==t.offset&&void 0!==t.stride)}})),e("nurbs/src/utils/is-array-like",[],(function(){"use strict";return function(t){return Array.isArray(t)||ArrayBuffer.isView(t)||void 0!==t.length}})),e("nurbs/src/utils/infer-type",["nurbs/src/utils/is-ndarray","nurbs/src/utils/is-ndarray-like","nurbs/src/utils/is-array-like"],(function(t,e,n){"use strict";function i(o){if(o){if(t(o)||e(o))return"generic"===o.dtype?i.GENERIC_NDARRAY:i.NDARRAY;if(n(o)){for(var s=o;n(s[0]);s=s[0]);return"x"in s?i.ARRAY_OF_OBJECTS:i.ARRAY_OF_ARRAYS}throw new Error("Unhandled data type. Got type: "+typeof o)}}return i.ARRAY_OF_OBJECTS="Obj",i.ARRAY_OF_ARRAYS="Arr",i.NDARRAY="Nd",i.GENERIC_NDARRAY="GenNd",i.PACKED="PackArr",i})),e("nurbs/src/utils/cache-key",["nurbs/src/utils/is-array-like"],(function(t){"use strict";return function(e,n,i,o,s,r){var u,a,l=[],h=!1;for(u=0;u<e.splineDimension;u++){var d=t(e.knots)&&t(e.knots[u]);d&&(h=!0),l.push("Deg"+e.degree[u]+(d?"":"Uniform")+((a=e.boundary[u])[0].toUpperCase()+a.slice(1)))}var c=[[h?"NU":"",e.weights?"RBS":"BS"].join("")+e.dimension+"D",l.join("_")];return o&&c.push(o+"Pts"),s&&c.push(s+"Wts"),r&&c.push(r+"Kts"),n&&c.push("debug"),i&&c.push("chk"),c.join("_")}})),e("nurbs/src/utils/variable",[],(function(){"use strict";var t=function t(e,n){return function(n,i){void 0===n||Array.isArray(n)||(n=[n]);for(var o=[],s=0;s<n.length;s++)o.push(t.sum(n[s]));if(i)for(n=0;n<o.length;n++)void 0!==i[n]&&(o[n]="("+o[n]+" + "+i[n]+") % "+i[n]);return e+o.join("_")}};return t.sum=function(t){return 0===(t=(t=Array.isArray(t)?t:[t]).filter((function(t){return void 0!==t&&0!==t}))).length&&t.push(0),t.join(" + ")},t})),e("nurbs/src/utils/create-accessors",["nurbs/src/utils/infer-type","nurbs/src/utils/variable"],(function(t,e){"use strict";var n=[".x",".y",".z",".w"];function i(t){return function(n,i){void 0===n||Array.isArray(n)||(n=[n]);for(var o=[],s=0;s<n.length;s++)o.push(e.sum(n[s]));if(i)for(n=0;n<o.length;n++)void 0!==i[n]&&(o[n]="("+o[n]+" + "+i[n]+") % "+i[n]);return t(o)}}function o(e,o){if(o)switch(t(o)){case t.ARRAY_OF_OBJECTS:return i((function(t){var i=t.pop();return e+"["+t.join("][")+"]"+n[i]}));case t.ARRAY_OF_ARRAYS:return i((function(t){return e+"["+t.join("][")+"]"}));case t.GENERIC_NDARRAY:return i((function(t){return e+".get("+t.join(",")+")"}));case t.NDARRAY:return i((function(t){for(var n=[e+"Offset"],i=0;i<t.length;i++)n.push(e+"Stride"+i+" * ("+t[i]+")");return e+"["+n.join(" + ")+"]"}));case t.PACKED:default:return}}return function(t){var e,n={};return(e=o("x",t.points))&&(n.point=e),(e=o("w",t.weights))&&(n.weight=e),(e=o("k",t.knots))&&(n.knot=e),n}})),e("nurbs/src/numerical-derivative",[],(function(){"use strict";var t=[],e=[];return function(n,i,o){if(1!==i)throw new Error("Numerical derivative not implemented for order n = "+i+".");var s,r=void 0===arguments[this.splineDimension+3]?1e-4:arguments[this.splineDimension+3];for(t.length=this.splineDimension,s=0;s<this.splineDimension;s++)t[s+1]=arguments[s+3];var u,a,l,h=this.domain,d=h[o][0],c=h[o][1],g=t[o+1],f=(c-d)*r;for("closed"===this.boundary[o]?(u=d+(g-d-f+(l=c-d))%l,a=d+(g-d+f+l)%l,f*=2):(u=Math.min(c,Math.max(d,g-f)),f=(a=Math.min(c,Math.max(d,g+f)))-u),t[o+1]=u,t[0]=e,this.evaluate.apply(null,t),t[o+1]=a,t[0]=n,this.evaluate.apply(null,t),s=0;s<this.dimension;s++)n[s]=(n[s]-e[s])/f;return n}})),e("nurbs/src/utils/ndloop",[],(function(){"use strict";return function(t,e){for(var n=1,i=0,o=[];i<t.length;i++)n*=Array.isArray(t[i])?t[i][1]-t[i][0]:t[i],o[i]=Array.isArray(t[i])?t[i][0]:0;for(var s=0;s<n;s++)for(e(o.slice()),i=t.length-1;i>=0;i--){if(o[i]!==(Array.isArray(t[i])?t[i][1]:t[i])-1){o[i]++;break}o[i]=Array.isArray(t[i])?t[i][0]:0}}})),e("nurbs/src/utils/accessor-preamble",["nurbs/src/utils/infer-type"],(function(t){"use strict";return function(e,n,i,o){var s=[];switch(t(o)){case t.NDARRAY:s.push("  var "+n+" = "+i+".data;"),s.push("  var "+n+"Offset = "+i+".offset;");for(var r=0;r<o.dimension;r++)s.push("  var "+n+"Stride"+r+" = "+i+".stride["+r+"];");break;case t.ARRAY_OF_OBJECTS:case t.ARRAY_OF_ARRAYS:s.push("  var "+n+" = "+i+";")}return s.join("\n")}})),e("nurbs/src/utils/size-getter",["nurbs/src/utils/is-ndarray-like"],(function(t){"use strict";return function(e,n,i){if(e){if(t(e))return n+".shape["+i+"]";for(var o=n,s=0;s<i;s++)o+="[0]";return o+".length"}return"this.size["+i+"]"}})),e("nurbs/src/evaluate",["nurbs/src/utils/ndloop","nurbs/src/utils/variable","nurbs/src/utils/accessor-preamble","nurbs/src/utils/infer-type","nurbs/src/utils/is-array-like","nurbs/src/utils/size-getter"],(function(t,e,n,i,o,s){"use strict";var r={},u={};return function(a,l,h,d,c,g,f){var _,p,m,y,C,w,N=l.splineDimension,b=l.points,v=l.degree,S=l.weights,D=void 0!==S,x=l.knots,O=l.dimension,F=l.boundary;if(null!=f){Array.isArray(f)||(f=[f]);var B=0;for(_=0;_<N;_++)void 0===f[_]&&(f[_]=0),B+=f[_];if(D&&B>1)throw new Error("Analytical derivative not implemented for rational b-splines with order n = "+B+".")}g&&(a="Basis"+a),f&&(a="Der"+f.join("_")+"_"+a);var P=r[a];if(d)var R="function"==typeof d?d:console.log;if(P)return d&&R(u[a]),P.bind(l);var T=[],V="evaluate"+a,I=h.point;g&&(I=function(t,e){for(var n=[],i=0;i<t.length;i++){for(var o=t[i],s=[],r=0;r<o.length;r++)0!==o[r]&&s.push(o[r]);o=s.join(" + "),e[i]&&(o="("+o+" + "+e[i]+") % "+e[i]),n.push(o+" === "+U(i))}return"(("+n.join(" && ")+") ? 1 : 0)"});var z=h.weight,A=h.knot,k=e("k"),X=e("x"),j=e("w"),U=e("i"),M=e("t"),E=d?"domain":"d",K=e(d?"size":"s"),G=e(d?"knotIndex":"j"),W=!0;for(C=0;C<N;C++)o(x)&&o(x[C])&&(W=!1);function q(t){T.push("  "+(t||""))}function Y(t){d&&q(t)}if(g)var J=[];var L=[];for(_=0;_<N;_++)g&&J.push(U([_])),L.push(M([_]));for(T.push("function "+V+" ("+(g?"":"out, ")+L.join(", ")+(g?", "+J.join(", "):"")+") {"),q("var h, m, a, b;"),c&&(q("var "+E+" = this.domain;"),q("for (var i = 0; i < this.splineDimension; i++) {"),q("  a = arguments[i + 1];"),q("  if (a < "+E+"[i][0] || a > "+E+"[i][1] || a === undefined || isNaN(a)) {"),q("    throw new Error('Invalid Spline parameter in dimension '+i+'. Valid domain is ['+"+E+"[i][0]+', '+"+E+"[i][1]+']. but got t'+i+' = '+arguments[i + 1]+'.');"),q("  }"),q("}")),C=0;C<N;C++)q("var "+K(C)+" = "+s(b,"this.points",C)+";");function Z(t,e,n){return"("+t+") ? ("+e+") : ("+n+")"}T.push(n(l,"x","this.points",b)),D&&T.push(n(l,"w","this.weights",S)),W||T.push(n(l,"k","this.knots",x));var H=[];for(C=0;C<N;C++)switch(i(x)){case i.NDARRAY:H[C]=!0;break;case i.ARRAY_OF_ARRAYS:H[C]=o(x[C])}for(C=0;C<N;C++)if(H[C])for(Y("\n  // Bisect to locate the knot interval in dimension "+C+"\n"),q("var "+G(C)+" = 0;"),q("h = "+K(C)+";"),q("while(h > "+G(C)+" + 1) {"),q("  m = 0.5 * (h + "+G(C)+") | 0;"),q("  if ("+A([C,"m"])+" > "+M(C)+") h = m;"),q("  else "+G(C)+" = m;"),q("}"),Y("\n  // Fetch knots for dimension "+C+"\n"),_=1-v[C];_<=v[C];_++)"closed"===F[C]?q(_<0?"var "+k([C,_+v[C]-1])+" = "+Z(G(C)+" < "+-_,A([C,0])+" + "+A([C,[K(C),G(C),_]])+" - "+A([C,[K(C)]]),A([C,[G(C),_]]))+";":_>0?"var "+k([C,_+v[C]-1])+" = "+Z(G(C)+" + "+_+" > "+K(C),A([C,K(C)])+" + "+A([C,_+" + "+G(C)+" - "+K(C)])+" - "+A([C,0]),A([C,[G(C),_]]))+";":"var "+k([C,_+v[C]-1])+" = "+A([C,[G(C),_]])+";"):q("var "+k([C,_+v[C]-1])+" = "+A([C,[G(C),_]])+";");else{for(Y("\n  // Directly compute knot interval for dimension "+C+"\n"),"closed"===F[C]?q(G(C)+" = ("+M(C)+" | 0) % "+K(C)+";"):(q(G(C)+" = ("+M(C)+" | 0);"),q("if ("+G(C)+" < "+v[C]+") "+G(C)+" = "+v[C]+";"),q("if ("+G(C)+" > "+K(C)+" - 1) "+G(C)+" = "+K(C)+" - 1;")),Y("\n  // Compute and clamp knots for dimension "+C+"\n"),_=1-v[C];_<=v[C];_++)q("var "+(w=k([C,_+v[C]-1]))+" = "+G(C)+" + "+_+";");if("clamped"===F[C])for(_=1-v[C];_<=v[C];_++)w=k([C,_+v[C]-1]),_<0&&q("if ("+w+" < "+v[C]+") "+w+" = "+v[C]+";"),_>0&&q("if ("+w+" > "+K(C)+") "+w+" = "+K(C)+";");"closed"===F[C]&&(Y("\n  // Wrap the B-Spline parameter for closed boundary"),q(M(C)+" %= "+K(C)+";"))}for(C=0,m=[];C<N;C++)m[C]=v[C]+1;for(D&&(Y("\n  // Fetch weights\n"),t(m,(function(t){for(var e=[],n=[],i=0;i<N;i++)e[i]=[G(i),t[i]-v[i]],"closed"===F[i]&&t[i]-v[i]<0&&(n[i]=K(i));q("var "+j(t)+" = "+z(e,n)+";")}))),d&&q(D?"\n  // Fetch points and project into homogeneous (weighted) coordinates\n":"\n  // Fetch points\n"),t(m,(function(t){for(var e=[],n=[],i=0;i<N;i++)e[i]=[G(i),t[i]-v[i]],"closed"===F[i]&&t[i]-v[i]<0&&(n[i]=K(i));if(g)q(D?"var "+X(t)+" = "+I(e,n)+" * "+j(t)+";":"var "+X(t)+" = "+I(e,n)+";");else for(i=0;i<O;i++){var o=t.concat(i);e[N]=i,q(D?"var "+X(o)+" = "+I(e,n)+" * "+j(t)+";":"var "+X(o)+" = "+I(e,n)+";")}})),Y("\n"),Y("// Perform De Boor's algorithm"),C=m.length-1;C>=0;C--)for(m[C]=[v[C],v[C]+1],_=0;_<v[C];_++)for(Y("\n  // Degree "+v[C]+" evaluation in dimension "+C+", step "+(_+1)+"\n"),p=v[C];p>_;p--){var Q=f&&v[C]-_-f[C]<=0;Q?(q("m = 1 / ("+k([C,p-_+v[C]-1])+" - "+k([C,p-1])+");"),D&&(q("a = ("+M(C)+" - "+k([C,p-1])+") * m;"),q("b = 1 - a;"))):(q("a = ("+M(C)+" - "+k([C,p-1])+") / ("+k([C,p-_+v[C]-1])+" - "+k([C,p-1])+");"),q("b = 1 - a;")),D&&t(m,(function(t){var e=t.slice(),n=t.slice();e[C]=p,n[C]=p-1,Q&&D&&q("h = "+j(e)+";"),q(j(e)+" = b * "+j(n)+" + a * "+j(e)+";")})),t(m,(function(t){var e,n,i,o=t.slice(),s=t.slice();if(o[C]=p,s[C]=p-1,Q){var r=_+1;if(g)e=D?"h * "+j(s)+" / "+j(o)+" * ":"",n=X(o)+(D?" / h":""),i=X(s)+(D?" / "+j(s):""),q(X(o)+" = "+r+" * "+e+"("+n+" - "+i+") * m;");else{var u=o.slice(),a=s.slice();for(y=0;y<O;y++)u[N]=a[N]=y,e=D?"h * "+j(s)+" / "+j(o)+" * ":"",n=X(u)+(D?" / h":""),i=X(a)+(D?" / "+j(s):""),q(X(u)+" = "+r+" * "+e+"("+n+" - "+i+") * m;")}}else if(g)q(X(o)+" = b * "+X(s)+" + a * "+X(o)+";");else for(y=0;y<O;y++)o[N]=s[N]=y,q(X(o)+" = b * "+X(s)+" + a * "+X(o)+";")})),Y("\n")}if(d&&q(D?"\n  // Project back from homogeneous coordinates and return final output\n":"\n  // Return final output\n"),g)q(D?"return "+X(v)+" / "+j(v)+";":"return "+X(v)+";");else for(C=0;C<O;C++)q(D?"out["+C+"] = "+X(v.concat([C]))+" / "+j(v)+";":"out["+C+"] = "+X(v.concat([C]))+";");if(g||q("return out;"),T.push("}"),d){var $=T.join("\n");R($),u[a]=$}var tt=new Function([T.join("\n"),"; return ",V].join(""))();return r[a]=tt,tt.bind(l)}})),e("nurbs/src/transform",["nurbs/src/utils/accessor-preamble","nurbs/src/utils/size-getter","nurbs/src/utils/variable"],(function(t,e,n){"use strict";var i={};return function(o,s,r,u){var a,l,h,d,c,g,f,_,p=i[o];if(p)return p.bind(s);var m=[],y="transform"+o;m.push("function "+y+"(m) {"),m.push("var i, w;"),m.push(t(s,"x","this.points",s.points));var C=n(u?"size":"s");for(a=0;a<s.splineDimension;a++)m.push("var "+C(a)+" = "+e(s.points,"this.points",a)+";");for(d=[],a=0;a<s.splineDimension;a++)h="i"+a,d.push(h),m.push("for ("+h+" = "+C(a)+"- 1; "+h+" >= 0; "+h+"--) {");for(a=0;a<s.dimension;a++)m.push("x"+a+" = "+r.point(d.concat([a])));for(c=[],a=0;a<s.dimension;a++)c.push("m["+((s.dimension+1)*(a+1)-1)+"] * x"+a);for(c.push("m["+((s.dimension+1)*(s.dimension+1)-1)+"]"),m.push("var w = ("+c.join(" + ")+") || 1.0;"),a=0;a<s.dimension;a++){for(c=[],g=s.dimension,l=0;l<g;l++)c.push("m["+(l*(g+1)+a)+"] * x"+l);c.push("m["+(l*(g+1)+a)+"]"),_=r.point(d.concat([a])),f="("+c.join(" + ")+") / w",m.push(_+" = "+f+";")}for(a=s.splineDimension-1;a>=0;a--)m.push("}");m.push("return this;"),m.push("}");var w=new Function([m.join("\n"),"; return ",y].join(""))();return u&&console.log(m.join("\n")),i[o]=w,w.bind(s)}})),e("nurbs/src/support",["nurbs/src/utils/ndloop","nurbs/src/utils/variable","nurbs/src/utils/accessor-preamble","nurbs/src/utils/infer-type","nurbs/src/utils/is-array-like","nurbs/src/utils/size-getter"],(function(t,e,n,i,o,s){"use strict";var r={};return function(u,a,l,h,d){var c=r[u];if(c)return c.bind(a);var g,f,_,p=a.degree,m=a.knots,y=a.splineDimension,C=a.boundary,w=[],N="support"+u,b=l.knot,v=e("t"),S=h?"domain":"d",D=e(h?"size":"s"),x=e(h?"knotIndex":"i"),O=!0;for(_=0;_<y;_++)o(m)&&o(m[_])&&(O=!1);function F(t){w.push("  "+(t||""))}var B=[];for(g=0;g<y;g++)B.push(v([g]));w.push("function "+N+" (out, "+B.join(", ")+") {");var P=0;function R(t,e){F(void 0===e?"out["+P+++"] = "+t.join(" + ")+";":"out["+P+++"] = ("+t.join(" + ")+" + "+e+") % "+e+";")}for(F("var h, m;"),F("var c = 0;"),d&&(F("var "+S+" = this.domain;"),F("for (var i = 0; i < this.splineDimension; i++) {"),F("  a = arguments[i + 1];"),F("  if (a < "+S+"[i][0] || a > "+S+"[i][1] || a === undefined || isNaN(a)) {"),F("    throw new Error('Invalid Spline parameter in dimension '+i+'. Valid domain is ['+"+S+"[i][0]+', '+"+S+"[i][1]+']. but got t'+i+' = '+arguments[i + 1]+'.');"),F("  }"),F("}")),_=0;_<y;_++)F("var "+D(_)+" = "+s(a.points,"this.points",_)+";");O||w.push(n(a,"k","this.knots",m));var T=[];for(_=0;_<y;_++)switch(i(m)){case i.NDARRAY:T[_]=!0;break;case i.ARRAY_OF_ARRAYS:T[_]=o(m[_])}for(_=0;_<y;_++)T[_]?(F("var "+x(_)+" = 0;"),F("h = "+D(_)+";"),F("while(h > "+x(_)+" + 1) {"),F("  m = 0.5 * (h + "+x(_)+") | 0;"),F("  if ("+b([_,"m"])+" > "+v(_)+") h = m;"),F("  else "+x(_)+" = m;"),F("}")):"closed"===C[_]?F(x(_)+" = ("+v(_)+" | 0) % "+D(_)+";"):(F(x(_)+" = ("+v(_)+" | 0);"),F("if ("+x(_)+" < "+p[_]+") "+x(_)+" = "+p[_]+";"),F("if ("+x(_)+" > "+D(_)+" - 1) "+x(_)+" = "+D(_)+" - 1;"));for(_=0,f=[];_<y;_++)f[_]=p[_]+1;t(f,(function(t){for(var e=[],n=[],i=0;i<y;i++)e[i]=[x(i),t[i]-p[i]],"closed"===C[i]&&t[i]-p[i]<0&&(n[i]=D(i));for(i=0;i<y;i++)R(e[i],n[i])})),F("out.length = "+P+";"),F("return out;"),w.push("}"),h&&console.log(w.join("\n"));var V=new Function([w.join("\n"),"; return ",N].join(""))();return r[u]=V,V.bind(a)}})),e("nurbs/extras/sample",["standard/Math/Numbers/Vector3","standard/Math/Geometry/Triangle3"],(function(t,e){"use strict";var n=[];return function(t,e,i){i=i||{};var o=(t=t||{}).points=t.points||[],s=t.faces=t.faces||[],r=i.haveWeights,u=e.dimension-r;if(Array.isArray(i.resolution))var a=i.resolution;else{var l=void 0===i.resolution?31:i.resolution;a=new Array(e.splineDimension).fill(l)}switch(e.splineDimension){case 1:for(var h=(m=(C=a[0])+!(N="closed"===e.boundary[0]))*u,d=(v=(y=i.domain||e.domain)[0])[1]-v[0],c=0;c<m;++c){var g=v[0]+d*c/C,f=c*u;if(e.evaluate(n,g),r)for(var _=n[u],p=0;p<u;++p)o[f+p]=n[p]/_;else for(p=0;p<u;++p)o[f+p]=n[p]}o.length=h;break;case 2:var m,y,C=a[0],w=a[1],N="closed"===e.boundary[0],b=w+!(F="closed"===e.boundary[1]),v=(h=(m=C+!N)*b*u,(y=i.domain||e.domain)[0]),S=y[1],D=(d=v[1]-v[0],S[1]-S[0]);for(c=0;c<m;++c){g=v[0]+d*c/C;for(var x=0;x<b;++x){var O=S[0]+D*x/w;f=(c+m*x)*u;if(e.evaluate(n,g,O),r)for(_=n[u],p=0;p<u;++p)o[f+p]=n[p]/_;else for(p=0;p<u;++p)o[f+p]=n[p]}}o.length=h;N=i.closed[0];var F=i.closed[1],B=0;for(c=0;c<C;++c){var P=c,R=c+1;N&&(R%=C);for(x=0;x<w;++x){var T=x,V=x+1;F&&(V%=w),s[B++]=P+m*T,s[B++]=R+m*T,s[B++]=R+m*V,s[B++]=P+m*T,s[B++]=R+m*V,s[B++]=P+m*V}}s.length=B;break;default:throw new Error("Can only sample curves and surfaces")}return t}})),e("nurbs/nurbs",["nurbs/src/utils/infer-type","nurbs/src/utils/cache-key","nurbs/src/utils/is-ndarray","nurbs/src/utils/is-ndarray-like","nurbs/src/utils/create-accessors","nurbs/src/numerical-derivative","nurbs/src/utils/is-array-like","nurbs/src/evaluate","nurbs/src/transform","nurbs/src/support","nurbs/extras/sample"],(function(t,e,n,i,o,s,r,u,a,l,h){"use strict";var d={open:"open",closed:"closed",clamped:"clamped"};function c(t){return null==t}function g(i,h,g,f,_,p){var m,y;!i||r(i)||n(i)?(p=p||{},this.weights=f,this.knots=g,this.degree=h,this.points=i,this.boundary=_,this.debug=p.debug,this.checkBounds=!!p.checkBounds,Object.defineProperty(this,"size",{value:p.size,writable:!0,configurable:!0})):(p=i,this.debug=i.debug,this.checkBounds=!!i.checkBounds,this.weights=i.weights,this.knots=i.knots,this.degree=i.degree,this.boundary=i.boundary,this.points=i.points,Object.defineProperty(this,"size",{value:p.size,writable:!0,configurable:!0}));var C=t(this.points),w=t(this.weights),N=t(this.knots);if(this.points)switch(C){case t.GENERIC_NDARRAY:case t.NDARRAY:Object.defineProperties(this,{splineDimension:{value:this.points.shape.length-1,writable:!1,configurable:!0},dimension:{value:this.points.shape[this.points.shape.length-1],writable:!1,configurable:!0},size:{get:function(){return this.points.shape.slice(0,this.points.shape.length-1)},set:function(){throw new Error("Cannot assign to read only property 'size'")},configurable:!0}});break;case t.ARRAY_OF_OBJECTS:case t.ARRAY_OF_ARRAYS:var b=0,v=this.size||[];v.length=0;for(var S=this.points;r(S[0]);S=S[0])b++,v.push(S.length);if(0===b)throw new Error("Expected an array of points");Object.defineProperties(this,{splineDimension:{value:b,writable:!1,configurable:!0},dimension:{value:S.length,writable:!1,configurable:!0},size:{get:function(){var t=[];t.length=0;for(var e=0,n=this.points;e<this.splineDimension;e++,n=n[0])t[e]=n.length;return t},set:function(){throw new Error("Cannot assign to read only property 'size'")},configurable:!0}});break;case t.PACKED:default:throw new Error("Expected either a packed array, array of arrays, or ndarray of points")}else{if(void 0===this.size||null===this.size)throw new Error("Either points or a control hull size must be provided.");if(r(this.size)||Object.defineProperty(this,"size",{value:[this.size],writable:!0,configurable:!0}),0===this.size.length)throw new Error("`size` must be a number or an array of length at least one.");Object.defineProperties(this,{splineDimension:{value:this.size.length,writable:!1,configurable:!0},dimension:{value:0,writable:!1,configurable:!0}})}if(r(this.degree)){for(m=0;m<this.splineDimension;m++)if(c(this.degree[m]))throw new Error("Missing degree in dimension "+(m+1))}else{var D=!c(this.degree),x=c(this.degree)?2:this.degree;for(this.degree=[],m=0;m<this.splineDimension;m++)if(this.size[m]<=x){if(D)throw new Error("Expected at least "+(x+1)+" points for degree "+x+" spline in dimension "+(m+1)+" but got only "+this.size[m]);this.degree[m]=this.size[m]-1}else this.degree[m]=x}if(y="string"!=typeof this.boundary?"open":this.boundary,!d[y])throw new Error("Boundary type must be one of "+Object.keys(d)+". Got "+y);for(this.boundary=r(this.boundary)?this.boundary:[],this.boundary.length=this.splineDimension,m=0;m<this.splineDimension;m++)if(this.boundary[m]=c(this.boundary[m])?y:this.boundary[m],!d[y])throw new Error("Boundary type must be one of "+Object.keys(d)+". Got "+y+" for dimension "+(m+1));switch(N){case t.ARRAY_OF_ARRAYS:for(r(this.knots)&&this.knots.length>0&&!r(this.knots[0])&&(this.knots=[this.knots]),m=0;m<this.splineDimension;m++){if(this.size[m]<=this.degree[m])throw new Error("Expected at least "+(this.degree[m]+1)+" points in dimension "+(m+1)+" but got "+this.size[m]+".");if(r(this.knots[m])){if("closed"!==this.boundary[m]&&this.knots[m].length!==this.degree[m]+this.size[m]+1)throw new Error("Expected "+(this.degree[m]+this.size[m]+1)+" knots in dimension "+(m+1)+" but got "+this.knots[m].length+".");if("closed"===this.boundary[m]&&this.knots[m].length!==this.size[m]+1&&!(this.knots[m].length===this.size[m]+this.degree[m]+1))throw new Error("Expected "+(this.size[m]+1)+" knots for closed spline in dimension "+(m+1)+" but got "+this.knots[m].length+".")}}case t.NDARRAY:}var O=e(this,this.debug,this.checkBounds,C,w,N);if(O!==this.__cacheKey){this.__cacheKey=O;var F=o(this);this.evaluate=u(this.__cacheKey,this,F,this.debug,this.checkBounds,!1),this.transform=a(this.__cacheKey,this,F,this.debug),this.support=l(this.__cacheKey,this,F,this.debug,this.checkBounds),this.evaluator=function(t,e){return u(this.__cacheKey,this,F,this.debug,this.checkBounds,e,t)}}return this.numericalDerivative=s.bind(this),this}function f(){var t,e=[],n=this.points;n?i(n)&&(t=n.shape):t=this.size;for(var o=0;o<this.splineDimension;o++){var s=t?t[o]:n.length,r=this.degree[o],u="closed"===this.boundary[o];if(this.knots&&this.knots[o]){var a=this.knots[o];e[o]=[a[u?0:r],a[s]]}else e[o]=[u?0:r,s];n&&(n=n[0])}return e}function _(t,e,n,i,o,s){var r=function(t,e,n,i,o,s){return u(t,e,n,i,o,s),r},u=g.bind(r);return Object.defineProperty(r,"domain",{get:f}),u(t,e,n,i,o,s),r}return _.sample=h,_})),e("nurbs",["nurbs/nurbs"],(function(t){return t})),e("x_ite/Components/NURBS/NurbsCurve",["x_ite/Base/X3DCast","x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Components/Rendering/X3DLineGeometryNode","x_ite/Base/X3DConstants","x_ite/Browser/NURBS/NURBS","nurbs"],(function(t,e,n,i,o,s,r,u,a){"use strict";function l(t){o.call(this,t),s.call(this,t),this.addType(r.NurbsCurve),this.knots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[]}}return l.prototype=Object.assign(Object.create(o.prototype),s.prototype,{constructor:l,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new i([new n(r.inputOutput,"metadata",new e.SFNode),new n(r.inputOutput,"tessellation",new e.SFInt32),new n(r.initializeOnly,"closed",new e.SFBool),new n(r.initializeOnly,"order",new e.SFInt32(3)),new n(r.initializeOnly,"knot",new e.MFDouble),new n(r.inputOutput,"weight",new e.MFDouble),new n(r.inputOutput,"controlPoint",new e.SFNode)]),getTypeName:function(){return"NurbsCurve"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){o.prototype.initialize.call(this),this._controlPoint.addInterest("set_controlPoint__",this),this.set_controlPoint__()},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=t(r.X3DCoordinateNode,this._controlPoint),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this)},getTessellation:function(t){return u.getTessellation(this._tessellation.getValue(),t-this._order.getValue())},getClosed:function(t,e,n,i){return!!this._closed.getValue()&&u.getClosed(t,e,n,i)},getWeights:function(t,e,n){return u.getWeights(t,e,n)},getControlPoints:function(t,e,n,i,o){return u.getControlPoints(t,e,n,i,o)},tessellate:function(){if(this._order.getValue()<2)return[];if(!this.controlPointNode)return[];if(this.controlPointNode.getSize()<this._order.getValue())return[];const t=this.getVertices(),e=[];if(t.length){const n=t.length;for(let i=0;i<n;i+=8)e.push(t[i],t[i+1],t[i+2]);e.push(t[n-4],t[n-3],t[n-2])}return e},build:function(){if(this._order.getValue()<2)return;if(!this.controlPointNode)return;if(this.controlPointNode.getSize()<this._order.getValue())return;const t=this.getClosed(this._order.getValue(),this._knot,this._weight,this.controlPointNode),e=this.getWeights(this.weights,this.controlPointNode.getSize(),this._weight),n=this.getControlPoints(this.controlPoints,t,this._order.getValue(),e,this.controlPointNode),i=this.getKnots(this.knots,t,this._order.getValue(),this.controlPointNode.getSize(),this._knot),o=(i.at(-1),i[0],this._order.getValue()-1),s=this.surface=(this.surface||a)({boundary:["open"],degree:[o],knots:[i],points:n,debug:!1});this.sampleOptions.resolution[0]=this.getTessellation(i.length),this.sampleOptions.haveWeights=Boolean(e);const r=a.sample(this.mesh,s,this.sampleOptions).points,u=this.getVertices();for(let t=3,e=r.length;t<e;t+=3){const e=t-3;u.push(r[e],r[e+1],r[e+2],1),u.push(r[t],r[t+1],r[t+2],1)}}}),l})),e("x_ite/Components/NURBS/NurbsCurve2D",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsControlCurveNode","x_ite/Base/X3DConstants","x_ite/Browser/NURBS/NURBS","standard/Math/Numbers/Vector3","nurbs"],(function(t,e,n,i,o,s,r,u){"use strict";function a(t){i.call(this,t),this.addType(o.NurbsCurve2D),this.knots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[]},this.array=[]}return a.prototype=Object.assign(Object.create(i.prototype),{constructor:a,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new n([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.inputOutput,"tessellation",new t.SFInt32),new e(o.initializeOnly,"closed",new t.SFBool),new e(o.initializeOnly,"order",new t.SFInt32(3)),new e(o.initializeOnly,"knot",new t.MFDouble),new e(o.inputOutput,"weight",new t.MFDouble),new e(o.inputOutput,"controlPoint",new t.MFVec2d)]),getTypeName:function(){return"NurbsCurve2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},getTessellation:function(t){return s.getTessellation(this._tessellation.getValue(),t-this._order.getValue())},getClosed:function(t,e,n,i){return!!this._closed.getValue()&&s.getClosed2D(t,e,n,i)},getKnots:function(t,e,n,i,o){return s.getKnots(t,e,n,i,o)},getWeights:function(t,e,n){return s.getWeights(t,e,n)},getControlPoints:function(t,e,n,i,o){return s.getControlPoints2D(t,e,n,i,o)},tessellate:function(t){const e=this.array;if(e.length=0,this._order.getValue()<2)return e;if(this._controlPoint.length<this._order.getValue())return e;const n=this.getClosed(this._order.getValue(),this._knot,this._weight,this._controlPoint),i=this.getWeights(this.weights,this._controlPoint.length,this._weight),o=this.getControlPoints(this.controlPoints,n,this._order.getValue(),i,this._controlPoint),s=this.getKnots(this.knots,n,this._order.getValue(),this._controlPoint.length,this._knot),a=(s.at(-1),s[0],this._order.getValue()-1),l=this.surface=(this.surface||u)({boundary:["open"],degree:[a],knots:[s],points:o,debug:!1});this.sampleOptions.resolution[0]=this.getTessellation(s.length),this.sampleOptions.haveWeights=Boolean(i);const h=u.sample(this.mesh,l,this.sampleOptions).points;switch(t){case 0:for(let t=0,n=h.length;t<n;t+=2)e.push(h[t],h[t+1]);break;case 1:for(let t=0,n=h.length;t<n;t+=2)e.push(h[t],0,h[t+1]);break;case 2:for(let t=0,n=h.length;t<n;t+=2)e.push(new r(h[t],h[t+1],0))}return e}}),a})),e("x_ite/Components/NURBS/NurbsOrientationInterpolator",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/Core/X3DChildNode","x_ite/Components/Interpolation/OrientationInterpolator","x_ite/Base/X3DConstants","x_ite/Base/X3DCast","x_ite/Browser/NURBS/NURBS","standard/Math/Numbers/Vector3","standard/Math/Numbers/Rotation4","nurbs"],(function(t,e,n,i,o,s,r,u,a,l,h){"use strict";function d(e){i.call(this,e),this.addType(s.NurbsOrientationInterpolator),this.addChildObjects("rebuild",new t.SFTime),this.interpolator=new o(e),this.knots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[128]}}return d.prototype=Object.assign(Object.create(i.prototype),{constructor:d,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new n([new e(s.inputOutput,"metadata",new t.SFNode),new e(s.inputOnly,"set_fraction",new t.SFFloat),new e(s.inputOutput,"order",new t.SFInt32(3)),new e(s.inputOutput,"knot",new t.MFDouble),new e(s.inputOutput,"weight",new t.MFDouble),new e(s.inputOutput,"controlPoint",new t.SFNode),new e(s.outputOnly,"value_changed",new t.SFRotation)]),getTypeName:function(){return"NurbsOrientationInterpolator"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){i.prototype.initialize.call(this),this._order.addInterest("requestRebuild",this),this._knot.addInterest("requestRebuild",this),this._weight.addInterest("requestRebuild",this),this._controlPoint.addInterest("set_controlPoint__",this),this._rebuild.addInterest("build",this),this._set_fraction.addFieldInterest(this.interpolator._set_fraction),this.interpolator._value_changed.addFieldInterest(this._value_changed),this.interpolator.setup(),this.set_controlPoint__()},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=r(s.X3DCoordinateNode,this._controlPoint),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this),this.requestRebuild()},getClosed:function(t,e,n,i){return!1},getKnots:function(t,e,n,i,o){return u.getKnots(t,e,n,i,o)},getWeights:function(t,e,n){return u.getWeights(t,e,n)},getControlPoints:function(t,e,n,i,o){return u.getControlPoints(t,e,n,i,o)},requestRebuild:function(){this._rebuild.addEvent()},build:function(){if(this._order.getValue()<2)return;if(!this.controlPointNode)return;if(this.controlPointNode.getSize()<this._order.getValue())return;const t=this.getClosed(this._order.getValue(),this._knot,this._weight,this.controlPointNode),e=this.getWeights(this.weights,this.controlPointNode.getSize(),this._weight),n=this.getControlPoints(this.controlPoints,t,this._order.getValue(),e,this.controlPointNode),i=this.getKnots(this.knots,t,this._order.getValue(),this.controlPointNode.getSize(),this._knot),o=i.at(-1)-i[0],s=this._order.getValue()-1,r=this.surface=(this.surface||h)({boundary:["open"],degree:[s],knots:[i],points:n,debug:!1});this.sampleOptions.haveWeights=Boolean(e);const u=h.sample(this.mesh,r,this.sampleOptions).points,d=this.interpolator;d._key.length=0,d._keyValue.length=0;for(let e=0,n=u.length-3;e<n;e+=3){const s=new a(u[e+3]-u[e+0],u[e+4]-u[e+1],u[e+5]-u[e+2]);d._key.push(i[0]+e/(n-3+3*t)*o),d._keyValue.push(new l(a.zAxis,s))}t&&(d._key.push(i[0]+o),d._keyValue.push(d._keyValue[0]))}}),d})),e("x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode",["x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Base/X3DConstants","x_ite/Base/X3DCast","x_ite/Browser/NURBS/NURBS","standard/Math/Algorithm","standard/Math/Numbers/Vector3","standard/Math/Geometry/Triangle3","nurbs"],(function(t,e,n,i,o,s,r,u){"use strict";function a(n){t.call(this,n),this.addType(e.X3DNurbsSurfaceGeometryNode),this.tessellationScale=1,this.uKnots=[],this.vKnots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[],closed:[]},this.textUKnots=[],this.textVKnots=[],this.textWeights=[],this.texControlPoints=[],this.texMesh={}}return a.prototype=Object.assign(Object.create(t.prototype),{constructor:a,initialize:function(){t.prototype.initialize.call(this),this._texCoord.addInterest("set_texCoord__",this),this._controlPoint.addInterest("set_controlPoint__",this),this.set_texCoord__(),this.set_controlPoint__()},set_texCoord__:function(){this.texCoordNode&&this.texCoordNode.removeInterest("requestRebuild",this),this.nurbsTexCoordNode&&this.nurbsTexCoordNode.removeInterest("requestRebuild",this),this.texCoordNode=n(e.X3DTextureCoordinateNode,this._texCoord),this.nurbsTexCoordNode=n(e.NurbsTextureCoordinate,this._texCoord),this.texCoordNode&&this.texCoordNode.addInterest("requestRebuild",this),this.nurbsTexCoordNode&&this.nurbsTexCoordNode.addInterest("requestRebuild",this)},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=n(e.X3DCoordinateNode,this._controlPoint),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this)},setTessellationScale:function(t){this.tessellationScale=t,this.requestRebuild()},getUTessellation:function(t){return Math.floor(i.getTessellation(this._uTessellation.getValue(),t-this._uOrder.getValue())*this.tessellationScale)},getVTessellation:function(t){return Math.floor(i.getTessellation(this._vTessellation.getValue(),t-this._vOrder.getValue())*this.tessellationScale)},getUClosed:function(t,e,n,o,s,r){return!!this._uClosed.getValue()&&i.getUClosed(t,e,n,o,s,r)},getVClosed:function(t,e,n,o,s,r){return!!this._vClosed.getValue()&&i.getVClosed(t,e,n,o,s,r)},getUVWeights:function(t,e,n,o){return i.getUVWeights(t,e,n,o)},getTexControlPoints:function(t,e,n,o,s,r,u,a){return i.getTexControlPoints(t,e,n,o,s,r,u,a)},getUVControlPoints:function(t,e,n,o,s,r,u,a,l){return i.getUVControlPoints(t,e,n,o,s,r,u,a,l)},getTrimmingContours:function(){},build:function(){if(this._uOrder.getValue()<2)return;if(this._vOrder.getValue()<2)return;if(this._uDimension.getValue()<this._uOrder.getValue())return;if(this._vDimension.getValue()<this._vOrder.getValue())return;if(!this.controlPointNode)return;if(this.controlPointNode.getSize()!==this._uDimension.getValue()*this._vDimension.getValue())return;const t=this.getUClosed(this._uOrder.getValue(),this._uDimension.getValue(),this._vDimension.getValue(),this._uKnot,this._weight,this.controlPointNode),e=this.getVClosed(this._vOrder.getValue(),this._uDimension.getValue(),this._vDimension.getValue(),this._vKnot,this._weight,this.controlPointNode),n=this.getUVWeights(this.weights,this._uDimension.getValue(),this._vDimension.getValue(),this._weight),i=this.getUVControlPoints(this.controlPoints,t,e,this._uOrder.getValue(),this._vOrder.getValue(),this._uDimension.getValue(),this._vDimension.getValue(),n,this.controlPointNode),o=this.getKnots(this.uKnots,t,this._uOrder.getValue(),this._uDimension.getValue(),this._uKnot),s=this.getKnots(this.vKnots,e,this._vOrder.getValue(),this._vDimension.getValue(),this._vKnot),r=(o.at(-1),o[0],s.at(-1),s[0],this._uOrder.getValue()-1),a=this._vOrder.getValue()-1,l=this.surface=(this.surface||u)({boundary:["open","open"],degree:[r,a],knots:[o,s],points:i,debug:!1}),h=this.sampleOptions;h.resolution[0]=this.getUTessellation(o.length),h.resolution[1]=this.getVTessellation(s.length),h.closed[0]=t,h.closed[1]=e,h.domain=void 0,h.haveWeights=Boolean(n),h.trimmingContours=this.getTrimmingContours();const d=u.sample(this.mesh,l,h),c=d.faces,g=d.points,f=this.getVertices();for(let t=0,e=c.length;t<e;++t){const e=3*c[t];f.push(g[e],g[e+1],g[e+2],1)}this.buildNurbsTexCoords(t,e,this._uOrder.getValue(),this._vOrder.getValue(),o,s,this._uDimension.getValue(),this._vDimension.getValue(),l.domain),this.buildNormals(c,g),this.setSolid(this._solid.getValue()),this.setCCW(!0)},buildNurbsTexCoords:function(){const t=[],e=[],n=[[[0,0,0,1],[0,1,0,1]],[[1,0,0,1],[1,1,0,1]]];function i(t,e){return t[0]=t[1]=e[0],t[2]=t[3]=e.at(-1),t}return function(o,s,r,a,l,h,d,c,g){const f=this.sampleOptions;if(this.texCoordNode&&this.texCoordNode.getSize()===d*c)var _=r-1,p=a-1,m=l,y=h,C=this.getTexControlPoints(this.texControlPoints,o,s,r,a,d,c,this.texCoordNode);else if(this.nurbsTexCoordNode&&this.nurbsTexCoordNode.isValid()){var w=this.nurbsTexCoordNode,N=(_=w._uOrder.getValue()-1,p=w._vOrder.getValue()-1,m=this.getKnots(this.texUKnots,!1,w._uOrder.getValue(),w._uDimension.getValue(),w._uKnot),y=this.getKnots(this.texVKnots,!1,w._vOrder.getValue(),w._vDimension.getValue(),w._vKnot),this.getUVWeights(this.texWeights,w._uDimension.getValue(),w._vDimension.getValue(),w._weight));C=w.getControlPoints(N)}else{_=1,p=1,m=i(t,l),y=i(e,h),C=n;f.domain=g}const b=this.texSurface=(this.texSurface||u)({boundary:["open","open"],degree:[_,p],knots:[m,y],points:C});f.closed[0]=!1,f.closed[1]=!1,f.haveWeights=!1;const v=u.sample(this.texMesh,b,f),S=v.faces,D=v.points,x=this.getTexCoords();for(let t=0,e=S.length;t<e;++t){const e=4*S[t];x.push(D[e],D[e+1],D[e+2],D[e+3])}this.getMultiTexCoords().push(this.getTexCoords())}}(),buildNormals:function(t,e){const n=this.createNormals(t,e),i=this.getNormals();for(const t of n)i.push(t.x,t.y,t.z)},createNormals:function(t,e){const n=this.createFaceNormals(t,e),i=[];for(let e=0,n=t.length;e<n;++e){const n=t[e];let o=i[n];o||(o=i[n]=[]),o.push(e)}return this.refineNormals(i,n,o.radians(85))},createFaceNormals:function(){const t=new s(0,0,0),e=new s(0,0,0),n=new s(0,0,0);return function(i,o){const u=this.faceNormals||[],a=i.length;for(let l=0;l<a;l+=3){const a=3*i[l],h=3*i[l+1],d=3*i[l+2];t.set(o[a],o[a+1],o[a+2]),e.set(o[h],o[h+1],o[h+2]),n.set(o[d],o[d+1],o[d+2]);const c=r.normal(t,e,n,u[l]||new s(0,0,0));u[l]=c,u[l+1]=c,u[l+2]=c}return u.length=a,u}}()}),a})),e("x_ite/Components/NURBS/NurbsPatchSurface",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode","x_ite/Base/X3DConstants"],(function(t,e,n,i,o){"use strict";function s(t){i.call(this,t),this.addType(o.NurbsPatchSurface)}return s.prototype=Object.assign(Object.create(i.prototype),{constructor:s,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new n([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.initializeOnly,"solid",new t.SFBool(!0)),new e(o.inputOutput,"uTessellation",new t.SFInt32),new e(o.inputOutput,"vTessellation",new t.SFInt32),new e(o.initializeOnly,"uClosed",new t.SFBool),new e(o.initializeOnly,"vClosed",new t.SFBool),new e(o.initializeOnly,"uOrder",new t.SFInt32(3)),new e(o.initializeOnly,"vOrder",new t.SFInt32(3)),new e(o.initializeOnly,"uDimension",new t.SFInt32),new e(o.initializeOnly,"vDimension",new t.SFInt32),new e(o.initializeOnly,"uKnot",new t.MFDouble),new e(o.initializeOnly,"vKnot",new t.MFDouble),new e(o.inputOutput,"weight",new t.MFDouble),new e(o.inputOutput,"texCoord",new t.SFNode),new e(o.inputOutput,"controlPoint",new t.SFNode)]),getTypeName:function(){return"NurbsPatchSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"}}),s})),e("x_ite/Components/NURBS/NurbsPositionInterpolator",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/Core/X3DChildNode","x_ite/Components/Interpolation/PositionInterpolator","x_ite/Base/X3DConstants","x_ite/Base/X3DCast","x_ite/Browser/NURBS/NURBS","nurbs"],(function(t,e,n,i,o,s,r,u,a){"use strict";function l(e){i.call(this,e),this.addType(s.NurbsPositionInterpolator),this.addChildObjects("rebuild",new t.SFTime),this.interpolator=new o(e),this.knots=[],this.weights=[],this.controlPoints=[],this.mesh={},this.sampleOptions={resolution:[128]}}return l.prototype=Object.assign(Object.create(i.prototype),{constructor:l,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new n([new e(s.inputOutput,"metadata",new t.SFNode),new e(s.inputOnly,"set_fraction",new t.SFFloat),new e(s.inputOutput,"order",new t.SFInt32(3)),new e(s.inputOutput,"knot",new t.MFDouble),new e(s.inputOutput,"weight",new t.MFDouble),new e(s.inputOutput,"controlPoint",new t.SFNode),new e(s.outputOnly,"value_changed",new t.SFVec3f)]),getTypeName:function(){return"NurbsPositionInterpolator"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){i.prototype.initialize.call(this),this._order.addInterest("requestRebuild",this),this._knot.addInterest("requestRebuild",this),this._weight.addInterest("requestRebuild",this),this._controlPoint.addInterest("set_controlPoint__",this),this._rebuild.addInterest("build",this),this._set_fraction.addFieldInterest(this.interpolator._set_fraction),this.interpolator._value_changed.addFieldInterest(this._value_changed),this.interpolator.setup(),this.set_controlPoint__()},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=r(s.X3DCoordinateNode,this._controlPoint),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this),this.requestRebuild()},getClosed:function(t,e,n,i){return!1},getKnots:function(t,e,n,i,o){return u.getKnots(t,e,n,i,o)},getWeights:function(t,e,n){return u.getWeights(t,e,n)},getControlPoints:function(t,e,n,i,o){return u.getControlPoints(t,e,n,i,o)},requestRebuild:function(){this._rebuild.addEvent()},build:function(){if(this._order.getValue()<2)return;if(!this.controlPointNode)return;if(this.controlPointNode.getSize()<this._order.getValue())return;const e=this.getClosed(this._order.getValue(),this._knot,this._weight,this.controlPointNode),n=this.getWeights(this.weights,this.controlPointNode.getSize(),this._weight),i=this.getControlPoints(this.controlPoints,e,this._order.getValue(),n,this.controlPointNode),o=this.getKnots(this.knots,e,this._order.getValue(),this.controlPointNode.getSize(),this._knot),s=o.at(-1)-o[0],r=this._order.getValue()-1,u=this.surface=(this.surface||a)({boundary:["open"],degree:[r],knots:[o],points:i,debug:!1});this.sampleOptions.haveWeights=Boolean(n);const l=a.sample(this.mesh,u,this.sampleOptions).points,h=this.interpolator;h._key.length=0,h._keyValue.length=0;for(let e=0,n=l.length;e<n;e+=3)h._key.push(o[0]+e/(n-3)*s),h._keyValue.push(new t.SFVec3f(l[e],l[e+1],l[e+2]))}}),l})),e("x_ite/Components/NURBS/NurbsSet",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/Core/X3DChildNode","x_ite/Components/Grouping/X3DBoundedObject","x_ite/Base/X3DConstants","x_ite/Base/X3DCast"],(function(t,e,n,i,o,s,r){"use strict";function u(t){i.call(this,t),o.call(this,t),this.addType(s.NurbsSet),this.geometryNodes=[]}function a(t,e,n,i,o,s){const r=new Set;for(let t=o;t<s;++t)r.add(i[t]);return t.remove(e,n,(function(t){return r.has(t)}))}return u.prototype=Object.assign(Object.create(i.prototype),o.prototype,{constructor:u,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new n([new e(s.inputOutput,"metadata",new t.SFNode),new e(s.inputOutput,"tessellationScale",new t.SFFloat(1)),new e(s.inputOutput,"visible",new t.SFBool(!0)),new e(s.inputOutput,"bboxDisplay",new t.SFBool),new e(s.initializeOnly,"bboxSize",new t.SFVec3f(-1,-1,-1)),new e(s.initializeOnly,"bboxCenter",new t.SFVec3f),new e(s.inputOnly,"addGeometry",new t.MFNode),new e(s.inputOnly,"removeGeometry",new t.MFNode),new e(s.inputOutput,"geometry",new t.MFNode)]),getTypeName:function(){return"NurbsSet"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){i.prototype.initialize.call(this),o.prototype.initialize.call(this),this._tessellationScale.addInterest("set_tessellationScale__",this),this._addGeometry.addInterest("set_addGeometry__",this),this._removeGeometry.addInterest("set_removeGeometry__",this),this._geometry.addInterest("set_geometry__",this),this.set_geometry__()},getBBox:function(t,e){for(const e of this.geometryNodes)t.add(e.getBBox());return t},set_tessellationScale__:function(){const t=Math.max(0,this._tessellationScale.getValue());for(const e of this.geometryNodes)e.setTessellationScale(t)},set_addGeometry__:function(){this._addGeometry.setTainted(!0),this._addGeometry.erase(a(this._addGeometry,0,this._addGeometry.length,this._geometry,0,this._geometry.length),this._addGeometry.length);for(const t of this._addGeometry)this._geometry.push(t);this._addGeometry.length=0,this._addGeometry.setTainted(!1)},set_removeGeometry__:function(){this._removeGeometry.setTainted(!0),this._geometry.erase(a(this._geometry,0,this._geometry.length,this._removeGeometry,0,this._removeGeometry.length),this._geometry.length),this._removeGeometry.length=0,this._removeGeometry.setTainted(!1)},set_geometry__:function(){for(const t of this.geometryNodes)t.setTessellationScale(1);this.geometryNodes.length=0;for(const t of this._geometry){const e=r(s.X3DNurbsSurfaceGeometryNode,t);e&&this.geometryNodes.push(e)}this.set_tessellationScale__()}}),u})),e("standard/Math/Geometry/Triangle2",[],(function(){"use strict";return{isPointInTriangle:function(t,e,n,i){const o=(e.y-n.y)*(t.x-n.x)+(n.x-e.x)*(t.y-n.y);if(0==o)return!1;const s=((e.y-n.y)*(i.x-n.x)+(n.x-e.x)*(i.y-n.y))/o;if(s<0||s>1)return!1;const r=((n.y-t.y)*(i.x-n.x)+(t.x-n.x)*(i.y-n.y))/o;if(r<0||r>1)return!1;const u=1-s-r;return!(u<0||u>1)}}})),e("x_ite/Components/NURBS/NurbsSurfaceInterpolator",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/Core/X3DChildNode","x_ite/Components/NURBS/NurbsPatchSurface","x_ite/Base/X3DConstants","standard/Math/Geometry/Line3","standard/Math/Geometry/Triangle2","standard/Math/Numbers/Vector3"],(function(t,e,n,i,o,s,r,u,a){"use strict";function l(t){i.call(this,t),this.addType(s.NurbsSurfaceInterpolator),this.geometry=new o(t)}return l.prototype=Object.assign(Object.create(i.prototype),{constructor:l,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new n([new e(s.inputOutput,"metadata",new t.SFNode),new e(s.inputOnly,"set_fraction",new t.SFVec2f),new e(s.initializeOnly,"uOrder",new t.SFInt32(3)),new e(s.initializeOnly,"vOrder",new t.SFInt32(3)),new e(s.initializeOnly,"uDimension",new t.SFInt32),new e(s.initializeOnly,"vDimension",new t.SFInt32),new e(s.initializeOnly,"uKnot",new t.MFDouble),new e(s.initializeOnly,"vKnot",new t.MFDouble),new e(s.inputOutput,"weight",new t.MFDouble),new e(s.inputOutput,"controlPoint",new t.SFNode),new e(s.outputOnly,"normal_changed",new t.SFVec3f),new e(s.outputOnly,"position_changed",new t.SFVec3f)]),getTypeName:function(){return"NurbsSurfaceInterpolator"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){this._set_fraction.addInterest("set_fraction__",this),this._uOrder.addFieldInterest(this.geometry._uOrder),this._vOrder.addFieldInterest(this.geometry._vOrder),this._uDimension.addFieldInterest(this.geometry._uDimension),this._vDimension.addFieldInterest(this.geometry._vDimension),this._uKnot.addFieldInterest(this.geometry._uKnot),this._vKnot.addFieldInterest(this.geometry._vKnot),this._weight.addFieldInterest(this.geometry._weight),this._controlPoint.addFieldInterest(this.geometry._controlPoint),this.geometry._uTessellation=128,this.geometry._vTessellation=128,this.geometry._uOrder=this._uOrder,this.geometry._vOrder=this._vOrder,this.geometry._uDimension=this._uDimension,this.geometry._vDimension=this._vDimension,this.geometry._uKnot=this._uKnot,this.geometry._vKnot=this._vKnot,this.geometry._weight=this._weight,this.geometry._controlPoint=this._controlPoint,this.geometry.setup()},set_fraction__:function(){const t=new a(0,0,0),e=new a(0,0,0),n=new a(0,0,0),i=new a(0,0,0),o=new r(a.Zero,a.zAxis),s={};return function(){const r=this._set_fraction.getValue(),l=this.geometry.getTexCoords(),h=this.geometry.getNormals(),d=this.geometry.getVertices();for(let c=0,g=0,f=l.length;c<f;c+=12,g+=9)if(t.set(l[c+0],l[c+1],0),e.set(l[c+4],l[c+5],0),n.set(l[c+7],l[c+9],0),u.isPointInTriangle(t,e,n,r)&&(o.set(i.set(r.x,r.y,0),a.zAxis),o.intersectsTriangle(t,e,n,s))){const t=s.u,e=s.v,n=s.t,i=new a(n*h[g+0]+t*h[g+3]+e*h[g+6],n*h[g+1]+t*h[g+4]+e*h[g+7],n*h[g+2]+t*h[g+5]+e*h[g+8]),o=new a(n*d[c+0]+t*d[c+4]+e*d[c+8],n*d[c+1]+t*d[c+5]+e*d[c+9],n*d[c+2]+t*d[c+6]+e*d[c+10]);this._normal_changed=i,this._position_changed=o}}}()}),l})),e("x_ite/Components/NURBS/NurbsSweptSurface",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/Geometry3D/Extrusion","x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Base/X3DConstants","x_ite/Base/X3DCast"],(function(t,e,n,i,o,s,r){"use strict";function u(t){o.call(this,t),this.addType(s.NurbsSweptSurface),this.extrusion=new i(t)}return u.prototype=Object.assign(Object.create(o.prototype),{constructor:u,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new n([new e(s.inputOutput,"metadata",new t.SFNode),new e(s.initializeOnly,"solid",new t.SFBool(!0)),new e(s.initializeOnly,"ccw",new t.SFBool(!0)),new e(s.inputOutput,"crossSectionCurve",new t.SFNode),new e(s.inputOutput,"trajectoryCurve",new t.SFNode)]),getTypeName:function(){return"NurbsSweptSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){o.prototype.initialize.call(this),this._crossSectionCurve.addInterest("set_crossSectionCurve__",this),this._trajectoryCurve.addInterest("set_trajectoryCurve__",this);const t=this.extrusion;t._beginCap=!1,t._endCap=!1,t._solid=!0,t._ccw=!0,t._convex=!0,t._creaseAngle=Math.PI,t.setup(),t._crossSection.setTainted(!0),t._spine.setTainted(!0),this.set_crossSectionCurve__(),this.set_trajectoryCurve__()},set_crossSectionCurve__:function(){this.crossSectionCurveNode&&this.crossSectionCurveNode.removeInterest("requestRebuild",this),this.crossSectionCurveNode=r(s.X3DNurbsControlCurveNode,this._crossSectionCurve),this.crossSectionCurveNode&&this.crossSectionCurveNode.addInterest("requestRebuild",this)},set_trajectoryCurve__:function(){this.trajectoryCurveNode&&this.trajectoryCurveNode._rebuild.removeInterest("requestRebuild",this),this.trajectoryCurveNode=r(s.NurbsCurve,this._trajectoryCurve),this.trajectoryCurveNode&&this.trajectoryCurveNode._rebuild.addInterest("requestRebuild",this)},build:function(){if(!this.crossSectionCurveNode)return;if(!this.trajectoryCurveNode)return;const t=this.extrusion;if(t._crossSection=this.crossSectionCurveNode.tessellate(0),t._spine=this.trajectoryCurveNode.tessellate(0),t.rebuild(),this.getColors().assign(t.getColors()),this.getTexCoords().assign(t.getTexCoords()),this.getNormals().assign(t.getNormals()),this.getVertices().assign(t.getVertices()),this.getMultiTexCoords().push(this.getTexCoords()),!this._ccw.getValue()){const t=this.getNormals();for(let e=0,n=t.length;e<n;++e)t[e]=-t[e]}this.setSolid(this._solid.getValue()),this.setCCW(this._ccw.getValue())}}),u})),e("x_ite/Components/NURBS/NurbsSwungSurface",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/Geometry3D/Extrusion","x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Base/X3DConstants","x_ite/Base/X3DCast"],(function(t,e,n,i,o,s,r){"use strict";function u(t){o.call(this,t),this.addType(s.NurbsSwungSurface),this.extrusion=new i(t)}return u.prototype=Object.assign(Object.create(o.prototype),{constructor:u,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new n([new e(s.inputOutput,"metadata",new t.SFNode),new e(s.initializeOnly,"solid",new t.SFBool(!0)),new e(s.initializeOnly,"ccw",new t.SFBool(!0)),new e(s.inputOutput,"profileCurve",new t.SFNode),new e(s.inputOutput,"trajectoryCurve",new t.SFNode)]),getTypeName:function(){return"NurbsSwungSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){o.prototype.initialize.call(this),this._profileCurve.addInterest("set_profileCurve__",this),this._trajectoryCurve.addInterest("set_trajectoryCurve__",this);const t=this.extrusion;t._beginCap=!1,t._endCap=!1,t._solid=!0,t._ccw=!0,t._convex=!0,t._creaseAngle=Math.PI,t.setup(),t._crossSection.setTainted(!0),t._spine.setTainted(!0),this.set_profileCurve__(),this.set_trajectoryCurve__()},set_profileCurve__:function(){this.profileCurveNode&&this.profileCurveNode.removeInterest("requestRebuild",this),this.profileCurveNode=r(s.X3DNurbsControlCurveNode,this._profileCurve),this.profileCurveNode&&this.profileCurveNode.addInterest("requestRebuild",this)},set_trajectoryCurve__:function(){this.trajectoryCurveNode&&this.trajectoryCurveNode.removeInterest("requestRebuild",this),this.trajectoryCurveNode=r(s.X3DNurbsControlCurveNode,this._trajectoryCurve),this.trajectoryCurveNode&&this.trajectoryCurveNode.addInterest("requestRebuild",this)},build:function(){if(!this.profileCurveNode)return;if(!this.trajectoryCurveNode)return;const t=this.extrusion;if(t._crossSection=this.profileCurveNode.tessellate(0),t._spine=this.trajectoryCurveNode.tessellate(1),t.rebuild(),this.getColors().assign(t.getColors()),this.getTexCoords().assign(t.getTexCoords()),this.getNormals().assign(t.getNormals()),this.getVertices().assign(t.getVertices()),this.getMultiTexCoords().push(this.getTexCoords()),!this._ccw.getValue()){const t=this.getNormals();for(let e=0,n=t.length;e<n;++e)t[e]=-t[e]}this.setSolid(this._solid.getValue()),this.setCCW(this._ccw.getValue())}}),u})),e("x_ite/Components/NURBS/NurbsTextureCoordinate",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/Core/X3DNode","x_ite/Base/X3DConstants","standard/Math/Numbers/Vector4"],(function(t,e,n,i,o,s){"use strict";function r(t){i.call(this,t),this.addType(o.NurbsTextureCoordinate),this.controlPoints=[]}return r.prototype=Object.assign(Object.create(i.prototype),{constructor:r,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new n([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.initializeOnly,"uOrder",new t.SFInt32(3)),new e(o.initializeOnly,"vOrder",new t.SFInt32(3)),new e(o.initializeOnly,"uDimension",new t.SFInt32),new e(o.initializeOnly,"vDimension",new t.SFInt32),new e(o.initializeOnly,"uKnot",new t.MFDouble),new e(o.initializeOnly,"vKnot",new t.MFDouble),new e(o.inputOutput,"weight",new t.MFDouble),new e(o.inputOutput,"controlPoint",new t.MFVec2f)]),getTypeName:function(){return"NurbsTextureCoordinate"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"texCoord"},initialize:function(){i.prototype.initialize.call(this)},getControlPoints:function(t){const e=this._controlPoint.getValue(),n=this.controlPoints;for(let i=0,o=this._uDimension.getValue();i<o;++i){let r=n[i];r||(r=n[i]=[]);for(let n=0,u=this._vDimension.getValue();n<u;++n){const u=n*o+i,a=r[n]||new s,l=2*u;r[n]=a.set(e[l],e[l+1],0,t?t[u]:1)}}return n},isValid:function(){return!(this._uOrder.getValue()<2)&&(!(this._vOrder.getValue()<2)&&(!(this._uDimension.getValue()<this._uOrder.getValue())&&(!(this._vDimension.getValue()<this._vOrder.getValue())&&this._controlPoint.length===this._uDimension.getValue()*this._vDimension.getValue())))}}),r})),e("x_ite/Components/NURBS/NurbsTrimmedSurface",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode","x_ite/Base/X3DConstants","x_ite/Base/X3DCast"],(function(t,e,n,i,o,s){"use strict";function r(t){i.call(this,t),this.addType(o.NurbsTrimmedSurface),this.trimmingContourNodes=[]}function u(t,e,n,i,o,s){const r=new Set;for(let t=o;t<s;++t)r.add(i[t]);return t.remove(e,n,(function(t){return r.has(t)}))}return r.prototype=Object.assign(Object.create(i.prototype),{constructor:r,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new n([new e(o.inputOutput,"metadata",new t.SFNode),new e(o.initializeOnly,"solid",new t.SFBool(!0)),new e(o.inputOutput,"uTessellation",new t.SFInt32),new e(o.inputOutput,"vTessellation",new t.SFInt32),new e(o.initializeOnly,"uClosed",new t.SFBool),new e(o.initializeOnly,"vClosed",new t.SFBool),new e(o.initializeOnly,"uOrder",new t.SFInt32(3)),new e(o.initializeOnly,"vOrder",new t.SFInt32(3)),new e(o.initializeOnly,"uDimension",new t.SFInt32),new e(o.initializeOnly,"vDimension",new t.SFInt32),new e(o.initializeOnly,"uKnot",new t.MFDouble),new e(o.initializeOnly,"vKnot",new t.MFDouble),new e(o.inputOutput,"weight",new t.MFDouble),new e(o.inputOutput,"texCoord",new t.SFNode),new e(o.inputOutput,"controlPoint",new t.SFNode),new e(o.inputOnly,"addTrimmingContour",new t.MFNode),new e(o.inputOnly,"removeTrimmingContour",new t.MFNode),new e(o.inputOutput,"trimmingContour",new t.MFNode)]),getTypeName:function(){return"NurbsTrimmedSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){i.prototype.initialize.call(this),this._addTrimmingContour.addInterest("set_addTrimmingContour__",this),this._removeTrimmingContour.addInterest("set_removeTrimmingContour__",this),this._trimmingContour.addInterest("set_trimmingContour__",this),this.set_trimmingContour__()},set_addTrimmingContour__:function(){this._addTrimmingContour.setTainted(!0),this._addTrimmingContour.erase(u(this._addTrimmingContour,0,this._addTrimmingContour.length,this._trimmingContour,0,this._trimmingContour.length),this._addTrimmingContour.length);for(const t of this._addTrimmingContour)this._trimmingContour.push(t);this._addTrimmingContour.length=0,this._addTrimmingContour.setTainted(!1)},set_removeTrimmingContour__:function(){this._removeTrimmingContour.setTainted(!0),this._trimmingContour.erase(u(this._trimmingContour,0,this._trimmingContour.length,this._removeTrimmingContour,0,this._removeTrimmingContour.length),this._trimmingContour.length),this._removeTrimmingContour.length=0,this._removeTrimmingContour.setTainted(!1)},set_trimmingContour__:function(){const t=this.trimmingContourNodes;t.length=0;for(const e of this._trimmingContour){const n=s(o.Contour2D,e);n&&t.push(n)}},getTrimmingContours:function(){const t=this.trimmingContourNodes,e=[];for(const n of t)n.addTrimmingContour(e);return e}}),r})),e(n.getComponentUrl("nurbs"),["x_ite/Components","x_ite/Components/NURBS/Contour2D","x_ite/Components/NURBS/ContourPolyline2D","x_ite/Components/NURBS/CoordinateDouble","x_ite/Components/NURBS/NurbsCurve","x_ite/Components/NURBS/NurbsCurve2D","x_ite/Components/NURBS/NurbsOrientationInterpolator","x_ite/Components/NURBS/NurbsPatchSurface","x_ite/Components/NURBS/NurbsPositionInterpolator","x_ite/Components/NURBS/NurbsSet","x_ite/Components/NURBS/NurbsSurfaceInterpolator","x_ite/Components/NURBS/NurbsSweptSurface","x_ite/Components/NURBS/NurbsSwungSurface","x_ite/Components/NURBS/NurbsTextureCoordinate","x_ite/Components/NURBS/NurbsTrimmedSurface","x_ite/Components/NURBS/X3DNurbsControlCurveNode","x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode","x_ite/Components/NURBS/X3DParametricGeometryNode"],(function(t,e,n,i,o,s,r,u,a,l,h,d,c,g,f,_,p,m){"use strict";t.addComponent({name:"NURBS",types:{Contour2D:e,ContourPolyline2D:n,CoordinateDouble:i,NurbsCurve:o,NurbsCurve2D:s,NurbsOrientationInterpolator:r,NurbsPatchSurface:u,NurbsPositionInterpolator:a,NurbsSet:l,NurbsSurfaceInterpolator:h,NurbsSweptSurface:d,NurbsSwungSurface:c,NurbsTextureCoordinate:g,NurbsTrimmedSurface:f},abstractTypes:{X3DNurbsControlCurveNode:_,X3DNurbsSurfaceGeometryNode:p,X3DParametricGeometryNode:m}})}))}();
