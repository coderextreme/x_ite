/* X_ITE v9.0.0 */(()=>{"use strict";var e={355:e=>{e.exports=window[Symbol.for("X_ITE.X3D-9.0.0")].require("lib/jquery")}},t={};function r(i){var a=t[i];if(void 0!==a)return a.exports;var n=t[i]={exports:{}};return e[i](n,n.exports,r),n.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{const e=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/Components");var t=r.n(e);const i=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/Namespace");var a=r.n(i);const n="precision highp float;precision highp int;precision highp sampler2D;const float M_PI=3.1415926535897932384626433832795;varying vec2 texCoord;uniform sampler2D x3d_PanoramaTexture;uniform int x3d_CurrentFace;vec3 uvToXYZ(const in int face,const in vec2 uv){vec3 xyz;if(face==0)xyz=vec3(1.0,uv.y,uv.x);else if(face==1)xyz=vec3(-1.0,uv.y,-uv.x);else if(face==2)xyz=vec3(uv.x,uv.y,-1.0);else if(face==3)xyz=vec3(-uv.x,uv.y,1.0);else if(face==4)xyz=vec3(uv.y,-1.0,uv.x);else xyz=vec3(-uv.y,1.0,uv.x);return xyz;}vec2 dirToUV(const in vec3 dir){return vec2(0.5+0.5*atan(dir.z,dir.x)/M_PI,1.0-acos(dir.y)/M_PI);}vec3 panoramaToCubeMap(const in int face,const in vec2 texCoord){vec3 scan=uvToXYZ(face,texCoord);vec3 direction=normalize(scan);vec2 src=dirToUV(direction);return texture2D(x3d_PanoramaTexture,src).rgb;}void main(){gl_FragColor=vec4(panoramaToCubeMap(x3d_CurrentFace,texCoord),1.0);}";a().add("Panorama1.fs","x_ite/Browser/CubeMapTexturing/Panorama1.fs",n);const s=n,o="#version 300 es\nprecision highp float;precision highp int;precision highp sampler2D;const float M_PI=3.1415926535897932384626433832795;in vec2 texCoord;out vec4 x3d_FragColor;uniform sampler2D x3d_PanoramaTexture;uniform int x3d_CurrentFace;vec3 uvToXYZ(const in int face,const in vec2 uv){switch(face){case 0:return vec3(1.0,uv.y,uv.x);case 1:return vec3(-1.0,uv.y,-uv.x);case 2:return vec3(uv.x,uv.y,-1.0);case 3:return vec3(-uv.x,uv.y,1.0);case 4:return vec3(uv.y,-1.0,uv.x);default:return vec3(-uv.y,1.0,uv.x);}}vec2 dirToUV(const in vec3 dir){return vec2(0.5+0.5*atan(dir.z,dir.x)/M_PI,1.0-acos(dir.y)/M_PI);}vec3 panoramaToCubeMap(const in int face,const in vec2 texCoord){vec3 scan=uvToXYZ(face,texCoord);vec3 direction=normalize(scan);vec2 src=dirToUV(direction);return texture(x3d_PanoramaTexture,src).rgb;}void main(){x3d_FragColor=vec4(panoramaToCubeMap(x3d_CurrentFace,texCoord),1.0);}";a().add("Panorama2.fs","x_ite/Browser/CubeMapTexturing/Panorama2.fs",o);const u=o,d=Symbol();function h(){}Object.assign(h.prototype,{getPanoramaShader(){return this[d]?this[d]:this[d]=this.createShader("Panorama","FullScreen","data:x-shader/x-fragment,"+["",s,u][this.getContext().getVersion()],[],["x3d_PanoramaTexture","x3d_CurrentFace"])}});const c=h;a().add("X3DCubeMapTexturingContext","x_ite/Browser/CubeMapTexturing/X3DCubeMapTexturingContext",c);const p=c,x=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/Fields");var T=r.n(x);const g=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/Base/X3DFieldDefinition");var l=r.n(g);const m=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/Base/FieldDefinitionArray");var _=r.n(m);const f=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/Components/Texturing/X3DSingleTextureNode");var w=r.n(f);const b=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/Base/X3DConstants");var E=r.n(b);function v(e){w().call(this,e),this.addType(E().X3DEnvironmentTextureNode);const t=this.getBrowser().getContext();this.target=t.TEXTURE_CUBE_MAP,this.targets=[t.TEXTURE_CUBE_MAP_POSITIVE_Z,t.TEXTURE_CUBE_MAP_NEGATIVE_Z,t.TEXTURE_CUBE_MAP_NEGATIVE_X,t.TEXTURE_CUBE_MAP_POSITIVE_X,t.TEXTURE_CUBE_MAP_POSITIVE_Y,t.TEXTURE_CUBE_MAP_NEGATIVE_Y],this.size=1}Object.assign(Object.setPrototypeOf(v.prototype,w().prototype),{getTarget(){return this.target},getTextureType:()=>4,getTextureTypeString:()=>"CUBE",getTargets(){return this.targets},getSize(){return this.size},setSize(e){this.size=e},clearTexture:(()=>{const e=new Uint8Array([255,255,255,255]);return function(){const t=this.getBrowser().getContext();t.bindTexture(this.getTarget(),this.getTexture());for(const r of this.getTargets())t.texImage2D(r,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,e);this.setTransparent(!1)}})(),updateTextureParameters(){w().prototype.updateTextureParameters.call(this,this.target,this._textureProperties.getValue(),this.texturePropertiesNode,this.size,this.size,!1,!1,!1)},setShaderUniforms(e,t,r,i=t.x3d_Texture[0]){const a=this.getBrowser().getTextureCubeUnit();e.activeTexture(e.TEXTURE0+a),e.bindTexture(e.TEXTURE_CUBE_MAP,this.getTexture()),e.uniform1i(i.textureCube,a),e.uniformMatrix4fv(i.textureMatrix,!1,this.getMatrix())}}),Object.defineProperties(v,{typeName:{value:"X3DEnvironmentTextureNode",enumerable:!0},componentName:{value:"CubeMapTexturing",enumerable:!0}});const y=v;a().add("X3DEnvironmentTextureNode","x_ite/Components/CubeMapTexturing/X3DEnvironmentTextureNode",y);const M=y,C=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/Base/X3DCast");var R=r.n(C);const I=window[Symbol.for("X_ITE.X3D-9.0.0")].require("standard/Utility/BitSet");var S=r.n(I);function D(e){M.call(this,e),this.addType(E().ComposedCubeMapTexture),e.getSpecificationVersion()<4&&(this.addAlias("front",this._frontTexture),this.addAlias("back",this._backTexture),this.addAlias("left",this._leftTexture),this.addAlias("right",this._rightTexture),this.addAlias("top",this._topTexture),this.addAlias("bottom",this._bottomTexture)),this.addChildObjects(E().inputOutput,"update",new(T().SFTime)),this.textureNodes=[null,null,null,null,null,null],this.textureBits=new(S())}Object.assign(Object.setPrototypeOf(D.prototype,M.prototype),{initialize(){M.prototype.initialize.call(this);const e=this.getBrowser().getContext();this.frameBuffer=e.createFramebuffer(),this.clearTexture(),this._frontTexture.addInterest("set_texture__",this,0),this._backTexture.addInterest("set_texture__",this,1),this._leftTexture.addInterest("set_texture__",this,2),this._rightTexture.addInterest("set_texture__",this,3),this._topTexture.addInterest("set_texture__",this,5),this._bottomTexture.addInterest("set_texture__",this,4),this._update.addInterest("update",this),this.set_texture__(this._frontTexture,0),this.set_texture__(this._backTexture,1),this.set_texture__(this._leftTexture,2),this.set_texture__(this._rightTexture,3),this.set_texture__(this._topTexture,4),this.set_texture__(this._bottomTexture,5)},set_texture__(e,t){let r=this.textureNodes[t];r?.removeInterest("set_loadState__",this),r=this.textureNodes[t]=R()(E().X3DTexture2DNode,e),r?.addInterest("set_loadState__",this,r,t),this.set_loadState__(r,t)},set_loadState__(e,t){this.setTextureBit(t,e,e?.checkLoadState()??E().NOT_STARTED),this._update.addEvent()},setTextureBit(e,t,r){this.textureBits.set(e,r===E().COMPLETE_STATE||t?.getWidth())},isComplete(){if(63!=+this.textureBits)return!1;const e=this.textureNodes,t=e[0].getWidth();for(const r of e){if(r.getWidth()!==t)return!1;if(r.getHeight()!==t)return!1}return!0},update(){if(this.isComplete()){const e=this.getBrowser().getContext(),t=this.textureNodes,r=e.getParameter(e.FRAMEBUFFER_BINDING);e.bindFramebuffer(e.FRAMEBUFFER,this.frameBuffer);for(let r=0;r<6;++r){const i=t[r],a=i.getWidth(),n=i.getHeight();switch(this.setSize(a),i.getType().at(-1)){case E().ImageTexture:case E().MovieTexture:e.bindTexture(this.getTarget(),this.getTexture()),e.getVersion()>=2?e.texImage2D(this.getTargets()[r],0,e.RGBA,a,n,0,e.RGBA,e.UNSIGNED_BYTE,i.getElement()):e.texImage2D(this.getTargets()[r],0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,i.getElement());break;default:e.bindTexture(e.TEXTURE_2D,i.getTexture()),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i.getTexture(),0),e.bindTexture(this.getTarget(),this.getTexture()),e.texImage2D(this.getTargets()[r],0,e.RGBA,a,n,0,e.RGBA,e.UNSIGNED_BYTE,null),e.copyTexSubImage2D(this.getTargets()[r],0,0,0,0,0,a,n)}}e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!1),e.bindFramebuffer(e.FRAMEBUFFER,r),this.setTransparent(t.some((e=>e.isTransparent()))),this.updateTextureParameters()}else this.clearTexture()}}),Object.defineProperties(D,{typeName:{value:"ComposedCubeMapTexture",enumerable:!0},componentName:{value:"CubeMapTexturing",enumerable:!0},containerField:{value:"texture",enumerable:!0},specificationRange:{value:Object.freeze(["3.1","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(_())([new(l())(E().inputOutput,"metadata",new(T().SFNode)),new(l())(E().inputOutput,"description",new(T().SFString)),new(l())(E().inputOutput,"frontTexture",new(T().SFNode)),new(l())(E().inputOutput,"backTexture",new(T().SFNode)),new(l())(E().inputOutput,"leftTexture",new(T().SFNode)),new(l())(E().inputOutput,"rightTexture",new(T().SFNode)),new(l())(E().inputOutput,"topTexture",new(T().SFNode)),new(l())(E().inputOutput,"bottomTexture",new(T().SFNode)),new(l())(E().initializeOnly,"textureProperties",new(T().SFNode))]),enumerable:!0}});const X=D;a().add("ComposedCubeMapTexture","x_ite/Components/CubeMapTexturing/ComposedCubeMapTexture",X);const O=X,B=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/Base/X3DBaseNode");var N=r.n(B);const U=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/Rendering/X3DRenderObject");var A=r.n(U);const F=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/Rendering/TraverseType");var P=r.n(F);function z(e){N().call(this,e),A().call(this,e),this.renderObject=null}Object.assign(Object.setPrototypeOf(z.prototype,N().prototype),A().prototype,{initialize(){N().prototype.initialize.call(this),A().prototype.initialize.call(this)},isIndependent:()=>!1,setRenderer(e){this.renderObject=e},getLayer(){return this.renderObject.getLayer()},getBackground(){return this.renderObject.getBackground()},getFog(){return this.renderObject.getFog()},getNavigationInfo(){return this.renderObject.getNavigationInfo()},getViewpoint(){return this.renderObject.getViewpoint()},getLightContainer(){return this.renderObject.getLights()[this.lightIndex++]},render(e,t,r){switch(e){case P().COLLISION:case P().SHADOW:A().prototype.render.call(this,e,t,r);break;case P().DISPLAY:this.lightIndex=0,A().prototype.render.call(this,e,t,r);for(const e of this.renderObject.getLights())e.modelViewMatrix.pop()}}});for(const e of Object.keys(z.prototype))Object.defineProperty(z.prototype,e,{enumerable:!1});const L=z;a().add("DependentRenderer","x_ite/Rendering/DependentRenderer",L);const V=L,G=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/Rendering/TextureBuffer");var j=r.n(G);const q=window[Symbol.for("X_ITE.X3D-9.0.0")].require("standard/Math/Geometry/Camera");var k=r.n(q);const Y=window[Symbol.for("X_ITE.X3D-9.0.0")].require("standard/Math/Geometry/ViewVolume");var W=r.n(Y);const H=window[Symbol.for("X_ITE.X3D-9.0.0")].require("standard/Math/Numbers/Rotation4");var K=r.n(H);const Z=window[Symbol.for("X_ITE.X3D-9.0.0")].require("standard/Math/Numbers/Vector3");var $=r.n(Z);const J=window[Symbol.for("X_ITE.X3D-9.0.0")].require("standard/Math/Numbers/Vector4");var Q=r.n(J);const ee=window[Symbol.for("X_ITE.X3D-9.0.0")].require("standard/Math/Numbers/Matrix4");var te=r.n(ee);const re=window[Symbol.for("X_ITE.X3D-9.0.0")].require("standard/Math/Algorithm");var ie=r.n(re);function ae(e){M.call(this,e),this.addType(E().GeneratedCubeMapTexture),this.dependentRenderer=new V(e),this.projectionMatrix=new(te()),this.modelMatrix=new(te()),this.viewVolume=new(W())}Object.assign(Object.setPrototypeOf(ae.prototype,M.prototype),{initialize(){M.prototype.initialize.call(this),this._size.addInterest("set_size__",this),this.dependentRenderer.setup(),this.set_size__()},set_size__(){const e=this.getBrowser().getContext(),t=e.getVersion()>=2?this._size.getValue():ie().nextPowerOfTwo(this._size.getValue());if(t>0){const r=new Uint8Array(t*t*4);e.bindTexture(this.getTarget(),this.getTexture());for(const i of this.getTargets())e.texImage2D(i,0,e.RGBA,t,t,0,e.RGBA,e.UNSIGNED_BYTE,r);this.updateTextureParameters(),this.viewport=new(Q())(0,0,t,t),this.frameBuffer=new(j())(this.getBrowser(),t,t),this.setSize(t)}else this.frameBuffer=null,this.setSize(0)},traverse(e,t){"NONE"!==this._update.getValue()&&t.isIndependent()&&this.frameBuffer&&(t.getGeneratedCubeMapTextures().push(this),this.modelMatrix.assign(t.getModelViewMatrix().get()).multRight(t.getCameraSpaceMatrix().get()))},renderTexture:(()=>{const e=[new(K())($().zAxis,new($())(0,0,-1)),new(K())($().zAxis,new($())(0,0,1)),new(K())($().zAxis,new($())(1,0,0)),new(K())($().zAxis,new($())(-1,0,0)),new(K())($().zAxis,new($())(0,-1,0)),new(K())($().zAxis,new($())(0,1,0))],t=[new($())(-1,-1,1),new($())(-1,-1,1),new($())(-1,-1,1),new($())(-1,-1,1),new($())(1,1,1),new($())(1,1,1)],r=new(te());return function(i){this.dependentRenderer.setRenderer(i);const a=this.dependentRenderer,n=this.getBrowser(),s=i.getLayer(),o=n.getContext(),u=a.getBackground(),d=a.getNavigationInfo(),h=a.getViewpoint(),c=n.getHeadlight(),p=d._headlight.getValue(),x=d.getNearValue(),T=d.getFarValue(h),g=k().perspective(ie().radians(90),x,T,1,1,this.projectionMatrix),l=this.frameBuffer.getWidth(),m=this.frameBuffer.getHeight();this.setTransparent(u.isTransparent()),this.frameBuffer.bind(),a.getViewVolumes().push(this.viewVolume.set(g,this.viewport,this.viewport)),a.getProjectionMatrix().pushMatrix(g),o.bindTexture(this.getTarget(),this.getTexture());for(let i=0;i<6;++i)o.clear(o.COLOR_BUFFER_BIT),a.getCameraSpaceMatrix().pushMatrix(this.modelMatrix),a.getCameraSpaceMatrix().rotate(e[i]),a.getCameraSpaceMatrix().scale(t[i]),a.getViewMatrix().pushMatrix(r.assign(a.getCameraSpaceMatrix().get()).inverse()),a.getModelViewMatrix().pushMatrix(r),p&&(c.modelViewMatrix.pushMatrix(r),c.modelViewMatrix.multLeft(h.getCameraSpaceMatrix())),s.traverse(P().DISPLAY,a),p&&c.modelViewMatrix.pop(),a.getModelViewMatrix().pop(),a.getCameraSpaceMatrix().pop(),a.getViewMatrix().pop(),o.bindTexture(this.getTarget(),this.getTexture()),o.copyTexSubImage2D(this.getTargets()[i],0,0,0,0,0,l,m);this.updateTextureParameters(),a.getProjectionMatrix().pop(),a.getViewVolumes().pop(),this.frameBuffer.unbind(),"NEXT_FRAME_ONLY"===this._update.getValue()&&(this._update="NONE")}})(),setShaderUniforms:(()=>{const e=new Float32Array(16);return function(t,r,i,a){M.prototype.setShaderUniforms.call(this,t,r,i,a),i===this.dependentRenderer&&t.uniformMatrix4fv(r.x3d_ModelViewMatrix,!1,e)}})()}),Object.defineProperties(ae,{typeName:{value:"GeneratedCubeMapTexture",enumerable:!0},componentName:{value:"CubeMapTexturing",enumerable:!0},containerField:{value:"texture",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(_())([new(l())(E().inputOutput,"metadata",new(T().SFNode)),new(l())(E().inputOutput,"description",new(T().SFString)),new(l())(E().inputOutput,"update",new(T().SFString)("NONE")),new(l())(E().initializeOnly,"size",new(T().SFInt32)(128)),new(l())(E().initializeOnly,"textureProperties",new(T().SFNode))]),enumerable:!0}});const ne=ae;a().add("GeneratedCubeMapTexture","x_ite/Components/CubeMapTexturing/GeneratedCubeMapTexture",ne);const se=ne,oe=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/Components/Networking/X3DUrlObject");var ue=r.n(oe);const de=window[Symbol.for("X_ITE.X3D-9.0.0")].require("standard/Math/Numbers/Vector2");var he=r.n(de);const ce=window[Symbol.for("X_ITE.X3D-9.0.0")].require("x_ite/DEVELOPMENT");var pe=r.n(ce),xe=r(355);const Te=new Uint8Array([255,255,255,255]);function ge(e){M.call(this,e),ue().call(this,e),this.addType(E().ImageCubeMapTexture),this.image=xe("<img></img>"),this.canvas=xe("<canvas></canvas>"),this.urlStack=new(T().MFString)}Object.assign(Object.setPrototypeOf(ge.prototype,M.prototype),ue().prototype,{initialize(){M.prototype.initialize.call(this),ue().prototype.initialize.call(this);const e=this.getBrowser().getContext();e.bindTexture(this.getTarget(),this.getTexture());for(let t=0;t<6;++t)e.texImage2D(this.getTargets()[t],0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,Te);this.image.on("load",this.setImage.bind(this)),this.image.on("abort error",this.setError.bind(this)),this.image.prop("crossOrigin","Anonymous"),this.requestImmediateLoad().catch(Function.prototype)},unloadData(){this.clearTexture()},loadData(){this.urlStack.setValue(this._url),this.loadNext()},loadNext(){if(0===this.urlStack.length)return this.clearTexture(),void this.setLoadState(E().FAILED_STATE);this.URL=new URL(this.urlStack.shift(),this.getExecutionContext().getBaseURL()),"data:"!==this.URL.protocol&&(this.getCache()||this.URL.searchParams.set("_",Date.now())),this.URL.pathname.match(/\.ktx2?(?:\.gz)?$/)?this.getBrowser().getKTXDecoder().then((e=>e.loadKTXFromURL(this.URL))).then((e=>this.setKTXTexture(e))).catch((e=>this.setError({type:e.message}))):this.image.attr("src",this.URL.href)},setError(e){"data:"!==this.URL.protocol&&console.warn(`Error loading image '${decodeURI(this.URL.href)}'`,e.type),this.loadNext()},setKTXTexture(e){if(e.target!==this.getTarget())return this.setError({type:"Invalid KTX texture target, must be 'TEXTURE_CUBE_MAP'."});pe()&&"data:"!==this.URL.protocol&&console.info(`Done loading image cube map texture '${decodeURI(this.URL.href)}'`);try{this.setTexture(e),this.setTransparent(!1),this.setLevels(e.levels),this.setSize(e.baseWidth),this.setGenerateMipMaps(!1),this.updateTextureParameters(),this.setLoadState(E().COMPLETE_STATE)}catch(e){this.setError({type:e.message})}},setImage(){pe()&&"data:"!==this.URL.protocol&&console.info(`Done loading image cube map texture '${decodeURI(this.URL.href)}'`);try{const e=this.image.prop("width")/this.image.prop("height");Math.abs(e-4/3)<.01&&this.skyBoxToCubeMap(),Math.abs(e-2)<.01&&this.panoramaToCubeMap(),this.setGenerateMipMaps(!0),this.updateTextureParameters(),this.setLoadState(E().COMPLETE_STATE)}catch(e){this.setError({type:e.message})}},skyBoxToCubeMap:function(){const e=[new(he())(1,1),new(he())(3,1),new(he())(0,1),new(he())(2,1),new(he())(1,0),new(he())(1,2)];return function(){const t=this.image[0],r=this.canvas[0],i=r.getContext("2d",{willReadFrequently:!0});let a=t.width,n=t.height,s=Math.floor(a/4),o=Math.floor(n/3);ie().isPowerOfTwo(s)&&ie().isPowerOfTwo(o)&&4*s===a&&3*o===n?(r.width=a,r.height=n,i.drawImage(t,0,0)):(s=ie().nextPowerOfTwo(s),o=ie().nextPowerOfTwo(o),a=4*s,n=3*o,r.width=a,r.height=n,i.drawImage(t,0,0,t.width,t.height,0,0,a,n));const u=this.getBrowser().getContext();let d=!1;u.bindTexture(this.getTarget(),this.getTexture());for(let t=0;t<6;++t){const r=i.getImageData(e[t].x*s,e[t].y*o,s,o).data;d||(d=this.isImageTransparent(r)),u.texImage2D(this.getTargets()[t],0,u.RGBA,s,o,!1,u.RGBA,u.UNSIGNED_BYTE,new Uint8Array(r.buffer))}this.setTransparent(d),this.setSize(s)}}(),panoramaToCubeMap(){const e=this.getBrowser(),t=e.getContext(),r=e.getPanoramaShader(),i=t.createFramebuffer(),a=t.createTexture(),n=e.getTextureCubeUnit(),s=this.image.prop("height")/2;t.bindTexture(t.TEXTURE_2D,a),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,this.image[0]),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.MIRRORED_REPEAT),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.MIRRORED_REPEAT),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.bindTexture(this.getTarget(),this.getTexture());for(let e=0;e<6;++e)t.texImage2D(this.getTargets()[e],0,t.RGBA,s,s,0,t.RGBA,t.UNSIGNED_BYTE,null);t.useProgram(r.getProgram()),t.activeTexture(t.TEXTURE0+n),t.bindTexture(t.TEXTURE_2D,a),t.uniform1i(r.x3d_PanoramaTexture,n),t.bindFramebuffer(t.FRAMEBUFFER,i),t.viewport(0,0,s,s),t.disable(t.DEPTH_TEST),t.enable(t.CULL_FACE),t.frontFace(t.CCW),t.clearColor(0,0,0,0),t.bindVertexArray(e.getFullscreenVertexArrayObject());for(let e=0;e<6;++e)t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,this.getTargets()[e],this.getTexture(),0),t.clear(t.COLOR_BUFFER_BIT),t.uniform1i(r.x3d_CurrentFace,e),t.drawArrays(t.TRIANGLES,0,6);t.deleteFramebuffer(i),t.deleteTexture(a),e.resetTextureUnits();const o=this.image[0],u=this.canvas[0],d=u.getContext("2d",{willReadFrequently:!0});u.width=o.width,u.height=o.height,d.drawImage(o,0,0);const h=d.getImageData(0,0,o.width,o.height).data;this.setTransparent(this.isImageTransparent(h)),this.setSize(s)},dispose(){ue().prototype.dispose.call(this),M.prototype.dispose.call(this)}}),Object.defineProperties(ge,{typeName:{value:"ImageCubeMapTexture",enumerable:!0},componentName:{value:"CubeMapTexturing",enumerable:!0},containerField:{value:"texture",enumerable:!0},specificationRange:{value:Object.freeze(["3.0","Infinity"]),enumerable:!0},fieldDefinitions:{value:new(_())([new(l())(E().inputOutput,"metadata",new(T().SFNode)),new(l())(E().inputOutput,"description",new(T().SFString)),new(l())(E().inputOutput,"load",new(T().SFBool)(!0)),new(l())(E().inputOutput,"url",new(T().MFString)),new(l())(E().inputOutput,"autoRefresh",new(T().SFTime)),new(l())(E().inputOutput,"autoRefreshTimeLimit",new(T().SFTime)(3600)),new(l())(E().initializeOnly,"textureProperties",new(T().SFNode))]),enumerable:!0}});const le=ge;a().add("ImageCubeMapTexture","x_ite/Components/CubeMapTexturing/ImageCubeMapTexture",le);const me=le;t().add({name:"CubeMapTexturing",concreteNodes:[O,se,me],abstractNodes:[M],browserContext:p});const _e=void 0;a().add("CubeMapTexturing","assets/components/CubeMapTexturing",_e)})()})();