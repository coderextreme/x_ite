/* X_ITE v8.0.0 */(()=>{"use strict";var t={n:n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},d:(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},o:(t,n)=>Object.prototype.hasOwnProperty.call(t,n)};const n=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components");var e=t.n(n);const i=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Fields");var u=t.n(i);const o=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Base/X3DFieldDefinition");var p=t.n(o);const a=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Base/FieldDefinitionArray");var w=t.n(a);const r=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Core/X3DChildNode");var l=t.n(r);const S=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Base/X3DConstants");var F=t.n(S);function s(t){l().call(this,t),this.addType(F().DISEntityManager)}s.prototype=Object.assign(Object.create(l().prototype),{constructor:s,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(w())([new(p())(F().inputOutput,"metadata",new(u().SFNode)),new(p())(F().inputOutput,"address",new(u().SFString)("localhost")),new(p())(F().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(F().inputOutput,"mapping",new(u().MFNode)),new(p())(F().inputOutput,"port",new(u().SFInt32)),new(p())(F().inputOutput,"siteID",new(u().SFInt32)),new(p())(F().outputOnly,"addedEntities",new(u().MFNode)),new(p())(F().outputOnly,"removedEntities",new(u().MFNode))]),getTypeName:function(){return"DISEntityManager"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"}});const c=s,O=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Core/X3DInfoNode");var d=t.n(O);const y=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Networking/X3DUrlObject");var I=t.n(y);function m(t){d().call(this,t),I().call(this,t),this.addType(F().DISEntityTypeMapping)}m.prototype=Object.assign(Object.create(d().prototype),I().prototype,{constructor:m,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(w())([new(p())(F().inputOutput,"metadata",new(u().SFNode)),new(p())(F().inputOutput,"load",new(u().SFBool)(!0)),new(p())(F().inputOutput,"url",new(u().MFString)),new(p())(F().inputOutput,"autoRefresh",new(u().SFTime)),new(p())(F().inputOutput,"autoRefreshTimeLimit",new(u().SFTime)(3600)),new(p())(F().initializeOnly,"category",new(u().SFInt32)),new(p())(F().initializeOnly,"country",new(u().SFInt32)),new(p())(F().initializeOnly,"domain",new(u().SFInt32)),new(p())(F().initializeOnly,"extra",new(u().SFInt32)),new(p())(F().initializeOnly,"kind",new(u().SFInt32)),new(p())(F().initializeOnly,"specific",new(u().SFInt32)),new(p())(F().initializeOnly,"subcategory",new(u().SFInt32))]),getTypeName:function(){return"DISEntityTypeMapping"},getComponentName:function(){return"DIS"},getContainerField:function(){return"mapping"},initialize:function(){d().prototype.initialize.call(this),I().prototype.initialize.call(this)},requestImmediateLoad:function(t=!0){},requestUnload:function(){},set_load__:function(){},set_url__:function(){},dispose:function(){I().prototype.dispose.call(this),d().prototype.dispose.call(this)}});const f=m,D=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Grouping/X3DGroupingNode");var g=t.n(D);const h=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Core/X3DSensorNode");var b=t.n(h);function T(t){g().call(this,t),b().call(this,t),this.addType(F().EspduTransform)}T.prototype=Object.assign(Object.create(g().prototype),b().prototype,{constructor:T,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(w())([new(p())(F().inputOutput,"metadata",new(u().SFNode)),new(p())(F().inputOutput,"enabled",new(u().SFBool)(!0)),new(p())(F().inputOutput,"visible",new(u().SFBool)(!0)),new(p())(F().inputOutput,"bboxDisplay",new(u().SFBool)),new(p())(F().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(p())(F().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(p())(F().inputOnly,"addChildren",new(u().MFNode)),new(p())(F().inputOnly,"removeChildren",new(u().MFNode)),new(p())(F().inputOutput,"children",new(u().MFNode)),new(p())(F().outputOnly,"isActive",new(u().SFBool)),new(p())(F().inputOnly,"set_articulationParameterValue0",new(u().SFFloat)),new(p())(F().inputOnly,"set_articulationParameterValue1",new(u().SFFloat)),new(p())(F().inputOnly,"set_articulationParameterValue2",new(u().SFFloat)),new(p())(F().inputOnly,"set_articulationParameterValue3",new(u().SFFloat)),new(p())(F().inputOnly,"set_articulationParameterValue4",new(u().SFFloat)),new(p())(F().inputOnly,"set_articulationParameterValue5",new(u().SFFloat)),new(p())(F().inputOnly,"set_articulationParameterValue6",new(u().SFFloat)),new(p())(F().inputOnly,"set_articulationParameterValue7",new(u().SFFloat)),new(p())(F().inputOutput,"address",new(u().SFString)("localhost")),new(p())(F().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(F().inputOutput,"articulationParameterCount",new(u().SFInt32)),new(p())(F().inputOutput,"articulationParameterDesignatorArray",new(u().MFInt32)),new(p())(F().inputOutput,"articulationParameterChangeIndicatorArray",new(u().MFInt32)),new(p())(F().inputOutput,"articulationParameterIdPartAttachedToArray",new(u().MFInt32)),new(p())(F().inputOutput,"articulationParameterTypeArray",new(u().MFInt32)),new(p())(F().inputOutput,"articulationParameterArray",new(u().MFFloat)),new(p())(F().inputOutput,"center",new(u().SFVec3f)),new(p())(F().inputOutput,"collisionType",new(u().SFInt32)),new(p())(F().inputOutput,"deadReckoning",new(u().SFInt32)),new(p())(F().inputOutput,"detonationLocation",new(u().SFVec3f)),new(p())(F().inputOutput,"detonationRelativeLocation",new(u().SFVec3f)),new(p())(F().inputOutput,"detonationResult",new(u().SFInt32)),new(p())(F().inputOutput,"entityCategory",new(u().SFInt32)),new(p())(F().inputOutput,"entityCountry",new(u().SFInt32)),new(p())(F().inputOutput,"entityDomain",new(u().SFInt32)),new(p())(F().inputOutput,"entityExtra",new(u().SFInt32)),new(p())(F().inputOutput,"entityID",new(u().SFInt32)),new(p())(F().inputOutput,"entityKind",new(u().SFInt32)),new(p())(F().inputOutput,"entitySpecific",new(u().SFInt32)),new(p())(F().inputOutput,"entitySubCategory",new(u().SFInt32)),new(p())(F().inputOutput,"eventApplicationID",new(u().SFInt32)(1)),new(p())(F().inputOutput,"eventEntityID",new(u().SFInt32)),new(p())(F().inputOutput,"eventNumber",new(u().SFInt32)),new(p())(F().inputOutput,"eventSiteID",new(u().SFInt32)),new(p())(F().inputOutput,"fired1",new(u().SFBool)),new(p())(F().inputOutput,"fired2",new(u().SFBool)),new(p())(F().inputOutput,"fireMissionIndex",new(u().SFInt32)),new(p())(F().inputOutput,"firingRange",new(u().SFFloat)),new(p())(F().inputOutput,"firingRate",new(u().SFInt32)),new(p())(F().inputOutput,"forceID",new(u().SFInt32)),new(p())(F().inputOutput,"fuse",new(u().SFInt32)),new(p())(F().inputOutput,"linearVelocity",new(u().SFVec3f)),new(p())(F().inputOutput,"linearAcceleration",new(u().SFVec3f)),new(p())(F().inputOutput,"marking",new(u().SFString)),new(p())(F().inputOutput,"multicastRelayHost",new(u().SFString)),new(p())(F().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(p())(F().inputOutput,"munitionApplicationID",new(u().SFInt32)(1)),new(p())(F().inputOutput,"munitionEndPoint",new(u().SFVec3f)),new(p())(F().inputOutput,"munitionEntityID",new(u().SFInt32)),new(p())(F().inputOutput,"munitionQuantity",new(u().SFInt32)),new(p())(F().inputOutput,"munitionSiteID",new(u().SFInt32)),new(p())(F().inputOutput,"munitionStartPoint",new(u().SFVec3f)),new(p())(F().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(p())(F().inputOutput,"port",new(u().SFInt32)),new(p())(F().inputOutput,"readInterval",new(u().SFTime)(.1)),new(p())(F().inputOutput,"rotation",new(u().SFRotation)),new(p())(F().inputOutput,"scale",new(u().SFVec3f)(1,1,1)),new(p())(F().inputOutput,"scaleOrientation",new(u().SFRotation)),new(p())(F().inputOutput,"siteID",new(u().SFInt32)),new(p())(F().inputOutput,"translation",new(u().SFVec3f)),new(p())(F().inputOutput,"warhead",new(u().SFInt32)),new(p())(F().inputOutput,"writeInterval",new(u().SFTime)(1)),new(p())(F().outputOnly,"articulationParameterValue0_changed",new(u().SFFloat)),new(p())(F().outputOnly,"articulationParameterValue1_changed",new(u().SFFloat)),new(p())(F().outputOnly,"articulationParameterValue2_changed",new(u().SFFloat)),new(p())(F().outputOnly,"articulationParameterValue3_changed",new(u().SFFloat)),new(p())(F().outputOnly,"articulationParameterValue4_changed",new(u().SFFloat)),new(p())(F().outputOnly,"articulationParameterValue5_changed",new(u().SFFloat)),new(p())(F().outputOnly,"articulationParameterValue6_changed",new(u().SFFloat)),new(p())(F().outputOnly,"articulationParameterValue7_changed",new(u().SFFloat)),new(p())(F().outputOnly,"collideTime",new(u().SFTime)),new(p())(F().outputOnly,"detonateTime",new(u().SFTime)),new(p())(F().outputOnly,"firedTime",new(u().SFTime)),new(p())(F().outputOnly,"isCollided",new(u().SFBool)),new(p())(F().outputOnly,"isDetonated",new(u().SFBool)),new(p())(F().outputOnly,"isNetworkReader",new(u().SFBool)),new(p())(F().outputOnly,"isNetworkWriter",new(u().SFBool)),new(p())(F().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(p())(F().outputOnly,"isStandAlone",new(u().SFBool)),new(p())(F().outputOnly,"timestamp",new(u().SFTime)),new(p())(F().initializeOnly,"rtpHeaderExpected",new(u().SFBool))]),getTypeName:function(){return"EspduTransform"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"},initialize:function(){g().prototype.initialize.call(this),b().prototype.initialize.call(this)}});const B=T,_=window[Symbol.for("X_ITE.X3D-8.0.0")].require("x_ite/Components/Grouping/X3DBoundedObject");var N=t.n(_);function P(t){b().call(this,t),N().call(this,t),this.addType(F().ReceiverPdu)}P.prototype=Object.assign(Object.create(b().prototype),N().prototype,{constructor:P,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(w())([new(p())(F().inputOutput,"metadata",new(u().SFNode)),new(p())(F().inputOutput,"visible",new(u().SFBool)(!0)),new(p())(F().inputOutput,"bboxDisplay",new(u().SFBool)),new(p())(F().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(p())(F().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(p())(F().inputOutput,"enabled",new(u().SFBool)(!0)),new(p())(F().outputOnly,"isActive",new(u().SFBool)),new(p())(F().inputOutput,"address",new(u().SFString)("localhost")),new(p())(F().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(F().inputOutput,"entityID",new(u().SFInt32)),new(p())(F().inputOutput,"multicastRelayHost",new(u().SFString)),new(p())(F().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(p())(F().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(p())(F().inputOutput,"port",new(u().SFInt32)),new(p())(F().inputOutput,"radioID",new(u().SFInt32)),new(p())(F().inputOutput,"readInterval",new(u().SFFloat)(.1)),new(p())(F().inputOutput,"receivedPower",new(u().SFFloat)),new(p())(F().inputOutput,"receiverState",new(u().SFInt32)),new(p())(F().inputOutput,"rtpHeaderExpected",new(u().SFBool)),new(p())(F().inputOutput,"siteID",new(u().SFInt32)),new(p())(F().inputOutput,"transmitterApplicationID",new(u().SFInt32)(1)),new(p())(F().inputOutput,"transmitterEntityID",new(u().SFInt32)),new(p())(F().inputOutput,"transmitterRadioID",new(u().SFInt32)),new(p())(F().inputOutput,"transmitterSiteID",new(u().SFInt32)),new(p())(F().inputOutput,"whichGeometry",new(u().SFInt32)(1)),new(p())(F().inputOutput,"writeInterval",new(u().SFFloat)(1)),new(p())(F().outputOnly,"isNetworkReader",new(u().SFBool)),new(p())(F().outputOnly,"isNetworkWriter",new(u().SFBool)),new(p())(F().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(p())(F().outputOnly,"isStandAlone",new(u().SFBool)),new(p())(F().outputOnly,"timestamp",new(u().SFTime))]),getTypeName:function(){return"ReceiverPdu"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"},initialize:function(){b().prototype.initialize.call(this),N().prototype.initialize.call(this)},dispose:function(){N().prototype.dispose.call(this),b().prototype.dispose.call(this)}});const v=P;function E(t){b().call(this,t),N().call(this,t),this.addType(F().SignalPdu)}E.prototype=Object.assign(Object.create(b().prototype),N().prototype,{constructor:E,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(w())([new(p())(F().inputOutput,"metadata",new(u().SFNode)),new(p())(F().inputOutput,"visible",new(u().SFBool)(!0)),new(p())(F().inputOutput,"bboxDisplay",new(u().SFBool)),new(p())(F().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(p())(F().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(p())(F().inputOutput,"enabled",new(u().SFBool)(!0)),new(p())(F().outputOnly,"isActive",new(u().SFBool)),new(p())(F().inputOutput,"address",new(u().SFString)("localhost")),new(p())(F().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(F().inputOutput,"data",new(u().MFInt32)),new(p())(F().inputOutput,"dataLength",new(u().SFInt32)),new(p())(F().inputOutput,"encodingScheme",new(u().SFInt32)),new(p())(F().inputOutput,"entityID",new(u().SFInt32)),new(p())(F().inputOutput,"multicastRelayHost",new(u().SFString)),new(p())(F().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(p())(F().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(p())(F().inputOutput,"port",new(u().SFInt32)),new(p())(F().inputOutput,"radioID",new(u().SFInt32)),new(p())(F().inputOutput,"readInterval",new(u().SFFloat)(.1)),new(p())(F().inputOutput,"rtpHeaderExpected",new(u().SFBool)),new(p())(F().inputOutput,"sampleRate",new(u().SFInt32)),new(p())(F().inputOutput,"samples",new(u().SFInt32)),new(p())(F().inputOutput,"siteID",new(u().SFInt32)),new(p())(F().inputOutput,"tdlType",new(u().SFInt32)),new(p())(F().inputOutput,"whichGeometry",new(u().SFInt32)(1)),new(p())(F().inputOutput,"writeInterval",new(u().SFFloat)(1)),new(p())(F().outputOnly,"isNetworkReader",new(u().SFBool)),new(p())(F().outputOnly,"isNetworkWriter",new(u().SFBool)),new(p())(F().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(p())(F().outputOnly,"isStandAlone",new(u().SFBool)),new(p())(F().outputOnly,"timestamp",new(u().SFTime))]),getTypeName:function(){return"SignalPdu"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"},initialize:function(){b().prototype.initialize.call(this),N().prototype.initialize.call(this)},dispose:function(){N().prototype.dispose.call(this),b().prototype.dispose.call(this)}});const X=E;function C(t){b().call(this,t),N().call(this,t),this.addType(F().TransmitterPdu)}C.prototype=Object.assign(Object.create(b().prototype),N().prototype,{constructor:C,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(w())([new(p())(F().inputOutput,"metadata",new(u().SFNode)),new(p())(F().inputOutput,"visible",new(u().SFBool)(!0)),new(p())(F().inputOutput,"bboxDisplay",new(u().SFBool)),new(p())(F().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(p())(F().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(p())(F().inputOutput,"enabled",new(u().SFBool)(!0)),new(p())(F().outputOnly,"isActive",new(u().SFBool)),new(p())(F().inputOutput,"address",new(u().SFString)("localhost")),new(p())(F().inputOutput,"antennaLocation",new(u().SFVec3f)),new(p())(F().inputOutput,"antennaPatternLength",new(u().SFInt32)),new(p())(F().inputOutput,"antennaPatternType",new(u().SFInt32)),new(p())(F().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(F().inputOutput,"cryptoKeyID",new(u().SFInt32)),new(p())(F().inputOutput,"cryptoSystem",new(u().SFInt32)),new(p())(F().inputOutput,"entityID",new(u().SFInt32)),new(p())(F().inputOutput,"frequency",new(u().SFInt32)),new(p())(F().inputOutput,"inputSource",new(u().SFInt32)),new(p())(F().inputOutput,"lengthOfModulationParameters",new(u().SFInt32)),new(p())(F().inputOutput,"modulationTypeDetail",new(u().SFInt32)),new(p())(F().inputOutput,"modulationTypeMajor",new(u().SFInt32)),new(p())(F().inputOutput,"modulationTypeSpreadSpectrum",new(u().SFInt32)),new(p())(F().inputOutput,"modulationTypeSystem",new(u().SFInt32)),new(p())(F().inputOutput,"multicastRelayHost",new(u().SFString)),new(p())(F().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(p())(F().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(p())(F().inputOutput,"port",new(u().SFInt32)),new(p())(F().inputOutput,"power",new(u().SFFloat)),new(p())(F().inputOutput,"radioEntityTypeCategory",new(u().SFInt32)),new(p())(F().inputOutput,"radioEntityTypeCountry",new(u().SFInt32)),new(p())(F().inputOutput,"radioEntityTypeDomain",new(u().SFInt32)),new(p())(F().inputOutput,"radioEntityTypeKind",new(u().SFInt32)),new(p())(F().inputOutput,"radioEntityTypeNomenclature",new(u().SFInt32)),new(p())(F().inputOutput,"radioEntityTypeNomenclatureVersion",new(u().SFInt32)),new(p())(F().inputOutput,"radioID",new(u().SFInt32)),new(p())(F().inputOutput,"readInterval",new(u().SFFloat)(.1)),new(p())(F().inputOutput,"relativeAntennaLocation",new(u().SFVec3f)),new(p())(F().inputOutput,"rtpHeaderExpected",new(u().SFBool)),new(p())(F().inputOutput,"siteID",new(u().SFInt32)),new(p())(F().inputOutput,"transmitFrequencyBandwidth",new(u().SFFloat)),new(p())(F().inputOutput,"transmitState",new(u().SFInt32)),new(p())(F().inputOutput,"whichGeometry",new(u().SFInt32)(1)),new(p())(F().inputOutput,"writeInterval",new(u().SFFloat)(1)),new(p())(F().outputOnly,"isNetworkReader",new(u().SFBool)),new(p())(F().outputOnly,"isNetworkWriter",new(u().SFBool)),new(p())(F().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(p())(F().outputOnly,"isStandAlone",new(u().SFBool)),new(p())(F().outputOnly,"timestamp",new(u().SFTime))]),getTypeName:function(){return"TransmitterPdu"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"},initialize:function(){b().prototype.initialize.call(this),N().prototype.initialize.call(this)},dispose:function(){N().prototype.dispose.call(this),b().prototype.dispose.call(this)}});const V=C;e().addComponent({name:"DIS",types:{DISEntityManager:c,DISEntityTypeMapping:f,EspduTransform:B,ReceiverPdu:v,SignalPdu:X,TransmitterPdu:V},abstractTypes:{}})})();