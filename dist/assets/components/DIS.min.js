/* X_ITE v8.7.8 */(()=>{"use strict";var t={n:n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},d:(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},o:(t,n)=>Object.prototype.hasOwnProperty.call(t,n)};const n=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Components");var e=t.n(n);const i=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Fields");var u=t.n(i);const o=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Base/X3DFieldDefinition");var p=t.n(o);const a=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Base/FieldDefinitionArray");var w=t.n(a);const r=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Components/Core/X3DChildNode");var l=t.n(r);const S=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Base/X3DConstants");var c=t.n(S);const s=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Namespace");var F=t.n(s);function O(t){l().call(this,t),this.addType(c().DISEntityManager),t.getSpecificationVersion()<4&&this.addAlias("mapping",this._children)}O.prototype=Object.assign(Object.create(l().prototype),{constructor:O,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(w())([new(p())(c().inputOutput,"metadata",new(u().SFNode)),new(p())(c().inputOutput,"address",new(u().SFString)("localhost")),new(p())(c().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(c().inputOutput,"children",new(u().MFNode)),new(p())(c().inputOutput,"port",new(u().SFInt32)),new(p())(c().inputOutput,"siteID",new(u().SFInt32)),new(p())(c().outputOnly,"addedEntities",new(u().MFNode)),new(p())(c().outputOnly,"removedEntities",new(u().MFNode))]),getTypeName:function(){return"DISEntityManager"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"},getSpecificationRange:function(){return["3.0","Infinity"]}});const d=O;F().set("x_ite/Components/DIS/DISEntityManager",d);const y=d,I=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Components/Core/X3DInfoNode");var m=t.n(I);const f=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Components/Networking/X3DUrlObject");var g=t.n(f);function D(t){m().call(this,t),g().call(this,t),this.addType(c().DISEntityTypeMapping)}D.prototype=Object.assign(Object.create(m().prototype),g().prototype,{constructor:D,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(w())([new(p())(c().inputOutput,"metadata",new(u().SFNode)),new(p())(c().inputOutput,"load",new(u().SFBool)(!0)),new(p())(c().inputOutput,"url",new(u().MFString)),new(p())(c().inputOutput,"autoRefresh",new(u().SFTime)),new(p())(c().inputOutput,"autoRefreshTimeLimit",new(u().SFTime)(3600)),new(p())(c().initializeOnly,"category",new(u().SFInt32)),new(p())(c().initializeOnly,"country",new(u().SFInt32)),new(p())(c().initializeOnly,"domain",new(u().SFInt32)),new(p())(c().initializeOnly,"extra",new(u().SFInt32)),new(p())(c().initializeOnly,"kind",new(u().SFInt32)),new(p())(c().initializeOnly,"specific",new(u().SFInt32)),new(p())(c().initializeOnly,"subcategory",new(u().SFInt32))]),getTypeName:function(){return"DISEntityTypeMapping"},getComponentName:function(){return"DIS"},getContainerField:function(){return"mapping"},getSpecificationRange:function(){return["3.0","Infinity"]},initialize:function(){m().prototype.initialize.call(this),g().prototype.initialize.call(this)},dispose:function(){g().prototype.dispose.call(this),m().prototype.dispose.call(this)}});const h=D;F().set("x_ite/Components/DIS/DISEntityTypeMapping",h);const T=h,b=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Components/Grouping/X3DGroupingNode");var _=t.n(b);const B=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Components/Core/X3DSensorNode");var N=t.n(B);function E(t){_().call(this,t),N().call(this,t),this.addType(c().EspduTransform)}E.prototype=Object.assign(Object.create(_().prototype),N().prototype,{constructor:E,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(w())([new(p())(c().inputOutput,"metadata",new(u().SFNode)),new(p())(c().inputOutput,"enabled",new(u().SFBool)(!0)),new(p())(c().inputOutput,"visible",new(u().SFBool)(!0)),new(p())(c().inputOutput,"bboxDisplay",new(u().SFBool)),new(p())(c().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(p())(c().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(p())(c().inputOnly,"addChildren",new(u().MFNode)),new(p())(c().inputOnly,"removeChildren",new(u().MFNode)),new(p())(c().inputOutput,"children",new(u().MFNode)),new(p())(c().outputOnly,"isActive",new(u().SFBool)),new(p())(c().inputOnly,"set_articulationParameterValue0",new(u().SFFloat)),new(p())(c().inputOnly,"set_articulationParameterValue1",new(u().SFFloat)),new(p())(c().inputOnly,"set_articulationParameterValue2",new(u().SFFloat)),new(p())(c().inputOnly,"set_articulationParameterValue3",new(u().SFFloat)),new(p())(c().inputOnly,"set_articulationParameterValue4",new(u().SFFloat)),new(p())(c().inputOnly,"set_articulationParameterValue5",new(u().SFFloat)),new(p())(c().inputOnly,"set_articulationParameterValue6",new(u().SFFloat)),new(p())(c().inputOnly,"set_articulationParameterValue7",new(u().SFFloat)),new(p())(c().inputOutput,"address",new(u().SFString)("localhost")),new(p())(c().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(c().inputOutput,"articulationParameterCount",new(u().SFInt32)),new(p())(c().inputOutput,"articulationParameterDesignatorArray",new(u().MFInt32)),new(p())(c().inputOutput,"articulationParameterChangeIndicatorArray",new(u().MFInt32)),new(p())(c().inputOutput,"articulationParameterIdPartAttachedToArray",new(u().MFInt32)),new(p())(c().inputOutput,"articulationParameterTypeArray",new(u().MFInt32)),new(p())(c().inputOutput,"articulationParameterArray",new(u().MFFloat)),new(p())(c().inputOutput,"center",new(u().SFVec3f)),new(p())(c().inputOutput,"collisionType",new(u().SFInt32)),new(p())(c().inputOutput,"deadReckoning",new(u().SFInt32)),new(p())(c().inputOutput,"detonationLocation",new(u().SFVec3f)),new(p())(c().inputOutput,"detonationRelativeLocation",new(u().SFVec3f)),new(p())(c().inputOutput,"detonationResult",new(u().SFInt32)),new(p())(c().inputOutput,"entityCategory",new(u().SFInt32)),new(p())(c().inputOutput,"entityCountry",new(u().SFInt32)),new(p())(c().inputOutput,"entityDomain",new(u().SFInt32)),new(p())(c().inputOutput,"entityExtra",new(u().SFInt32)),new(p())(c().inputOutput,"entityID",new(u().SFInt32)),new(p())(c().inputOutput,"entityKind",new(u().SFInt32)),new(p())(c().inputOutput,"entitySpecific",new(u().SFInt32)),new(p())(c().inputOutput,"entitySubCategory",new(u().SFInt32)),new(p())(c().inputOutput,"eventApplicationID",new(u().SFInt32)(1)),new(p())(c().inputOutput,"eventEntityID",new(u().SFInt32)),new(p())(c().inputOutput,"eventNumber",new(u().SFInt32)),new(p())(c().inputOutput,"eventSiteID",new(u().SFInt32)),new(p())(c().inputOutput,"fired1",new(u().SFBool)),new(p())(c().inputOutput,"fired2",new(u().SFBool)),new(p())(c().inputOutput,"fireMissionIndex",new(u().SFInt32)),new(p())(c().inputOutput,"firingRange",new(u().SFFloat)),new(p())(c().inputOutput,"firingRate",new(u().SFInt32)),new(p())(c().inputOutput,"forceID",new(u().SFInt32)),new(p())(c().inputOutput,"fuse",new(u().SFInt32)),new(p())(c().inputOutput,"linearVelocity",new(u().SFVec3f)),new(p())(c().inputOutput,"linearAcceleration",new(u().SFVec3f)),new(p())(c().inputOutput,"marking",new(u().SFString)),new(p())(c().inputOutput,"multicastRelayHost",new(u().SFString)),new(p())(c().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(p())(c().inputOutput,"munitionApplicationID",new(u().SFInt32)(1)),new(p())(c().inputOutput,"munitionEndPoint",new(u().SFVec3f)),new(p())(c().inputOutput,"munitionEntityID",new(u().SFInt32)),new(p())(c().inputOutput,"munitionQuantity",new(u().SFInt32)),new(p())(c().inputOutput,"munitionSiteID",new(u().SFInt32)),new(p())(c().inputOutput,"munitionStartPoint",new(u().SFVec3f)),new(p())(c().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(p())(c().inputOutput,"port",new(u().SFInt32)),new(p())(c().inputOutput,"readInterval",new(u().SFTime)(.1)),new(p())(c().inputOutput,"rotation",new(u().SFRotation)),new(p())(c().inputOutput,"scale",new(u().SFVec3f)(1,1,1)),new(p())(c().inputOutput,"scaleOrientation",new(u().SFRotation)),new(p())(c().inputOutput,"siteID",new(u().SFInt32)),new(p())(c().inputOutput,"translation",new(u().SFVec3f)),new(p())(c().inputOutput,"warhead",new(u().SFInt32)),new(p())(c().inputOutput,"writeInterval",new(u().SFTime)(1)),new(p())(c().outputOnly,"articulationParameterValue0_changed",new(u().SFFloat)),new(p())(c().outputOnly,"articulationParameterValue1_changed",new(u().SFFloat)),new(p())(c().outputOnly,"articulationParameterValue2_changed",new(u().SFFloat)),new(p())(c().outputOnly,"articulationParameterValue3_changed",new(u().SFFloat)),new(p())(c().outputOnly,"articulationParameterValue4_changed",new(u().SFFloat)),new(p())(c().outputOnly,"articulationParameterValue5_changed",new(u().SFFloat)),new(p())(c().outputOnly,"articulationParameterValue6_changed",new(u().SFFloat)),new(p())(c().outputOnly,"articulationParameterValue7_changed",new(u().SFFloat)),new(p())(c().outputOnly,"collideTime",new(u().SFTime)),new(p())(c().outputOnly,"detonateTime",new(u().SFTime)),new(p())(c().outputOnly,"firedTime",new(u().SFTime)),new(p())(c().outputOnly,"isCollided",new(u().SFBool)),new(p())(c().outputOnly,"isDetonated",new(u().SFBool)),new(p())(c().outputOnly,"isNetworkReader",new(u().SFBool)),new(p())(c().outputOnly,"isNetworkWriter",new(u().SFBool)),new(p())(c().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(p())(c().outputOnly,"isStandAlone",new(u().SFBool)),new(p())(c().outputOnly,"timestamp",new(u().SFTime)),new(p())(c().initializeOnly,"rtpHeaderExpected",new(u().SFBool))]),getTypeName:function(){return"EspduTransform"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"},getSpecificationRange:function(){return["3.0","Infinity"]},initialize:function(){_().prototype.initialize.call(this),N().prototype.initialize.call(this)}});const P=E;F().set("x_ite/Components/DIS/EspduTransform",P);const v=P,C=window[Symbol.for("X_ITE.X3D-8.7.8")].require("x_ite/Components/Grouping/X3DBoundedObject");var X=t.n(C);function V(t){N().call(this,t),X().call(this,t),this.addType(c().ReceiverPdu)}V.prototype=Object.assign(Object.create(N().prototype),X().prototype,{constructor:V,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(w())([new(p())(c().inputOutput,"metadata",new(u().SFNode)),new(p())(c().inputOutput,"visible",new(u().SFBool)(!0)),new(p())(c().inputOutput,"bboxDisplay",new(u().SFBool)),new(p())(c().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(p())(c().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(p())(c().inputOutput,"enabled",new(u().SFBool)(!0)),new(p())(c().outputOnly,"isActive",new(u().SFBool)),new(p())(c().inputOutput,"address",new(u().SFString)("localhost")),new(p())(c().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(c().inputOutput,"entityID",new(u().SFInt32)),new(p())(c().inputOutput,"multicastRelayHost",new(u().SFString)),new(p())(c().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(p())(c().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(p())(c().inputOutput,"port",new(u().SFInt32)),new(p())(c().inputOutput,"radioID",new(u().SFInt32)),new(p())(c().inputOutput,"readInterval",new(u().SFFloat)(.1)),new(p())(c().inputOutput,"receivedPower",new(u().SFFloat)),new(p())(c().inputOutput,"receiverState",new(u().SFInt32)),new(p())(c().inputOutput,"rtpHeaderExpected",new(u().SFBool)),new(p())(c().inputOutput,"siteID",new(u().SFInt32)),new(p())(c().inputOutput,"transmitterApplicationID",new(u().SFInt32)(1)),new(p())(c().inputOutput,"transmitterEntityID",new(u().SFInt32)),new(p())(c().inputOutput,"transmitterRadioID",new(u().SFInt32)),new(p())(c().inputOutput,"transmitterSiteID",new(u().SFInt32)),new(p())(c().inputOutput,"whichGeometry",new(u().SFInt32)(1)),new(p())(c().inputOutput,"writeInterval",new(u().SFFloat)(1)),new(p())(c().outputOnly,"isNetworkReader",new(u().SFBool)),new(p())(c().outputOnly,"isNetworkWriter",new(u().SFBool)),new(p())(c().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(p())(c().outputOnly,"isStandAlone",new(u().SFBool)),new(p())(c().outputOnly,"timestamp",new(u().SFTime))]),getTypeName:function(){return"ReceiverPdu"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"},getSpecificationRange:function(){return["3.0","Infinity"]},initialize:function(){N().prototype.initialize.call(this),X().prototype.initialize.call(this)},dispose:function(){X().prototype.dispose.call(this),N().prototype.dispose.call(this)}});const x=V;F().set("x_ite/Components/DIS/ReceiverPdu",x);const R=x;function z(t){N().call(this,t),X().call(this,t),this.addType(c().SignalPdu)}z.prototype=Object.assign(Object.create(N().prototype),X().prototype,{constructor:z,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(w())([new(p())(c().inputOutput,"metadata",new(u().SFNode)),new(p())(c().inputOutput,"visible",new(u().SFBool)(!0)),new(p())(c().inputOutput,"bboxDisplay",new(u().SFBool)),new(p())(c().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(p())(c().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(p())(c().inputOutput,"enabled",new(u().SFBool)(!0)),new(p())(c().outputOnly,"isActive",new(u().SFBool)),new(p())(c().inputOutput,"address",new(u().SFString)("localhost")),new(p())(c().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(c().inputOutput,"data",new(u().MFInt32)),new(p())(c().inputOutput,"dataLength",new(u().SFInt32)),new(p())(c().inputOutput,"encodingScheme",new(u().SFInt32)),new(p())(c().inputOutput,"entityID",new(u().SFInt32)),new(p())(c().inputOutput,"multicastRelayHost",new(u().SFString)),new(p())(c().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(p())(c().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(p())(c().inputOutput,"port",new(u().SFInt32)),new(p())(c().inputOutput,"radioID",new(u().SFInt32)),new(p())(c().inputOutput,"readInterval",new(u().SFFloat)(.1)),new(p())(c().inputOutput,"rtpHeaderExpected",new(u().SFBool)),new(p())(c().inputOutput,"sampleRate",new(u().SFInt32)),new(p())(c().inputOutput,"samples",new(u().SFInt32)),new(p())(c().inputOutput,"siteID",new(u().SFInt32)),new(p())(c().inputOutput,"tdlType",new(u().SFInt32)),new(p())(c().inputOutput,"whichGeometry",new(u().SFInt32)(1)),new(p())(c().inputOutput,"writeInterval",new(u().SFFloat)(1)),new(p())(c().outputOnly,"isNetworkReader",new(u().SFBool)),new(p())(c().outputOnly,"isNetworkWriter",new(u().SFBool)),new(p())(c().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(p())(c().outputOnly,"isStandAlone",new(u().SFBool)),new(p())(c().outputOnly,"timestamp",new(u().SFTime))]),getTypeName:function(){return"SignalPdu"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"},getSpecificationRange:function(){return["3.0","Infinity"]},initialize:function(){N().prototype.initialize.call(this),X().prototype.initialize.call(this)},dispose:function(){X().prototype.dispose.call(this),N().prototype.dispose.call(this)}});const M=z;F().set("x_ite/Components/DIS/SignalPdu",M);const A=M;function j(t){N().call(this,t),X().call(this,t),this.addType(c().TransmitterPdu)}j.prototype=Object.assign(Object.create(N().prototype),X().prototype,{constructor:j,[Symbol.for("X_ITE.X3DBaseNode.fieldDefinitions")]:new(w())([new(p())(c().inputOutput,"metadata",new(u().SFNode)),new(p())(c().inputOutput,"visible",new(u().SFBool)(!0)),new(p())(c().inputOutput,"bboxDisplay",new(u().SFBool)),new(p())(c().initializeOnly,"bboxSize",new(u().SFVec3f)(-1,-1,-1)),new(p())(c().initializeOnly,"bboxCenter",new(u().SFVec3f)),new(p())(c().inputOutput,"enabled",new(u().SFBool)(!0)),new(p())(c().outputOnly,"isActive",new(u().SFBool)),new(p())(c().inputOutput,"address",new(u().SFString)("localhost")),new(p())(c().inputOutput,"antennaLocation",new(u().SFVec3f)),new(p())(c().inputOutput,"antennaPatternLength",new(u().SFInt32)),new(p())(c().inputOutput,"antennaPatternType",new(u().SFInt32)),new(p())(c().inputOutput,"applicationID",new(u().SFInt32)(1)),new(p())(c().inputOutput,"cryptoKeyID",new(u().SFInt32)),new(p())(c().inputOutput,"cryptoSystem",new(u().SFInt32)),new(p())(c().inputOutput,"entityID",new(u().SFInt32)),new(p())(c().inputOutput,"frequency",new(u().SFInt32)),new(p())(c().inputOutput,"inputSource",new(u().SFInt32)),new(p())(c().inputOutput,"lengthOfModulationParameters",new(u().SFInt32)),new(p())(c().inputOutput,"modulationTypeDetail",new(u().SFInt32)),new(p())(c().inputOutput,"modulationTypeMajor",new(u().SFInt32)),new(p())(c().inputOutput,"modulationTypeSpreadSpectrum",new(u().SFInt32)),new(p())(c().inputOutput,"modulationTypeSystem",new(u().SFInt32)),new(p())(c().inputOutput,"multicastRelayHost",new(u().SFString)),new(p())(c().inputOutput,"multicastRelayPort",new(u().SFInt32)),new(p())(c().inputOutput,"networkMode",new(u().SFString)("standAlone")),new(p())(c().inputOutput,"port",new(u().SFInt32)),new(p())(c().inputOutput,"power",new(u().SFFloat)),new(p())(c().inputOutput,"radioEntityTypeCategory",new(u().SFInt32)),new(p())(c().inputOutput,"radioEntityTypeCountry",new(u().SFInt32)),new(p())(c().inputOutput,"radioEntityTypeDomain",new(u().SFInt32)),new(p())(c().inputOutput,"radioEntityTypeKind",new(u().SFInt32)),new(p())(c().inputOutput,"radioEntityTypeNomenclature",new(u().SFInt32)),new(p())(c().inputOutput,"radioEntityTypeNomenclatureVersion",new(u().SFInt32)),new(p())(c().inputOutput,"radioID",new(u().SFInt32)),new(p())(c().inputOutput,"readInterval",new(u().SFFloat)(.1)),new(p())(c().inputOutput,"relativeAntennaLocation",new(u().SFVec3f)),new(p())(c().inputOutput,"rtpHeaderExpected",new(u().SFBool)),new(p())(c().inputOutput,"siteID",new(u().SFInt32)),new(p())(c().inputOutput,"transmitFrequencyBandwidth",new(u().SFFloat)),new(p())(c().inputOutput,"transmitState",new(u().SFInt32)),new(p())(c().inputOutput,"whichGeometry",new(u().SFInt32)(1)),new(p())(c().inputOutput,"writeInterval",new(u().SFFloat)(1)),new(p())(c().outputOnly,"isNetworkReader",new(u().SFBool)),new(p())(c().outputOnly,"isNetworkWriter",new(u().SFBool)),new(p())(c().outputOnly,"isRtpHeaderHeard",new(u().SFBool)),new(p())(c().outputOnly,"isStandAlone",new(u().SFBool)),new(p())(c().outputOnly,"timestamp",new(u().SFTime))]),getTypeName:function(){return"TransmitterPdu"},getComponentName:function(){return"DIS"},getContainerField:function(){return"children"},getSpecificationRange:function(){return["3.0","Infinity"]},initialize:function(){N().prototype.initialize.call(this),X().prototype.initialize.call(this)},dispose:function(){X().prototype.dispose.call(this),N().prototype.dispose.call(this)}});const k=j;F().set("x_ite/Components/DIS/TransmitterPdu",k);const H=k;e().add({name:"DIS",concreteNodes:{DISEntityManager:y,DISEntityTypeMapping:T,EspduTransform:v,ReceiverPdu:R,SignalPdu:A,TransmitterPdu:H},abstractNodes:{}});const q=void 0;F().set("assets/components/DIS",q)})();