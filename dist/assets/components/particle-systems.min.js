!function(){const e=X3D.define,t=X3D.require;e("x_ite/Components/ParticleSystems/X3DParticleEmitterNode",["x_ite/Components/Core/X3DNode","x_ite/Base/X3DConstants","standard/Math/Numbers/Vector3","standard/Math/Numbers/Rotation4","standard/Math/Geometry/Line3","standard/Math/Geometry/Plane3","standard/Math/Algorithm","standard/Math/Algorithms/QuickSort"],function(e,t,i,s,r,n,o,a){"use strict";function l(e,t){return f.getDistanceToPoint(e)<f.getDistanceToPoint(t)}function h(e,t){return e<f.getDistanceToPoint(t)}function d(i){e.call(this,i),this.addType(t.X3DParticleEmitterNode),this.speed_.setUnit("speed"),this.mass_.setUnit("mass"),this.surfaceArea_.setUnit("area"),this.rotations=[],this.intersections=[],this.intersectionNormals=[],this.sorter=new a(this.intersections,l)}var c=new i(0,0,0),u=new i(0,0,0),m=new r(i.Zero,i.zAxis),f=new n(i.Zero,i.zAxis);return d.prototype=Object.assign(Object.create(e.prototype),{constructor:d,initialize:function(){e.prototype.initialize.call(this),this.speed_.addInterest("set_speed__",this),this.variation_.addInterest("set_variation__",this),this.mass_.addInterest("set_mass__",this),this.set_speed__(),this.set_variation__(),this.set_mass__()},set_speed__:function(){this.speed=this.speed_.getValue()},set_variation__:function(){this.variation=this.variation_.getValue()},set_mass__:function(){this.mass=this.mass_.getValue()},isExplosive:function(){return!1},getMass:function(){return this.mass},getRandomLifetime:function(e,t){var i=e*t,s=Math.max(0,e-i),r=e+i;return Math.random()*(r-s)+s},getRandomSpeed:function(){var e=this.speed,t=e*this.variation,i=Math.max(0,e-t),s=e+t;return Math.random()*(s-i)+i},getSphericalRandomVelocity:function(e){return this.getRandomNormal(e).multiply(this.getRandomSpeed())},getRandomValue:function(e,t){return Math.random()*(t-e)+e},getRandomNormal:function(e){var t=this.getRandomValue(-1,1)*Math.PI,i=this.getRandomValue(-1,1),s=Math.acos(i),r=Math.sin(s);return e.set(Math.sin(t)*r,Math.cos(t)*r,i)},getRandomNormalWithAngle:function(e,t){var i=(2*Math.random()-1)*Math.PI,s=this.getRandomValue(Math.cos(e),1),r=Math.acos(s),n=Math.sin(r);return t.set(Math.sin(i)*n,Math.cos(i)*n,s)},getRandomNormalWithDirectionAndAngle:function(e,t,s){return rotation.setFromToVec(i.zAxis,e),rotation.multVecRot(this.getRandomNormalWithAngle(t,s))},getRandomSurfaceNormal:function(e){var t=this.getRandomValue(-1,1)*Math.PI,i=Math.pow(Math.random(),1/3),s=Math.acos(i),r=Math.sin(s);return e.set(Math.sin(t)*r,Math.cos(t)*r,i)},animate:function(e,t){for(var r=e.particles,n=e.numParticles,o=e.createParticles,a=e.particleLifetime,l=e.lifetimeVariation,h=e.speeds,d=e.velocities,m=e.turbulences,f=this.rotations,p=e.numForces,_=e.boundedVertices.length,y=e.boundedVolume,g=f.length;g<p;++g)f[g]=new s(0,0,1,0);for(var g=0;g<p;++g)f[g].setFromToVec(i.zAxis,d[g]);for(var g=0;g<n;++g){var x=r[g],A=x.elapsedTime+t;if(A>x.lifetime)x.lifetime=this.getRandomLifetime(a,l),x.elapsedTime=0,o?(++x.life,this.getRandomPosition(x.position),this.getRandomVelocity(x.velocity)):x.position.set(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY);else{for(var F=x.position,w=x.velocity,R=0;R<p;++R)w.add(f[R].multVecRot(this.getRandomNormalWithAngle(m[R],c)).multiply(h[R]));_?(u.x=F.x,u.y=F.y,u.z=F.z,F.x+=w.x*t,F.y+=w.y*t,F.z+=w.z*t,this.bounce(y,u,F,w)):(F.x+=w.x*t,F.y+=w.y*t,F.z+=w.z*t),x.elapsedTime=A}}e.geometryContext.colorMaterial&&this.getColors(r,e.colorKeys,e.colorRamp,n)},bounce:function(e,t,i,s){c.assign(s).normalize(),m.set(t,c);var r=this.intersections,n=this.intersectionNormals,a=e.intersectsLine(m,r,n);if(a){for(var l=0;l<a;++l)r[l].index=l;f.set(t,c),this.sorter.sort(0,a);var d=o.upperBound(r,0,a,0,h);if(d<a){var u=r[d],p=n[u.index];if(f.set(u,p),f.getDistanceToPoint(t)*f.getDistanceToPoint(i)<0){var _=2*p.dot(s);s.x-=p.x*_,s.y-=p.y*_,s.z-=p.z*_,c.assign(s).normalize();var y=u.distance(t);i.x=u.x+c.x*y,i.y=u.y+c.y*y,i.z=u.z+c.z*y}}}},getColors:function(e,t,i,s){for(var r=t.length,n=0,a=0,l=0,h=0;h<s;++h){var d=e[h],c=d.elapsedTime/d.lifetime,u=d.color;if(1==r||c<=t[0])n=0,a=0,l=0;else if(c>=t[r-1])n=r-2,a=r-1,l=1;else{var m=o.upperBound(t,0,r,c,o.less);if(m<r){a=m,n=m-1;var f=t[n],p=t[a];l=o.clamp((c-f)/(p-f),0,1)}else n=0,a=0,l=0}var _=i[n],y=i[a];u.x=_.x+l*(y.x-_.x),u.y=_.y+l*(y.y-_.y),u.z=_.z+l*(y.z-_.z),u.w=_.w+l*(y.w-_.w)}}}),d}),e("x_ite/Components/ParticleSystems/PointEmitter",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Base/X3DConstants","standard/Math/Numbers/Vector3"],function(e,t,i,s,r,n){"use strict";function o(e){s.call(this,e),this.addType(r.PointEmitter),this.position_.setUnit("length"),this.speed_.setUnit("speed"),this.mass_.setUnit("mass"),this.surfaceArea_.setUnit("area"),this.direction=new n(0,0,0)}return o.prototype=Object.assign(Object.create(s.prototype),{constructor:o,[Symbol.for("X3DBaseNode.fieldDefinitions")]:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"position",new e.SFVec3f),new t(r.inputOutput,"direction",new e.SFVec3f(0,1,0)),new t(r.inputOutput,"speed",new e.SFFloat),new t(r.inputOutput,"variation",new e.SFFloat(.25)),new t(r.initializeOnly,"mass",new e.SFFloat),new t(r.initializeOnly,"surfaceArea",new e.SFFloat)]),getTypeName:function(){return"PointEmitter"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"emitter"},initialize:function(){s.prototype.initialize.call(this),this.position_.addInterest("set_position__",this),this.direction_.addInterest("set_direction__",this),this.set_position__(),this.set_direction__()},set_position__:function(){this.position=this.position_.getValue()},set_direction__:function(){this.direction.assign(this.direction_.getValue()).normalize(),this.direction.equals(n.Zero)?this.getRandomVelocity=this.getSphericalRandomVelocity:delete this.getRandomVelocity},getRandomPosition:function(e){return e.assign(this.position)},getRandomVelocity:function(e){var t=this.direction,i=this.getRandomSpeed();return e.x=t.x*i,e.y=t.y*i,e.z=t.z*i,e}}),o}),e("x_ite/Browser/ParticleSystems/X3DParticleSystemsContext",["x_ite/Components/ParticleSystems/PointEmitter"],function(e){"use strict";function t(){}const i=Symbol();return t.prototype={getDefaultEmitter:function(){return this[i]=new e(this.getPrivateScene()),this[i].setup(),this.getDefaultEmitter=function(){return this[i]},Object.defineProperty(this,"getDefaultEmitter",{enumerable:!1}),v,this[i]}},t}),e("x_ite/Components/ParticleSystems/X3DParticlePhysicsModelNode",["x_ite/Components/Core/X3DNode","x_ite/Base/X3DConstants"],function(e,t){"use strict";function i(i){e.call(this,i),this.addType(t.X3DParticlePhysicsModelNode)}return i.prototype=Object.assign(Object.create(e.prototype),{constructor:i,addForce:function(){}}),i}),e("x_ite/Components/ParticleSystems/BoundedPhysicsModel",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticlePhysicsModelNode","x_ite/Base/X3DConstants","x_ite/Base/X3DCast"],function(e,t,i,s,r,n){"use strict";function o(e){s.call(this,e),this.addType(r.BoundedPhysicsModel)}return o.prototype=Object.assign(Object.create(s.prototype),{constructor:o,[Symbol.for("X3DBaseNode.fieldDefinitions")]:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"enabled",new e.SFBool(!0)),new t(r.inputOutput,"geometry",new e.SFNode)]),getTypeName:function(){return"BoundedPhysicsModel"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"physics"},initialize:function(){s.prototype.initialize.call(this),this.geometry_.addInterest("set_geometry__",this),this.set_geometry__()},set_geometry__:function(){this.geometryNode&&this.geometryNode.rebuild_.removeInterest("addNodeEvent",this),this.geometryNode=n(r.X3DGeometryNode,this.geometry_),this.geometryNode&&this.geometryNode.rebuild_.addInterest("addNodeEvent",this)},addGeometry:function(e,t){if(this.geometryNode){for(var i=this.geometryNode.getNormals().getValue(),s=this.geometryNode.getVertices().getValue(),r=0,n=i.length;r<n;++r)e.push(i[r]);for(var r=0,n=s.length;r<n;++r)t.push(s[r])}}}),o}),e("x_ite/Components/ParticleSystems/ConeEmitter",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Base/X3DConstants","standard/Math/Numbers/Vector3","standard/Math/Numbers/Rotation4"],function(e,t,i,s,r,n,o){"use strict";function a(e){s.call(this,e),this.addType(r.ConeEmitter),this.position_.setUnit("length"),this.angle_.setUnit("angle"),this.speed_.setUnit("speed"),this.mass_.setUnit("mass"),this.surfaceArea_.setUnit("area"),this.rotation=new o(0,0,1,0)}return a.prototype=Object.assign(Object.create(s.prototype),{constructor:a,[Symbol.for("X3DBaseNode.fieldDefinitions")]:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"position",new e.SFVec3f),new t(r.inputOutput,"direction",new e.SFVec3f(0,1,0)),new t(r.inputOutput,"angle",new e.SFFloat(.7854)),new t(r.inputOutput,"speed",new e.SFFloat),new t(r.inputOutput,"variation",new e.SFFloat(.25)),new t(r.initializeOnly,"mass",new e.SFFloat),new t(r.initializeOnly,"surfaceArea",new e.SFFloat)]),getTypeName:function(){return"ConeEmitter"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"emitter"},initialize:function(){s.prototype.initialize.call(this),this.position_.addInterest("set_position__",this),this.direction_.addInterest("set_direction__",this),this.angle_.addInterest("set_angle__",this),this.set_position__(),this.set_direction__(),this.set_angle__()},set_position__:function(){this.position=this.position_.getValue()},set_direction__:function(){var e=this.direction_.getValue();this.rotation.setFromToVec(n.zAxis,e),e.equals(n.Zero)?this.getRandomVelocity=this.getSphericalRandomVelocity:delete this.getRandomVelocity},set_angle__:function(){this.angle=this.angle_.getValue()},getRandomPosition:function(e){return e.assign(this.position)},getRandomVelocity:function(e){return this.rotation.multVecRot(this.getRandomNormalWithAngle(this.angle,e).multiply(this.getRandomSpeed()))}}),a}),e("x_ite/Components/ParticleSystems/ExplosionEmitter",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Base/X3DConstants"],function(e,t,i,s,r){"use strict";function n(e){s.call(this,e),this.addType(r.ExplosionEmitter),this.position_.setUnit("length"),this.speed_.setUnit("speed"),this.mass_.setUnit("mass"),this.surfaceArea_.setUnit("area"),this.getRandomVelocity=this.getSphericalRandomVelocity}return n.prototype=Object.assign(Object.create(s.prototype),{constructor:n,[Symbol.for("X3DBaseNode.fieldDefinitions")]:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"position",new e.SFVec3f),new t(r.inputOutput,"speed",new e.SFFloat),new t(r.inputOutput,"variation",new e.SFFloat(.25)),new t(r.initializeOnly,"mass",new e.SFFloat),new t(r.initializeOnly,"surfaceArea",new e.SFFloat)]),getTypeName:function(){return"ExplosionEmitter"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"emitter"},initialize:function(){s.prototype.initialize.call(this),this.position_.addInterest("set_position__",this),this.set_position__()},set_position__:function(){this.position=this.position_.getValue()},isExplosive:function(){return!0},getRandomPosition:function(e){return e.assign(this.position)}}),n}),e("x_ite/Components/ParticleSystems/ForcePhysicsModel",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticlePhysicsModelNode","x_ite/Base/X3DConstants"],function(e,t,i,s,r){"use strict";function n(e){s.call(this,e),this.addType(r.ForcePhysicsModel),this.force_.setUnit("force")}return n.prototype=Object.assign(Object.create(s.prototype),{constructor:n,[Symbol.for("X3DBaseNode.fieldDefinitions")]:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"enabled",new e.SFBool(!0)),new t(r.inputOutput,"force",new e.SFVec3f(0,-9.8,0))]),getTypeName:function(){return"ForcePhysicsModel"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"physics"},addForce:function(e,t,i,s){this.enabled_.getValue()&&(i[e].assign(this.force_.getValue()),s[e]=0)}}),n}),e("standard/Math/Utility/BVH",["standard/Math/Numbers/Vector3","standard/Math/Geometry/Plane3","standard/Math/Algorithms/QuickSort"],function(e,t,i){"use strict";function s(e,t){function i(e,s){const r=i.vertices;return t=i.axis,Math.min(r[e+t],r[e+4+t],r[e+8+t])<Math.min(r[s+t],r[s+4+t],r[s+8+t])}return i.vertices=e,i.axis=t,i}function r(e,t){this.vertices=e.vertices,this.normals=e.normals,this.i4=12*t,this.i3=9*t}function n(i,s,o,d){this.min=new e(0,0,0),this.max=new e(0,0,0),this.planes=[],this.intersection=new e(0,0,0);const u=i.vertices,m=this.min,f=this.max,p=o+d;let _=12*s[o];m.set(u[_],u[_+1],u[_+2]),f.assign(m);for(let e=o;e<p;++e)_=12*s[e],a.set(u[_],u[_+1],u[_+2]),l.set(u[_+4],u[_+5],u[_+6]),h.set(u[_+8],u[_+9],u[_+10]),m.min(a,l,h),f.max(a,l,h);for(let e=0;e<5;++e)this.planes[e]=new t(e%2?m:f,c[e]);if(d>2){i.sorter.compare.axis=this.getLongestAxis(m,f),i.sorter.sort(o,p);var y=d>>>1}else var y=1;const g=d-y;this.left=y>1?new n(i,s,o,y):new r(i,s[o]),this.right=g>1?new n(i,s,o+y,g):new r(i,s[o+y])}function o(e,t){this.vertices=e,this.normals=t;const o=e.length/12;switch(o){case 0:this.root=null;break;case 1:this.root=new r(this,0);break;default:{const t=[];for(let e=0;e<o;++e)t.push(e);this.sorter=new i(t,s(e,0)),this.root=new n(this,t,0,o);break}}}const a=new e(0,0,0),l=new e(0,0,0),h=new e(0,0,0),d={u:0,v:0,t:0},c=[new e(0,0,1),new e(0,0,-1),new e(0,1,0),new e(0,-1,0),new e(1,0,0)];return r.prototype={intersectsLine:function(t,i,s){const r=this.vertices,n=this.normals,o=this.i4,c=this.i3;if(a.x=r[o],a.y=r[o+1],a.z=r[o+2],l.x=r[o+4],l.y=r[o+5],l.z=r[o+6],h.x=r[o+8],h.y=r[o+9],h.z=r[o+10],t.intersectsTriangle(a,l,h,d)){const t=d.u,a=d.v,l=1-t-a,h=i.size++;h>=i.length&&i.push(new e(0,0,0)),i[h].set(l*r[o]+t*r[o+4]+a*r[o+8],l*r[o+1]+t*r[o+5]+a*r[o+9],l*r[o+2]+t*r[o+6]+a*r[o+10]),s&&(h>=s.length&&s.push(new e(0,0,0)),s[h].set(l*n[c]+t*n[c+3]+a*n[c+6],l*n[c+1]+t*n[c+4]+a*n[c+7],l*n[c+2]+t*n[c+5]+a*n[c+8]))}}},n.prototype={intersectsLine:function(e,t,i){this.intersectsBBox(e)&&(this.left.intersectsLine(e,t,i),this.right.intersectsLine(e,t,i))},intersectsBBox:function(e){const t=this.planes,i=this.min,s=this.max,r=i.x,n=s.x,o=i.y,a=s.y,l=i.z,h=s.z,d=this.intersection;return!!(t[0].intersectsLine(e,d)&&d.x>=r&&d.x<=n&&d.y>=o&&d.y<=a)||(!!(t[1].intersectsLine(e,d)&&d.x>=r&&d.x<=n&&d.y>=o&&d.y<=a)||(!!(t[2].intersectsLine(e,d)&&d.x>=r&&d.x<=n&&d.z>=l&&d.z<=h)||(!!(t[3].intersectsLine(e,d)&&d.x>=r&&d.x<=n&&d.z>=l&&d.z<=h)||!!(t[4].intersectsLine(e,d)&&d.y>=o&&d.y<=a&&d.z>=l&&d.z<=h))))},getLongestAxis:function(e,t){const i=t.x-e.x,s=t.y-e.y,r=t.z-e.z;return i<s?s<r?2:1:i<r?2:0}},o.prototype={constructor:o,intersectsLine:function(e,t,i){return t.size=0,this.root?(this.root.intersectsLine(e,t,i),t.size):0}},o}),e("x_ite/Components/ParticleSystems/ParticleSystem",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/Shape/X3DShapeNode","x_ite/Rendering/TraverseType","x_ite/Base/X3DConstants","x_ite/Base/X3DCast","x_ite/Browser/Shape/AlphaMode","standard/Math/Numbers/Vector3","standard/Math/Numbers/Vector4","standard/Math/Numbers/Matrix4","standard/Math/Numbers/Matrix3","standard/Math/Algorithms/QuickSort","standard/Math/Algorithm","standard/Math/Utility/BVH"],function(e,t,i,s,r,n,o,a,l,h,d,c,u,m,f){"use strict";function p(e,t){return e.distance<t.distance}function _(e){s.call(this,e),this.addType(n.ParticleSystem),this.particleSize_.setUnit("length"),this.createParticles=!0,this.particles=[],this.velocities=[],this.speeds=[],this.turbulences=[],this.geometryType=g,this.maxParticles=0,this.numParticles=0,this.particleLifetime=0,this.lifetimeVariation=0,this.emitterNode=null,this.forcePhysicsModelNodes=[],this.boundedPhysicsModelNodes=[],this.boundedNormals=[],this.boundedVertices=[],this.boundedVolume=null,this.creationTime=0,this.pauseTime=0,this.deltaTime=0,this.numForces=0,this.colorKeys=[],this.colorRamppNode=null,this.colorRamp=[],this.texCoordKeys=[],this.texCoordRampNode=null,this.texCoordRamp=[],this.texCoordAnim=!1,this.vertexCount=0,this.shaderNode=null,this.rotation=new c,this.particleSorter=new u(this.particles,p),this.sortParticles=!1,this.geometryContext={}}var y=0;const g=y++,x=y++,A=y++,F=y++,w=y++,R=y++,b={POINT:g,LINE:x,TRIANGLE:A,QUAD:F,GEOMETRY:w,SPRITE:R},P=new d,v=new l(0,0,0),S=new l(0,0,0),B=new l(0,0,0),N=new l(0,0,0),C=new l(0,0,0),T=new l(0,0,0),D=new l(0,0,0),V=new l(0,0,0),M=new l(0,0,0),I=new l(0,0,0);return _.prototype=Object.assign(Object.create(s.prototype),{constructor:_,[Symbol.for("X3DBaseNode.fieldDefinitions")]:new i([new t(n.inputOutput,"metadata",new e.SFNode),new t(n.inputOutput,"enabled",new e.SFBool(!0)),new t(n.inputOutput,"createParticles",new e.SFBool(!0)),new t(n.initializeOnly,"geometryType",new e.SFString("QUAD")),new t(n.inputOutput,"maxParticles",new e.SFInt32(200)),new t(n.inputOutput,"particleLifetime",new e.SFFloat(5)),new t(n.inputOutput,"lifetimeVariation",new e.SFFloat(.25)),new t(n.inputOutput,"particleSize",new e.SFVec2f(.02,.02)),new t(n.initializeOnly,"emitter",new e.SFNode),new t(n.initializeOnly,"physics",new e.MFNode),new t(n.initializeOnly,"colorKey",new e.MFFloat),new t(n.initializeOnly,"colorRamp",new e.SFNode),new t(n.initializeOnly,"texCoordKey",new e.MFFloat),new t(n.initializeOnly,"texCoordRamp",new e.SFNode),new t(n.outputOnly,"isActive",new e.SFBool),new t(n.inputOutput,"visible",new e.SFBool(!0)),new t(n.inputOutput,"castShadow",new e.SFBool(!0)),new t(n.inputOutput,"bboxDisplay",new e.SFBool),new t(n.initializeOnly,"bboxSize",new e.SFVec3f(-1,-1,-1)),new t(n.initializeOnly,"bboxCenter",new e.SFVec3f),new t(n.inputOutput,"appearance",new e.SFNode),new t(n.inputOutput,"geometry",new e.SFNode)]),getTypeName:function(){return"ParticleSystem"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"children"},initialize:function(){s.prototype.initialize.call(this);const e=this.getBrowser(),t=e.getContext();this.isLive().addInterest("set_live__",this),e.getBrowserOptions().Shading_.addInterest("set_shader__",this),this.enabled_.addInterest("set_enabled__",this),this.createParticles_.addInterest("set_createParticles__",this),this.geometryType_.addInterest("set_geometryType__",this),this.maxParticles_.addInterest("set_enabled__",this),this.particleLifetime_.addInterest("set_particleLifetime__",this),this.lifetimeVariation_.addInterest("set_lifetimeVariation__",this),this.emitter_.addInterest("set_emitter__",this),this.physics_.addInterest("set_physics__",this),this.colorKey_.addInterest("set_color__",this),this.colorRamp_.addInterest("set_colorRamp__",this),this.texCoordKey_.addInterest("set_texCoord__",this),this.texCoordRamp_.addInterest("set_texCoordRamp__",this),this.idBuffer=t.createBuffer(),this.positionBuffer=t.createBuffer(),this.elapsedTimeBuffer=t.createBuffer(),this.lifeBuffer=t.createBuffer(),this.colorBuffer=t.createBuffer(),this.texCoordBuffers=[t.createBuffer()],this.normalBuffer=t.createBuffer(),this.vertexBuffer=t.createBuffer();for(var i=1,r=this.getBrowser().getMaxTextures();i<r;++i)this.texCoordBuffers.push(this.texCoordBuffers[0]);this.idArray=new Float32Array,this.positionArray=new Float32Array,this.elapsedTimeArray=new Float32Array,this.lifeArray=new Float32Array,this.colorArray=new Float32Array,this.texCoordArray=new Float32Array,this.normalArray=new Float32Array,this.vertexArray=new Float32Array,this.primitiveMode=t.TRIANGLES,this.geometryContext.fogCoords=!1,this.geometryContext.textureCoordinateNode=e.getDefaultTextureCoordinate(),this.set_emitter__(),this.set_enabled__(),this.set_createParticles__(),this.set_particleLifetime__(),this.set_lifetimeVariation__(),this.set_physics__(),this.set_colorRamp__(),this.set_texCoordRamp__()},set_bbox__:function(){this.bboxSize_.getValue().equals(this.getDefaultBBoxSize())?this.bbox.set():this.bbox.set(this.bboxSize_.getValue(),this.bboxCenter_.getValue()),this.bboxSize.assign(this.bbox.size),this.bboxCenter.assign(this.bbox.center)},set_transparent__:function(){if(this.getAppearance().getAlphaMode()===a.AUTO)switch(this.geometryType){case g:this.setTransparent(!0);break;default:this.setTransparent(this.getAppearance().getTransparent()||this.colorRampNode&&this.colorRampNode.getTransparent()||this.geometryType===w&&this.geometryNode&&this.geometryNode.getTransparent())}else this.setTransparent(this.getAppearance().getTransparent())},set_live__:function(){this.isLive().getValue()?this.isActive_.getValue()&&this.maxParticles_.getValue()&&(this.getBrowser().sensorEvents().addInterest("animateParticles",this),this.pauseTime&&(this.creationTime+=performance.now()/1e3-this.pauseTime,this.pauseTime=0)):this.isActive_.getValue()&&this.maxParticles_.getValue()&&(this.getBrowser().sensorEvents().removeInterest("animateParticles",this),0===this.pauseTime&&(this.pauseTime=performance.now()/1e3))},set_enabled__:function(){this.enabled_.getValue()&&this.maxParticles_.getValue()?this.isActive_.getValue()||(this.isLive().getValue()?(this.getBrowser().sensorEvents().addInterest("animateParticles",this),this.pauseTime=0):this.pauseTime=performance.now()/1e3,this.isActive_=!0):this.isActive_.getValue()&&(this.isLive().getValue()&&this.getBrowser().sensorEvents().removeInterest("animateParticles",this),this.isActive_=!1,this.numParticles=0),this.set_maxParticles__()},set_createParticles__:function(){this.createParticles=this.createParticles_.getValue()},set_geometryType__:function(){var e=this.getBrowser().getContext(),t=this.maxParticles;switch(this.geometryType=b[this.geometryType_.getValue()],this.geometryType||(this.geometryType=g),this.geometryType){case g:this.idArray=new Float32Array(t),this.positionArray=new Float32Array(3*t),this.elapsedTimeArray=new Float32Array(t),this.lifeArray=new Float32Array(t),this.colorArray=new Float32Array(4*t),this.texCoordArray=new Float32Array,this.normalArray=new Float32Array,this.vertexArray=new Float32Array(4*t);for(var i=0,s=this.idArray,r=s.length;i<r;++i)s[i]=i;this.colorArray.fill(1),this.vertexArray.fill(1),this.testWireframe=!1,this.primitiveMode=e.POINTS,this.texCoordCount=0,this.vertexCount=1,this.geometryContext.geometryType=0;break;case x:this.idArray=new Float32Array(2*t),this.positionArray=new Float32Array(6*t),this.elapsedTimeArray=new Float32Array(2*t),this.lifeArray=new Float32Array(2*t),this.colorArray=new Float32Array(8*t),this.texCoordArray=new Float32Array,this.normalArray=new Float32Array,this.vertexArray=new Float32Array(8*t);for(var i=0,s=this.idArray,r=s.length;i<r;++i)s[i]=Math.floor(i/2);this.colorArray.fill(1),this.vertexArray.fill(1),this.testWireframe=!1,this.primitiveMode=e.LINES,this.texCoordCount=2,this.vertexCount=2,this.geometryContext.geometryType=1;break;case A:case F:case R:this.idArray=new Float32Array(6*t),this.positionArray=new Float32Array(18*t),this.elapsedTimeArray=new Float32Array(6*t),this.lifeArray=new Float32Array(6*t),this.colorArray=new Float32Array(24*t),this.texCoordArray=new Float32Array(24*t),this.normalArray=new Float32Array(18*t),this.vertexArray=new Float32Array(24*t);for(var i=0,s=this.idArray,r=s.length;i<r;++i)s[i]=Math.floor(i/6);this.colorArray.fill(1),this.vertexArray.fill(1);for(var n=this.texCoordArray,o=this.normalArray,i=0,a=18*t;i<a;i+=3)o[i]=0,o[i+1]=0,o[i+2]=1;e.bindBuffer(e.ARRAY_BUFFER,this.normalBuffer),e.bufferData(e.ARRAY_BUFFER,this.normalArray,e.STATIC_DRAW);for(var i=0;i<t;++i){var l=24*i;n[l]=n[l+12]=0,n[l+1]=n[l+13]=0,n[l+2]=n[l+14]=0,n[l+3]=n[l+15]=1,n[l+4]=1,n[l+5]=0,n[l+6]=0,n[l+7]=1,n[l+8]=n[l+16]=1,n[l+9]=n[l+17]=1,n[l+10]=n[l+18]=0,n[l+11]=n[l+19]=1,n[l+20]=0,n[l+21]=1,n[l+22]=0,n[l+23]=1}e.bindBuffer(e.ARRAY_BUFFER,this.texCoordBuffers[0]),e.bufferData(e.ARRAY_BUFFER,this.texCoordArray,e.STATIC_DRAW),this.testWireframe=!0,this.primitiveMode=e.TRIANGLES,this.texCoordCount=4,this.vertexCount=6,this.geometryContext.geometryType=2;break;case w:this.texCoordCount=0,this.vertexCount=0}e.bindBuffer(e.ARRAY_BUFFER,this.idBuffer),e.bufferData(e.ARRAY_BUFFER,this.idArray,e.STATIC_DRAW),this.set_shader__(),this.set_transparent__()},set_shader__:function(){switch(this.geometryType){case g:this.shaderNode=this.getBrowser().getPointShader();break;case x:this.shaderNode=this.getBrowser().getLineShader();break;case A:case F:case R:case w:this.shaderNode=null}},set_maxParticles__:function(){for(var e=this.particles,t=Math.max(0,this.maxParticles_.getValue()),i=this.numParticles,s=Math.min(e.length,t);i<s;++i)e[i].life=1,e[i].lifetime=-1;for(var i=e.length,s=t;i<s;++i)e[i]={id:i,life:1,lifetime:-1,elapsedTime:0,position:new l(0,0,0),velocity:new l(0,0,0),color:new h(1,1,1,1),distance:0};this.maxParticles=t,this.numParticles=Math.min(this.numParticles,t),this.emitterNode.isExplosive()||(this.creationTime=performance.now()/1e3),this.set_geometryType__()},set_particleLifetime__:function(){this.particleLifetime=this.particleLifetime_.getValue()},set_lifetimeVariation__:function(){this.lifetimeVariation=this.lifetimeVariation_.getValue()},set_emitter__:function(){this.emitterNode=o(n.X3DParticleEmitterNode,this.emitter_),this.emitterNode||(this.emitterNode=this.getBrowser().getDefaultEmitter()),this.createParticles=this.createParticles_.getValue()},set_physics__:function(){for(var e=this.physics_.getValue(),t=this.forcePhysicsModelNodes,i=this.boundedPhysicsModelNodes,s=0,r=i.length;s<r;++s)i[s].removeInterest("set_boundedPhysics__",this);t.length=0,i.length=0;for(var s=0,r=e.length;s<r;++s)try{for(var o=e[s].getValue().getInnerNode(),a=o.getType(),l=a.length-1;l>=0;--l){switch(a[l]){case n.ForcePhysicsModel:case n.WindPhysicsModel:t.push(o);break;case n.BoundedPhysicsModel:o.addInterest("set_boundedPhysics__",this),i.push(o);break;default:continue}break}}catch(e){}this.set_boundedPhysics__()},set_boundedPhysics__:function(){var e=this.boundedPhysicsModelNodes,t=this.boundedNormals,i=this.boundedVertices;t.length=0,i.length=0;for(var s=0,r=e.length;s<r;++s)e[s].addGeometry(t,i);this.boundedVolume=new f(i,t)},set_colorRamp__:function(){this.colorRampNode&&this.colorRampNode.removeInterest("set_color__",this),this.colorRampNode=o(n.X3DColorNode,this.colorRamp_),this.colorRampNode&&this.colorRampNode.addInterest("set_color__",this),this.set_color__(),this.set_transparent__()},set_color__:function(){for(var e=this.colorKey_,t=this.colorKeys,i=this.colorRamp,s=0,r=e.length;s<r;++s)t[s]=e[s];t.length=r,this.colorRampNode&&this.colorRampNode.getVectors(this.colorRamp);for(var s=i.length,r=e.length;s<r;++s)i[s]=new h(1,1,1,1);i.length=r,this.geometryContext.colorMaterial=!(!t.length||!this.colorRampNode)},set_texCoordRamp__:function(){this.texCoordRampNode&&this.texCoordRampNode.removeInterest("set_texCoord__",this),this.texCoordRampNode=o(n.X3DTextureCoordinateNode,this.texCoordRamp_),this.texCoordRampNode&&this.texCoordRampNode.addInterest("set_texCoord__",this),this.set_texCoord__()},set_texCoord__:function(){for(var e=this.texCoordKey_,t=this.texCoordKeys,i=this.texCoordRamp,s=0,r=e.length;s<r;++s)t[s]=e[s];t.length=r,this.texCoordRampNode&&this.texCoordRampNode.getTexCoord(i);for(var s=i.length,r=e.length*this.texCoordCount;s<r;++s)i[s]=new h(0,0,0,0);i.length=r,this.texCoordAnim=!(!t.length||!this.texCoordRampNode)},intersectsBox:function(e,t){},animateParticles:function(){var e=this.emitterNode,t=1/Math.max(10,this.getBrowser().getCurrentFrameRate()),i=this.deltaTime=(14*this.deltaTime+t)/15;if(e.isExplosive()){var s=performance.now()/1e3,r=this.particleLifetime+this.particleLifetime*this.lifetimeVariation;0===this.numParticles||s-this.creationTime>r?(this.creationTime=s,this.numParticles=this.maxParticles,this.createParticles=this.createParticles_.getValue(),i=Number.POSITIVE_INFINITY):this.createParticles=!1}else if(this.numParticles<this.maxParticles){var s=performance.now()/1e3,n=Math.max(0,Math.floor((s-this.creationTime)*this.maxParticles/this.particleLifetime));n&&(this.creationTime=s),this.numParticles=Math.floor(Math.min(this.maxParticles,this.numParticles+n))}if(e.getMass()){for(var o=this.forcePhysicsModelNodes,a=this.velocities,h=this.speeds,d=this.turbulences,c=this.deltaTime/e.getMass(),u=a.length,m=o.length;u<m;++u)a[u]=new l(0,0,0);for(var u=0,m=o.length;u<m;++u)o[u].addForce(u,e,a,d);for(var u=0,m=a.length;u<m;++u)a[u].multiply(c),h[u]=a[u].abs();this.numForces=m}else this.numForces=0;e.animate(this,i),this.updateGeometry(null),this.getBrowser().addBrowserEvent()},updateGeometry:function(e){switch(this.geometryType){case g:e||this.updatePoint();break;case x:e||this.updateLine();break;case A:case F:case R:this.updateQuad(e);break;case w:}},updatePoint:function(){var e=this.getBrowser().getContext(),t=this.particles,i=this.numParticles,s=this.positionArray,r=this.elapsedTimeArray,n=this.lifeArray,o=this.colorArray,a=this.vertexArray;if(this.geometryContext.colorMaterial){for(var l=0;l<i;++l){var h=t[l].color,d=4*l;o[d]=h.x,o[d+1]=h.y,o[d+2]=h.z,o[d+3]=h.w}e.bindBuffer(e.ARRAY_BUFFER,this.colorBuffer),e.bufferData(e.ARRAY_BUFFER,this.colorArray,e.STATIC_DRAW)}for(var l=0;l<i;++l){var c=t[l].position,u=t[l].elapsedTime/t[l].lifetime,m=3*l,d=4*l;s[m]=c.x,s[m+1]=c.y,s[m+2]=c.z,r[l]=u,n[l]=t[l].life,a[d]=c.x,a[d+1]=c.y,a[d+2]=c.z}e.bindBuffer(e.ARRAY_BUFFER,this.positionBuffer),e.bufferData(e.ARRAY_BUFFER,this.positionArray,e.STATIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,this.elapsedTimeBuffer),e.bufferData(e.ARRAY_BUFFER,this.elapsedTimeArray,e.STATIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,this.lifeBuffer),e.bufferData(e.ARRAY_BUFFER,this.lifeArray,e.STATIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer),e.bufferData(e.ARRAY_BUFFER,this.vertexArray,e.STATIC_DRAW)},updateLine:function(){var e=this.getBrowser().getContext(),t=this.particles,i=this.numParticles,s=this.positionArray,r=this.elapsedTimeArray,n=this.lifeArray,o=this.colorArray,a=this.vertexArray,l=this.particleSize_.y/2;if(this.geometryContext.colorMaterial){for(var h=0;h<i;++h){var d=t[h].color,c=8*h;o[c]=d.x,o[c+1]=d.y,o[c+2]=d.z,o[c+3]=d.w,o[c+4]=d.x,o[c+5]=d.y,o[c+6]=d.z,o[c+7]=d.w}e.bindBuffer(e.ARRAY_BUFFER,this.colorBuffer),e.bufferData(e.ARRAY_BUFFER,this.colorArray,e.STATIC_DRAW)}for(var h=0;h<i;++h){var u=t[h],m=u.position,f=t[h].elapsedTime/t[h].lifetime,p=t[h].life,_=m.x,y=m.y,g=m.z,x=2*h,A=6*h,c=8*h;s[A]=_,s[A+1]=y,s[A+2]=g,s[A+3]=_,s[A+4]=y,s[A+5]=g,r[x]=f,r[x+1]=f,n[x]=p,n[x+1]=p,N.assign(u.velocity).normalize().multiply(l),a[c]=_-N.x,a[c+1]=y-N.y,a[c+2]=g-N.z,a[c+4]=_+N.x,a[c+5]=y+N.y,a[c+6]=g+N.z}e.bindBuffer(e.ARRAY_BUFFER,this.positionBuffer),e.bufferData(e.ARRAY_BUFFER,this.positionArray,e.STATIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,this.elapsedTimeBuffer),e.bufferData(e.ARRAY_BUFFER,this.elapsedTimeArray,e.STATIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,this.lifeBuffer),e.bufferData(e.ARRAY_BUFFER,this.lifeArray,e.STATIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer),e.bufferData(e.ARRAY_BUFFER,this.vertexArray,e.STATIC_DRAW)},updateQuad:function(e){try{var t=this.getBrowser().getContext(),i=this.particles,s=this.maxParticles,r=this.numParticles,n=this.positionArray,o=this.elapsedTimeArray,a=this.lifeArray,l=this.colorArray,h=this.texCoordArray,d=this.normalArray,c=this.vertexArray,u=this.particleSize_.x/2,f=this.particleSize_.y/2;if(!e){if(this.geometryContext.colorMaterial){for(var p=0;p<s;++p){var _=i[p].color,y=24*p;l[y]=l[y+4]=l[y+8]=l[y+12]=l[y+16]=l[y+20]=_.x,l[y+1]=l[y+5]=l[y+9]=l[y+13]=l[y+17]=l[y+21]=_.y,l[y+2]=l[y+6]=l[y+10]=l[y+14]=l[y+18]=l[y+22]=_.z,l[y+3]=l[y+7]=l[y+11]=l[y+15]=l[y+19]=l[y+23]=_.w}t.bindBuffer(t.ARRAY_BUFFER,this.colorBuffer),
t.bufferData(t.ARRAY_BUFFER,this.colorArray,t.STATIC_DRAW)}if(this.texCoordAnim&&this.texCoordArray.length){for(var g=this.texCoordKeys,x=this.texCoordRamp,A=g.length,F=0,p=0;p<s;++p){var w=i[p],b=w.elapsedTime/w.lifetime;if(1==A||b<=g[0])F=0;else if(b>=g.at(-1))F=A-2;else{var P=m.upperBound(g,0,A,b,m.less);F=P<A?P-1:0}F*=this.texCoordCount;var v=x[F],S=x[F+1],M=x[F+2],I=x[F+3],y=24*p;h[y]=h[y+12]=v.x,h[y+1]=h[y+13]=v.y,h[y+2]=h[y+14]=v.z,h[y+3]=h[y+15]=v.w,h[y+4]=S.x,h[y+5]=S.y,h[y+6]=S.z,h[y+7]=S.w,h[y+8]=h[y+16]=M.x,h[y+9]=h[y+17]=M.y,h[y+10]=h[y+18]=M.z,h[y+11]=h[y+19]=M.w,h[y+20]=I.x,h[y+21]=I.y,h[y+22]=I.z,h[y+23]=I.w}t.bindBuffer(t.ARRAY_BUFFER,this.texCoordBuffers[0]),t.bufferData(t.ARRAY_BUFFER,this.texCoordArray,t.STATIC_DRAW)}}if(this.geometryType===R){if(e){var z=this.getScreenAlignedRotation(e);N.set(z[0],z[1],z[2]).cross(B.set(z[3],z[4],z[5])).normalize();for(var E=N.x,O=N.y,U=N.z,p=0,A=18*s;p<A;p+=3)d[p]=E,d[p+1]=O,d[p+2]=U;t.bindBuffer(t.ARRAY_BUFFER,this.normalBuffer),t.bufferData(t.ARRAY_BUFFER,this.normalArray,t.STATIC_DRAW),C.set(-u,-f,0),T.set(u,-f,0),D.set(u,f,0),V.set(-u,f,0),z.multVecMatrix(C),z.multVecMatrix(T),z.multVecMatrix(D),z.multVecMatrix(V);for(var p=0;p<r;++p){var X=i[p].position,Y=i[p].elapsedTime/i[p].lifetime,L=X.x,W=X.y,j=X.z,G=6*p,k=18*p,y=24*p;n[k]=n[k+3]=n[k+6]=n[k+9]=n[k+12]=n[k+15]=L,n[k+1]=n[k+4]=n[k+7]=n[k+10]=n[k+13]=n[k+16]=W,n[k+2]=n[k+5]=n[k+8]=n[k+11]=n[k+14]=n[k+17]=j,o[G]=o[G+1]=o[G+2]=o[G+3]=o[G+4]=o[G+5]=Y,a[G]=a[G+1]=a[G+2]=a[G+3]=a[G+4]=a[G+5]=i[p].life,c[y]=c[y+12]=L+C.x,c[y+1]=c[y+13]=W+C.y,c[y+2]=c[y+14]=j+C.z,c[y+4]=L+T.x,c[y+5]=W+T.y,c[y+6]=j+T.z,c[y+8]=c[y+16]=L+D.x,c[y+9]=c[y+17]=W+D.y,c[y+10]=c[y+18]=j+D.z,c[y+20]=L+V.x,c[y+21]=W+V.y,c[y+22]=j+V.z}t.bindBuffer(t.ARRAY_BUFFER,this.positionBuffer),t.bufferData(t.ARRAY_BUFFER,this.positionArray,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.elapsedTimeBuffer),t.bufferData(t.ARRAY_BUFFER,this.elapsedTimeArray,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.lifeBuffer),t.bufferData(t.ARRAY_BUFFER,this.lifeArray,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,this.vertexArray,t.STATIC_DRAW)}}else if(!e){for(var p=0;p<r;++p){var X=i[p].position,Y=i[p].elapsedTime/i[p].lifetime,L=X.x,W=X.y,j=X.z,G=6*p,k=18*p,y=24*p;n[k]=n[k+3]=n[k+6]=n[k+9]=n[k+12]=n[k+15]=L,n[k+1]=n[k+4]=n[k+7]=n[k+10]=n[k+13]=n[k+16]=W,n[k+2]=n[k+5]=n[k+8]=n[k+11]=n[k+14]=n[k+17]=j,o[G]=o[G+1]=o[G+2]=o[G+3]=o[G+4]=o[G+5]=Y,a[G]=a[G+1]=a[G+2]=a[G+3]=a[G+4]=a[G+5]=i[p].life,c[y]=c[y+12]=L-u,c[y+1]=c[y+13]=W-f,c[y+2]=c[y+14]=j,c[y+4]=L+u,c[y+5]=W-f,c[y+6]=j,c[y+8]=c[y+16]=L+u,c[y+9]=c[y+17]=W+f,c[y+10]=c[y+18]=j,c[y+20]=L-u,c[y+21]=W+f,c[y+22]=j}t.bindBuffer(t.ARRAY_BUFFER,this.positionBuffer),t.bufferData(t.ARRAY_BUFFER,this.positionArray,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.elapsedTimeBuffer),t.bufferData(t.ARRAY_BUFFER,this.elapsedTimeArray,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.lifeBuffer),t.bufferData(t.ARRAY_BUFFER,this.lifeArray,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,this.vertexArray,t.STATIC_DRAW)}}catch(e){console.log(e)}},traverse:function(e,t){if(this.isActive_.getValue()){switch(e){case r.POINTER:break;case r.PICKING:break;case r.COLLISION:break;case r.SHADOW:this.castShadow_.getValue()&&t.addDepthShape(this);break;case r.DISPLAY:t.addDisplayShape(this)&&this.getAppearance().traverse(e,t)}this.geometryType===w&&this.getGeometry()&&this.getGeometry().traverse(e,t)}},depth:function(e,t,i){if(this.updateGeometry(t.modelViewMatrix),this.geometryType===w){var s=this.getGeometry();s&&s.displayParticlesDepth(e,t,i,this.particles,this.numParticles)}else{if(this.numParticles<=0)return;i.getValid()&&(i.enableFloatAttrib(e,"x3d_ParticleId",this.idBuffer,1),i.enableFloatAttrib(e,"x3d_ParticlePosition",this.positionBuffer,3),i.enableFloatAttrib(e,"x3d_ParticleElapsedTime",this.elapsedTimeBuffer,1),i.enableFloatAttrib(e,"x3d_ParticleLife",this.lifeBuffer,1),i.enableVertexAttribute(e,this.vertexBuffer),e.drawArrays(this.primitiveMode,0,this.numParticles*this.vertexCount),i.disableFloatAttrib(e,"x3d_ParticleId"),i.disableFloatAttrib(e,"x3d_ParticlePosition"),i.disableFloatAttrib(e,"x3d_ParticleElapsedTime"),i.disableFloatAttrib(e,"x3d_ParticleLife"))}},display:function(e,t){try{if(this.numParticles<=0)return;if(this.updateGeometry(t.modelViewMatrix),this.geometryType===w){const i=this.getGeometry();i&&i.displayParticles(e,t,this.particles,this.numParticles)}else{const r=this.getAppearance(),n=r.shaderNode||this.shaderNode||r.materialNode.getShader(t.browser,t.shadow);if(n.getValid()){t.geometryContext=this.geometryContext;const o=r.blendModeNode;if(o&&o.enable(e),n.enable(e),n.setLocalUniforms(e,t),n.enableFloatAttrib(e,"x3d_ParticleId",this.idBuffer,1),n.enableFloatAttrib(e,"x3d_ParticlePosition",this.positionBuffer,3),n.enableFloatAttrib(e,"x3d_ParticleElapsedTime",this.elapsedTimeBuffer,1),n.enableFloatAttrib(e,"x3d_ParticleLife",this.lifeBuffer,1),this.geometryContext.colorMaterial&&n.enableColorAttribute(e,this.colorBuffer),this.texCoordArray.length&&n.enableTexCoordAttribute(e,this.texCoordBuffers),this.normalArray.length&&n.enableNormalAttribute(e,this.normalBuffer),n.enableVertexAttribute(e,this.vertexBuffer),n.wireframe&&this.testWireframe)for(var i=0,s=this.numParticles*this.vertexCount;i<s;i+=3)e.drawArrays(n.primitiveMode,i,3);else{const i=d.prototype.determinant3.call(t.modelViewMatrix)>0;e.frontFace(i?e.CCW:e.CW),e.enable(e.CULL_FACE),e.cullFace(e.BACK),e.drawArrays(this.primitiveMode,0,this.numParticles*this.vertexCount)}n.disableFloatAttrib(e,"x3d_ParticleId"),n.disableFloatAttrib(e,"x3d_ParticlePosition"),n.disableFloatAttrib(e,"x3d_ParticleElapsedTime"),n.disableFloatAttrib(e,"x3d_ParticleLife"),n.disableColorAttribute(e),n.disableTexCoordAttribute(e),n.disableNormalAttribute(e),n.disable(e),o&&o.disable(e),t.geometryContext=null}}}catch(e){console.log(e)}},getScreenAlignedRotation:function(e){P.assign(e).inverse(),P.multDirMatrix(v.assign(l.zAxis)),P.multDirMatrix(S.assign(l.yAxis)),M.assign(S).cross(v),I.assign(v).cross(M);var t=v;return M.normalize(),I.normalize(),t.normalize(),this.rotation.set(M.x,M.y,M.z,I.x,I.y,I.z,t.x,t.y,t.z)}}),_}),e("x_ite/Components/ParticleSystems/PolylineEmitter",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Components/Rendering/IndexedLineSet","x_ite/Base/X3DConstants","standard/Math/Numbers/Vector3","standard/Math/Algorithm"],function(e,t,i,s,r,n,o,a){"use strict";function l(e){s.call(this,e),this.addType(n.PolylineEmitter),this.speed_.setUnit("speed"),this.mass_.setUnit("mass"),this.surfaceArea_.setUnit("area"),this.direction=new o(0,0,0),this.polylineNode=new r(e),this.polylines=[],this.lengthSoFarArray=[0]}function h(e){return e.set(0,0,0)}return l.prototype=Object.assign(Object.create(s.prototype),{constructor:l,[Symbol.for("X3DBaseNode.fieldDefinitions")]:new i([new t(n.inputOutput,"metadata",new e.SFNode),new t(n.inputOutput,"direction",new e.SFVec3f(0,1,0)),new t(n.inputOutput,"speed",new e.SFFloat),new t(n.inputOutput,"variation",new e.SFFloat(.25)),new t(n.initializeOnly,"mass",new e.SFFloat),new t(n.initializeOnly,"surfaceArea",new e.SFFloat),new t(n.inputOutput,"coordIndex",new e.MFInt32(-1)),new t(n.inputOutput,"coord",new e.SFNode)]),getTypeName:function(){return"PolylineEmitter"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"emitter"},initialize:function(){s.prototype.initialize.call(this),this.direction_.addInterest("set_direction__",this),this.coordIndex_.addFieldInterest(this.polylineNode.coordIndex_),this.coord_.addFieldInterest(this.polylineNode.coord_),this.polylineNode.coordIndex_=this.coordIndex_,this.polylineNode.coord_=this.coord_,this.polylineNode.rebuild_.addInterest("set_polyline",this),this.polylineNode.setPrivate(!0),this.polylineNode.setup(),this.set_direction__(),this.set_polyline()},set_direction__:function(){this.direction.assign(this.direction_.getValue()).normalize(),this.direction.equals(o.Zero)?this.getRandomVelocity=this.getSphericalRandomVelocity:delete this.getRandomVelocity},set_polyline:function(){var e=new o(0,0,0),t=new o(0,0,0);return function(){var i=this.vertices=this.polylineNode.getVertices().getValue();if(i.length){delete this.getRandomPosition;var s=0,r=this.lengthSoFarArray;r.length=1;for(var n=0,o=i.length;n<o;n+=8)e.set(i[n],i[n+1],i[n+2]),t.set(i[n+4],i[n+5],i[n+6]),s+=t.subtract(e).abs(),r.push(s)}else this.getRandomPosition=h}}(),getRandomPosition:function(e){var t=this.lengthSoFarArray,i=t.length,s=Math.random()*t.at(-1),r=0,n=0,o=0;if(1==i||s<=t[0])r=0,o=0;else if(s>=t.at(-1))r=i-2,o=1;else{var l=a.upperBound(t,0,i,s,a.less);if(l<i){n=l,r=l-1;var h=t[r],d=t[n];o=a.clamp((s-h)/(d-h),0,1)}else r=0,o=0}r*=8,n=r+4;var c=this.vertices,u=c[r],m=c[r+1],f=c[r+2],p=c[n],_=c[n+1],y=c[n+2];return e.x=u+o*(p-u),e.y=m+o*(_-m),e.z=f+o*(y-f),e},getRandomVelocity:function(e){var t=this.direction,i=this.getRandomSpeed();return e.x=t.x*i,e.y=t.y*i,e.z=t.z*i,e}}),l}),e("x_ite/Components/ParticleSystems/SurfaceEmitter",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Base/X3DConstants","x_ite/Base/X3DCast","standard/Math/Geometry/Triangle3","standard/Math/Numbers/Vector3","standard/Math/Algorithm"],function(e,t,i,s,r,n,o,a,l){"use strict";function h(e){s.call(this,e),this.addType(r.SurfaceEmitter),this.speed_.setUnit("speed"),this.mass_.setUnit("mass"),this.surfaceArea_.setUnit("area"),this.surfaceNode=null,this.areaSoFarArray=[0],this.direction=new a(0,0,0)}function d(e){return e.set(0,0,0)}return h.prototype=Object.assign(Object.create(s.prototype),{constructor:h,[Symbol.for("X3DBaseNode.fieldDefinitions")]:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"speed",new e.SFFloat),new t(r.inputOutput,"variation",new e.SFFloat(.25)),new t(r.initializeOnly,"mass",new e.SFFloat),new t(r.initializeOnly,"surfaceArea",new e.SFFloat),new t(r.initializeOnly,"surface",new e.SFNode)]),getTypeName:function(){return"SurfaceEmitter"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"emitter"},initialize:function(){s.prototype.initialize.call(this),this.surface_.addInterest("set_surface__",this),this.set_surface__()},set_surface__:function(){this.surfaceNode&&this.surfaceNode.rebuild_.removeInterest("set_geometry__",this),this.surfaceNode=n(r.X3DGeometryNode,this.surface_),this.surfaceNode&&this.surfaceNode.rebuild_.addInterest("set_geometry__",this),this.set_geometry__()},set_geometry__:function(){var e=new a(0,0,0),t=new a(0,0,0),i=new a(0,0,0);return function(){if(this.surfaceNode){delete this.getRandomPosition,delete this.getRandomVelocity;var s=0,r=this.areaSoFarArray,n=this.surfaceNode.getVertices().getValue();this.normals=this.surfaceNode.getNormals().getValue(),this.vertices=n,r.length=1;for(var a=0,l=n.length;a<l;a+=12)e.set(n[a],n[a+1],n[a+2]),t.set(n[a+4],n[a+5],n[a+6]),i.set(n[a+8],n[a+9],n[a+10]),s+=o.area(e,t,i),r.push(s)}else this.getRandomPosition=d,this.getRandomVelocity=this.getSphericalRandomVelocity}}(),getRandomPosition:function(e){var t=this.areaSoFarArray,i=t.length,s=Math.random()*t.at(-1),r=0;if(1==i||s<=t[0])r=0;else if(s>=t.at(-1))r=i-2;else{var n=l.upperBound(t,0,i,s,l.less);r=n<i?n-1:0}var o=Math.random(),a=Math.random();o+a>1&&(o=1-o,a=1-a);var h=1-o-a,d=12*r,c=this.vertices;e.x=o*c[d]+a*c[d+4]+h*c[d+8],e.y=o*c[d+1]+a*c[d+5]+h*c[d+9],e.z=o*c[d+2]+a*c[d+6]+h*c[d+10];var d=9*r,u=this.normals,m=this.direction;return m.x=o*u[d]+a*u[d+3]+h*u[d+6],m.y=o*u[d+1]+a*u[d+4]+h*u[d+7],m.z=o*u[d+2]+a*u[d+5]+h*u[d+8],e},getRandomVelocity:function(e){var t=this.getRandomSpeed(),i=this.direction;return e.x=i.x*t,e.y=i.y*t,e.z=i.z*t,e}}),h}),e("x_ite/Components/ParticleSystems/VolumeEmitter",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Components/Geometry3D/IndexedFaceSet","x_ite/Base/X3DConstants","standard/Math/Numbers/Vector3","standard/Math/Numbers/Rotation4","standard/Math/Geometry/Line3","standard/Math/Geometry/Plane3","standard/Math/Geometry/Triangle3","standard/Math/Algorithm","standard/Math/Utility/BVH","standard/Math/Algorithms/QuickSort"],function(e,t,i,s,r,n,o,a,l,h,d,c,u,m){"use strict";function f(e){s.call(this,e),this.addType(n.VolumeEmitter),this.speed_.setUnit("speed"),this.mass_.setUnit("mass"),this.surfaceArea_.setUnit("area"),this.direction=new o(0,0,0),this.volumeNode=new r(e),this.areaSoFarArray=[0]}return f.prototype=Object.assign(Object.create(s.prototype),{constructor:f,[Symbol.for("X3DBaseNode.fieldDefinitions")]:new i([new t(n.inputOutput,"metadata",new e.SFNode),new t(n.initializeOnly,"internal",new e.SFBool(!0)),new t(n.inputOutput,"direction",new e.SFVec3f(0,1,0)),new t(n.inputOutput,"speed",new e.SFFloat),new t(n.inputOutput,"variation",new e.SFFloat(.25)),new t(n.initializeOnly,"mass",new e.SFFloat),new t(n.initializeOnly,"surfaceArea",new e.SFFloat),new t(n.inputOutput,"coordIndex",new e.MFInt32(-1)),new t(n.inputOutput,"coord",new e.SFNode)]),getTypeName:function(){return"VolumeEmitter"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"emitter"},initialize:function(){s.prototype.initialize.call(this),this.direction_.addInterest("set_direction__",this),this.coordIndex_.addFieldInterest(this.volumeNode.coordIndex_),this.coord_.addFieldInterest(this.volumeNode.coord_),this.volumeNode.creaseAngle_=Math.PI,this.volumeNode.convex_=!1,this.volumeNode.coordIndex_=this.coordIndex_,this.volumeNode.coord_=this.coord_,this.volumeNode.rebuild_.addInterest("set_geometry__",this),this.volumeNode.setPrivate(!0),this.volumeNode.setup(),this.set_direction__(),this.set_geometry__()},set_direction__:function(){this.direction.assign(this.direction_.getValue()).normalize(),this.direction.equals(o.Zero)?this.getRandomVelocity=this.getSphericalRandomVelocity:delete this.getRandomVelocity},set_geometry__:function(){var e=new o(0,0,0),t=new o(0,0,0),i=new o(0,0,0);return function(){var s=0,r=this.areaSoFarArray,n=this.volumeNode.getNormals().getValue(),o=this.volumeNode.getVertices().getValue();this.normals=n,this.vertices=o,r.length=1;for(var a=0,l=o.length;a<l;a+=12)e.set(o[a],o[a+1],o[a+2]),t.set(o[a+4],o[a+5],o[a+6]),i.set(o[a+8],o[a+9],o[a+10]),s+=d.area(e,t,i),r.push(s);this.bvh=new u(o,n)}}(),getRandomPosition:function(){function e(e,t){return n.getDistanceToPoint(e)<n.getDistanceToPoint(t)}var t=new o(0,0,0),i=new o(0,0,0),s=new a(0,0,1,0),r=new l(o.Zero,o.zAxis),n=new h(o.Zero,o.zAxis),d=[],u=new m(d,e);return function(e){var a=this.areaSoFarArray,l=a.length,h=Math.random()*a.at(-1),m=0;if(1==l||h<=a[0])m=0;else if(h>=a.at(-1))m=l-2;else{var f=c.upperBound(a,0,l,h,c.less);m=f<l?f-1:0}var p=Math.random(),_=Math.random();p+_>1&&(p=1-p,_=1-_);var y=1-p-_,g=12*m,x=this.vertices;t.x=p*x[g]+_*x[g+4]+y*x[g+8],t.y=p*x[g+1]+_*x[g+5]+y*x[g+9],t.z=p*x[g+2]+_*x[g+6]+y*x[g+10];var g=9*m,A=this.normals;i.x=p*A[g]+_*A[g+3]+y*A[g+6],i.y=p*A[g+1]+_*A[g+4]+y*A[g+7],i.z=p*A[g+2]+_*A[g+5]+y*A[g+8],s.setFromToVec(o.zAxis,i),s.multVecRot(this.getRandomSurfaceNormal(i)),r.set(t,i),n.set(t,i);var F=this.bvh.intersectsLine(r,d);if(F-=F%2){u.sort(0,F);var f=2*Math.round(this.getRandomValue(0,F/2-1)),w=d[f],R=d[f+1],y=Math.random();return e.x=w.x+(R.x-w.x)*y,e.y=w.y+(R.y-w.y)*y,e.z=w.z+(R.z-w.z)*y,e}return e.set(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)}}(),getRandomVelocity:function(e){var t=this.direction,i=this.getRandomSpeed();return e.x=t.x*i,e.y=t.y*i,e.z=t.z*i,e}}),f}),e("x_ite/Components/ParticleSystems/WindPhysicsModel",["x_ite/Fields","x_ite/Base/X3DFieldDefinition","x_ite/Base/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticlePhysicsModelNode","x_ite/Base/X3DConstants","standard/Math/Numbers/Vector3","standard/Math/Algorithm"],function(e,t,i,s,r,n,o){"use strict";function a(e){s.call(this,e),this.addType(r.WindPhysicsModel),this.speed_.setUnit("speed")}return a.prototype=Object.assign(Object.create(s.prototype),{constructor:a,[Symbol.for("X3DBaseNode.fieldDefinitions")]:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"enabled",new e.SFBool(!0)),new t(r.inputOutput,"direction",new e.SFVec3f),new t(r.inputOutput,"speed",new e.SFFloat(.1)),new t(r.inputOutput,"gustiness",new e.SFFloat(.1)),new t(r.inputOutput,"turbulence",new e.SFFloat)]),getTypeName:function(){return"WindPhysicsModel"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"physics"},getRandomSpeed:function(e){var t=Math.max(0,this.speed_.getValue()),i=t*Math.max(0,this.gustiness_.getValue());return e.getRandomValue(Math.max(0,t-i),t+i)},addForce:function(){var e=new n(0,0,0);return function(t,i,s,r){var a=i.surfaceArea_.getValue();if(this.enabled_.getValue()){var l=this.getRandomSpeed(i),h=.64615*Math.pow(10,2*Math.log(l));this.direction_.getValue().equals(n.Zero)?i.getRandomNormal(e):e.assign(this.direction_.getValue()).normalize(),s[t].assign(e.multiply(a*h)),r[t]=Math.PI*o.clamp(this.turbulence_.getValue(),0,1)}}}()}),a}),e(t.getComponentUrl("particle-systems"),["x_ite/Components","x_ite/Browser/ParticleSystems/X3DParticleSystemsContext","x_ite/Components/ParticleSystems/BoundedPhysicsModel","x_ite/Components/ParticleSystems/ConeEmitter","x_ite/Components/ParticleSystems/ExplosionEmitter","x_ite/Components/ParticleSystems/ForcePhysicsModel","x_ite/Components/ParticleSystems/ParticleSystem","x_ite/Components/ParticleSystems/PointEmitter","x_ite/Components/ParticleSystems/PolylineEmitter","x_ite/Components/ParticleSystems/SurfaceEmitter","x_ite/Components/ParticleSystems/VolumeEmitter","x_ite/Components/ParticleSystems/WindPhysicsModel","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Components/ParticleSystems/X3DParticlePhysicsModelNode"],function(e,t,i,s,r,n,o,a,l,h,d,c,u,m){"use strict";e.addComponent({name:"ParticleSystems",types:{BoundedPhysicsModel:i,ConeEmitter:s,ExplosionEmitter:r,ForcePhysicsModel:n,ParticleSystem:o,PointEmitter:a,PolylineEmitter:l,SurfaceEmitter:h,VolumeEmitter:d,WindPhysicsModel:c},abstractTypes:{X3DParticleEmitterNode:u,X3DParticlePhysicsModelNode:m},browser:t})})}();
