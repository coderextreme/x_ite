/* X_ITE v9.5.0 */(()=>{"use strict";var t={n:e=>{var s=e&&e.__esModule?()=>e.default:()=>e;return t.d(s,{a:s}),s},d:(e,s)=>{for(var i in s)t.o(s,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:s[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const e=window[Symbol.for("X_ITE.X3D-9.5.0")].require("x_ite/Components");var s=t.n(e);const i=window[Symbol.for("X_ITE.X3D-9.5.0")].require("x_ite/Fields");var n=t.n(i);const o=window[Symbol.for("X_ITE.X3D-9.5.0")].require("x_ite/Base/X3DFieldDefinition");var a=t.n(o);const r=window[Symbol.for("X_ITE.X3D-9.5.0")].require("x_ite/Base/FieldDefinitionArray");var _=t.n(r);const p=window[Symbol.for("X_ITE.X3D-9.5.0")].require("x_ite/Components/Shape/X3DAppearanceChildNode");var h=t.n(p);const l=window[Symbol.for("X_ITE.X3D-9.5.0")].require("x_ite/Base/X3DConstants");var c=t.n(l);const u=window[Symbol.for("X_ITE.X3D-9.5.0")].require("x_ite/Namespace");var d=t.n(u);function T(t){h().call(this,t),this.addType(c().BlendMode),this.factorTypes=new Map,this.equationTypes=new Map}Object.assign(Object.setPrototypeOf(T.prototype,h().prototype),{initialize(){h().prototype.initialize.call(this);const t=this.getBrowser().getContext(),e=t.getExtension("EXT_blend_minmax");this.factorTypes.set("ZERO",t.ZERO),this.factorTypes.set("ONE",t.ONE),this.factorTypes.set("SRC_COLOR",t.SRC_COLOR),this.factorTypes.set("ONE_MINUS_SRC_COLOR",t.ONE_MINUS_SRC_COLOR),this.factorTypes.set("DST_COLOR",t.DST_COLOR),this.factorTypes.set("ONE_MINUS_DST_COLOR",t.ONE_MINUS_DST_COLOR),this.factorTypes.set("SRC_ALPHA",t.SRC_ALPHA),this.factorTypes.set("ONE_MINUS_SRC_ALPHA",t.ONE_MINUS_SRC_ALPHA),this.factorTypes.set("DST_ALPHA",t.DST_ALPHA),this.factorTypes.set("ONE_MINUS_DST_ALPHA",t.ONE_MINUS_DST_ALPHA),this.factorTypes.set("SRC_ALPHA_SATURATE",t.SRC_ALPHA_SATURATE),this.factorTypes.set("CONSTANT_COLOR",t.CONSTANT_COLOR),this.factorTypes.set("ONE_MINUS_CONSTANT_COLOR",t.ONE_MINUS_CONSTANT_COLOR),this.factorTypes.set("CONSTANT_ALPHA",t.CONSTANT_ALPHA),this.factorTypes.set("ONE_MINUS_CONSTANT_ALPHA",t.ONE_MINUS_CONSTANT_ALPHA),this.equationTypes.set("FUNC_ADD",t.FUNC_ADD),this.equationTypes.set("FUNC_SUBTRACT",t.FUNC_SUBTRACT),this.equationTypes.set("FUNC_REVERSE_SUBTRACT",t.FUNC_REVERSE_SUBTRACT),this.equationTypes.set("MIN",t.MIN||e&&e.MIN_EXT),this.equationTypes.set("MAX",t.MAX||e&&e.MAX_EXT),this._sourceColorFactor.addInterest("set_sourceColorFactor__",this),this._sourceAlphaFactor.addInterest("set_sourceAlphaFactor__",this),this._destinationColorFactor.addInterest("set_destinationColorFactor__",this),this._destinationAlphaFactor.addInterest("set_destinationAlphaFactor__",this),this._colorEquation.addInterest("set_colorEquation__",this),this._alphaEquation.addInterest("set_alphaEquation__",this),this.set_sourceColorFactor__(),this.set_sourceAlphaFactor__(),this.set_destinationColorFactor__(),this.set_destinationAlphaFactor__(),this.set_colorEquation__(),this.set_alphaEquation__()},set_sourceColorFactor__(){this.sourceColorFactorType=this.factorTypes.get(this._sourceColorFactor.getValue()),void 0===this.sourceColorFactorType&&(this.sourceColorFactorType=this.factorTypes.get("SRC_ALPHA"))},set_sourceAlphaFactor__(){this.sourceAlphaFactorType=this.factorTypes.get(this._sourceAlphaFactor.getValue()),void 0===this.sourceAlphaFactorType&&(this.sourceAlphaFactorType=this.factorTypes.get("ONE"))},set_destinationColorFactor__(){this.destinationColorFactorType=this.factorTypes.get(this._destinationColorFactor.getValue()),void 0===this.destinationColorFactorType&&(this.destinationColorFactorType=this.factorTypes.get("ONE_MINUS_SRC_ALPHA"))},set_destinationAlphaFactor__(){this.destinationAlphaFactorType=this.factorTypes.get(this._destinationAlphaFactor.getValue()),void 0===this.destinationAlphaFactorType&&(this.destinationAlphaFactorType=this.factorTypes.get("ONE_MINUS_SRC_ALPHA"))},set_colorEquation__(){this.colorEquationType=this.equationTypes.get(this._colorEquation.getValue()),void 0===this.colorEquationType&&(this.colorEquationType=this.equationTypes.get("FUNC_ADD"))},set_alphaEquation__(){this.alphaEquationType=this.equationTypes.get(this._alphaEquation.getValue()),void 0===this.alphaEquationType&&(this.alphaEquationType=this.equationTypes.get("FUNC_ADD"))},enable(t){const e=this._blendColor.getValue();t.blendColor(e.r,e.g,e.b,e.a),t.blendFuncSeparate(this.sourceColorFactorType,this.destinationColorFactorType,this.sourceAlphaFactorType,this.destinationAlphaFactorType),t.blendEquationSeparate(this.colorEquationType,this.alphaEquationType)},disable(t){t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA),t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD)}}),Object.defineProperties(T,{typeName:{value:"BlendMode",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"blendMode",enumerable:!0},specificationRange:{value:Object.freeze({from:"3.3",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(_())([new(a())(c().inputOutput,"metadata",new(n().SFNode)),new(a())(c().inputOutput,"blendColor",new(n().SFColorRGBA)),new(a())(c().inputOutput,"sourceColorFactor",new(n().SFString)("SRC_ALPHA")),new(a())(c().inputOutput,"sourceAlphaFactor",new(n().SFString)("ONE")),new(a())(c().inputOutput,"destinationColorFactor",new(n().SFString)("ONE_MINUS_SRC_ALPHA")),new(a())(c().inputOutput,"destinationAlphaFactor",new(n().SFString)("ONE_MINUS_SRC_ALPHA")),new(a())(c().inputOutput,"colorEquation",new(n().SFString)("FUNC_ADD")),new(a())(c().inputOutput,"alphaEquation",new(n().SFString)("FUNC_ADD"))]),enumerable:!0}});const S=T;d().add("BlendMode","x_ite/Components/X_ITE/BlendMode",S);const E=S;function A(t){h().call(this,t),this.addType(c().DepthMode)}Object.assign(Object.setPrototypeOf(A.prototype,h().prototype),{initialize(){h().prototype.initialize.call(this),this._depthFunc.addInterest("set_depthFunc__",this),this.set_depthFunc__()},set_depthFunc__:function(){const t=new Map([["NEVER","NEVER"],["LESS","LESS"],["EQUAL","EQUAL"],["LESS_EQUAL","LEQUAL"],["GREATER","GREATER"],["NOT_EQUAL","NOTEQUAL"],["GREATER_EQUAL","GEQUAL"],["ALWAYS","ALWAYS"]]);return function(){const e=this.getBrowser().getContext();this.depthFunc=e[t.get(this._depthFunc.getValue())??"LEQUAL"]}}(),enable(t){this.depthTest=t.isEnabled(t.DEPTH_TEST),this.depthWriteMask=t.getParameter(t.DEPTH_WRITEMASK),t.enable(t.POLYGON_OFFSET_FILL),t.polygonOffset(...this._polygonOffset),this._depthTest.getValue()?t.enable(t.DEPTH_TEST):t.disable(t.DEPTH_TEST),t.depthFunc(this.depthFunc),t.depthRange(...this._depthRange.getValue()),t.depthMask(this._depthMask.getValue())},disable(t){t.disable(t.POLYGON_OFFSET_FILL),this.depthTest?t.enable(t.DEPTH_TEST):t.disable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.depthRange(0,1),t.depthMask(this.depthWriteMask)}}),Object.defineProperties(A,{typeName:{value:"DepthMode",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"depthMode",enumerable:!0},specificationRange:{value:Object.freeze({from:"4.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(_())([new(a())(c().inputOutput,"metadata",new(n().SFNode)),new(a())(c().inputOutput,"polygonOffset",new(n().SFVec2f)),new(a())(c().inputOutput,"depthRange",new(n().SFVec2f)(0,1)),new(a())(c().inputOutput,"depthTest",new(n().SFBool)(!0)),new(a())(c().inputOutput,"depthFunc",new(n().SFString)("LESS_EQUAL")),new(a())(c().inputOutput,"depthMask",new(n().SFBool)(!0))]),enumerable:!0}});const y=A;d().add("DepthMode","x_ite/Components/X_ITE/DepthMode",y);const O=y,F=window[Symbol.for("X_ITE.X3D-9.5.0")].require("x_ite/Components/Shape/X3DShapeNode");var f=t.n(F);const b=window[Symbol.for("X_ITE.X3D-9.5.0")].require("x_ite/Rendering/TraverseType");var C=t.n(b);const N=window[Symbol.for("X_ITE.X3D-9.5.0")].require("x_ite/Rendering/VertexArray");var w=t.n(N);const m=window[Symbol.for("X_ITE.X3D-9.5.0")].require("standard/Math/Numbers/Matrix4");var g=t.n(m);function I(t){f().call(this,t),this.addType(c().InstancedShape),this.addChildObjects(c().outputOnly,"matrices",new(n().SFTime))}Object.assign(Object.setPrototypeOf(I.prototype,f().prototype),{initialize(){f().prototype.initialize.call(this);const t=this.getBrowser(),e=t.getContext();t.getContext().getVersion()<2||(this.numInstances=0,this.instances=Object.assign(e.createBuffer(),{vertexArrayObject:new(w())(e)}),this.instancesStride=25*Float32Array.BYTES_PER_ELEMENT,this.matrixOffset=0,this.normalMatrixOffset=16*Float32Array.BYTES_PER_ELEMENT,this._translations.addInterest("set_transform__",this),this._rotations.addInterest("set_transform__",this),this._scales.addInterest("set_transform__",this),this._matrices.addInterest("set_matrices__",this),this.set_transform__())},getShapeKey:()=>3,getNumInstances(){return this.numInstances},getInstances(){return this.instances},set_bbox__(){},set_transform__(){this._matrices=this.getBrowser().getCurrentTime()},set_matrices__(){const t=this.getBrowser().getContext(),e=this._translations,s=this._rotations,i=this._scales,n=e.length,o=s.length,a=i.length,r=Math.max(n,o,a),_=this.instancesStride/Float32Array.BYTES_PER_ELEMENT,p=this.instancesStride*r,h=new Float32Array(p),l=new(g());this.numInstances=r,f().prototype.set_bbox__.call(this);const c=this.bbox.copy(),u=this.bbox.copy();this.bbox.set();for(let t=0,p=0;t<r;++t,p+=_)l.identity(),n&&l.translate(e[Math.min(t,n-1)].getValue()),o&&l.rotate(s[Math.min(t,o-1)].getValue()),a&&l.scale(i[Math.min(t,a-1)].getValue()),h.set(l,p),h.set(l.submatrix.transpose().inverse(),p+16),this.bbox.add(u.assign(c).multRight(l));this.getBBoxSize().assign(this.bbox.size),this.getBBoxCenter().assign(this.bbox.center),t.bindBuffer(t.ARRAY_BUFFER,this.instances),t.bufferData(t.ARRAY_BUFFER,h,t.DYNAMIC_DRAW)},set_geometry__(){f().prototype.set_geometry__.call(this),this.getGeometry()?delete this.traverse:this.traverse=Function.prototype,this.set_transform__()},intersectsBox(t,e,s){},traverse(t,e){if(this.numInstances){switch(t){case C().POINTER:this._pointerEvents.getValue()&&e.addPointingShape(this);break;case C().PICKING:break;case C().COLLISION:e.addCollisionShape(this);break;case C().SHADOW:this._castShadow.getValue()&&e.addShadowShape(this);break;case C().DISPLAY:e.addDisplayShape(this)&&this.getAppearance().traverse(t,e)}this.getGeometry().traverse(t,e)}},displaySimple(t,e,s){this.getGeometry().displaySimpleInstanced(t,s,this)},display(t,e){this.getGeometry().displayInstanced(t,e,this)}}),Object.defineProperties(I,{typeName:{value:"InstancedShape",enumerable:!0},componentInfo:{value:Object.freeze({name:"X_ITE",level:1}),enumerable:!0},containerField:{value:"children",enumerable:!0},specificationRange:{value:Object.freeze({from:"2.0",to:"Infinity"}),enumerable:!0},fieldDefinitions:{value:new(_())([new(a())(c().inputOutput,"metadata",new(n().SFNode)),new(a())(c().inputOutput,"translations",new(n().MFVec3f)),new(a())(c().inputOutput,"rotations",new(n().MFRotation)),new(a())(c().inputOutput,"scales",new(n().MFVec3f)),new(a())(c().inputOutput,"pointerEvents",new(n().SFBool)(!0)),new(a())(c().inputOutput,"castShadow",new(n().SFBool)(!0)),new(a())(c().inputOutput,"visible",new(n().SFBool)(!0)),new(a())(c().inputOutput,"bboxDisplay",new(n().SFBool)),new(a())(c().initializeOnly,"bboxSize",new(n().SFVec3f)(-1,-1,-1)),new(a())(c().initializeOnly,"bboxCenter",new(n().SFVec3f)),new(a())(c().inputOutput,"appearance",new(n().SFNode)),new(a())(c().inputOutput,"geometry",new(n().SFNode))]),enumerable:!0}});const R=I;d().add("InstancedShape","x_ite/Components/X_ITE/InstancedShape",R);const L=R;s().add({name:"X_ITE",concreteNodes:[E,O,L],abstractNodes:[]});const D=void 0;d().add("X_ITE","assets/components/X_ITE",D)})();